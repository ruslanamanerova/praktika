{"version":3,"file":"index.mjs","sources":["../../src/basedirective/BaseDirective.js"],"sourcesContent":["import { Theme, ThemeService } from '@primeuix/styled';\nimport Base from '@primevue/core/base';\nimport BaseStyle from '@primevue/core/base/style';\nimport PrimeVueService from '@primevue/core/service';\nimport { ObjectUtils, UniqueComponentId } from '@primevue/core/utils';\nimport { mergeProps } from 'vue';\n\nconst BaseDirective = {\n    _getMeta: (...args) => [ObjectUtils.isObject(args[0]) ? undefined : args[0], ObjectUtils.getItemValue(ObjectUtils.isObject(args[0]) ? args[0] : args[1])],\n    _getConfig: (binding, vnode) => (binding?.instance?.$primevue || vnode?.ctx?.appContext?.config?.globalProperties?.$primevue)?.config,\n    _getOptionValue: (options, key = '', params = {}) => {\n        const fKeys = ObjectUtils.toFlatCase(key).split('.');\n        const fKey = fKeys.shift();\n\n        return fKey\n            ? ObjectUtils.isObject(options)\n                ? BaseDirective._getOptionValue(ObjectUtils.getItemValue(options[Object.keys(options).find((k) => ObjectUtils.toFlatCase(k) === fKey) || ''], params), fKeys.join('.'), params)\n                : undefined\n            : ObjectUtils.getItemValue(options, params);\n    },\n    _getPTValue: (instance = {}, obj = {}, key = '', params = {}, searchInDefaultPT = true) => {\n        const getValue = (...args) => {\n            const value = BaseDirective._getOptionValue(...args);\n\n            return ObjectUtils.isString(value) || ObjectUtils.isArray(value) ? { class: value } : value;\n        };\n\n        const { mergeSections = true, mergeProps: useMergeProps = false } = instance.binding?.value?.ptOptions || instance.$primevueConfig?.ptOptions || {};\n        const global = searchInDefaultPT ? BaseDirective._useDefaultPT(instance, instance.defaultPT(), getValue, key, params) : undefined;\n        const self = BaseDirective._usePT(instance, BaseDirective._getPT(obj, instance.$name), getValue, key, { ...params, global: global || {} });\n        const datasets = BaseDirective._getPTDatasets(instance, key);\n\n        return mergeSections || (!mergeSections && self) ? (useMergeProps ? BaseDirective._mergeProps(instance, useMergeProps, global, self, datasets) : { ...global, ...self, ...datasets }) : { ...self, ...datasets };\n    },\n    _getPTDatasets(instance = {}, key = '') {\n        const datasetPrefix = 'data-pc-';\n\n        return {\n            ...(key === 'root' && { [`${datasetPrefix}name`]: ObjectUtils.toFlatCase(instance.$name) }),\n            [`${datasetPrefix}section`]: ObjectUtils.toFlatCase(key)\n        };\n    },\n    _getPT: (pt, key = '', callback) => {\n        const getValue = (value) => {\n            const computedValue = callback ? callback(value) : value;\n            const _key = ObjectUtils.toFlatCase(key);\n\n            return computedValue?.[_key] ?? computedValue;\n        };\n\n        return pt?.hasOwnProperty('_usept')\n            ? {\n                  _usept: pt['_usept'],\n                  originalValue: getValue(pt.originalValue),\n                  value: getValue(pt.value)\n              }\n            : getValue(pt);\n    },\n    _usePT: (instance = {}, pt, callback, key, params) => {\n        const fn = (value) => callback(value, key, params);\n\n        if (pt?.hasOwnProperty('_usept')) {\n            const { mergeSections = true, mergeProps: useMergeProps = false } = pt['_usept'] || instance.$primevueConfig?.ptOptions || {};\n            const originalValue = fn(pt.originalValue);\n            const value = fn(pt.value);\n\n            if (originalValue === undefined && value === undefined) return undefined;\n            else if (ObjectUtils.isString(value)) return value;\n            else if (ObjectUtils.isString(originalValue)) return originalValue;\n\n            return mergeSections || (!mergeSections && value) ? (useMergeProps ? BaseDirective._mergeProps(instance, useMergeProps, originalValue, value) : { ...originalValue, ...value }) : value;\n        }\n\n        return fn(pt);\n    },\n    _useDefaultPT: (instance = {}, defaultPT = {}, callback, key, params) => {\n        return BaseDirective._usePT(instance, defaultPT, callback, key, params);\n    },\n    _loadStyles: (el, binding, vnode) => {\n        const config = BaseDirective._getConfig(binding, vnode);\n        const useStyleOptions = { nonce: config?.csp?.nonce };\n\n        BaseDirective._loadCoreStyles(el.$instance, useStyleOptions);\n        BaseDirective._loadThemeStyles(el.$instance, useStyleOptions);\n        BaseDirective._loadScopedThemeStyles(el.$instance, useStyleOptions);\n\n        BaseDirective._themeChangeListener(() => BaseDirective._loadThemeStyles(el.$instance, useStyleOptions));\n    },\n    _loadCoreStyles(instance = {}, useStyleOptions) {\n        if (!Base.isStyleNameLoaded(instance.$style?.name) && instance.$style?.name) {\n            BaseStyle.loadCSS(useStyleOptions);\n            instance.isUnstyled() && instance.$style?.loadCSS(useStyleOptions);\n\n            Base.setLoadedStyleName(instance.$style.name);\n        }\n    },\n    _loadThemeStyles: (instance = {}, useStyleOptions) => {\n        if (instance?.isUnstyled()) return;\n\n        // common\n        if (!Theme.isStyleNameLoaded('common')) {\n            const { primitive, semantic } = instance.$style?.getCommonTheme?.() || {};\n\n            BaseStyle.load(primitive?.css, { name: 'primitive-variables', ...useStyleOptions });\n            BaseStyle.load(semantic?.css, { name: 'semantic-variables', ...useStyleOptions });\n            BaseStyle.loadTheme({ name: 'global-style', ...useStyleOptions });\n\n            Theme.setLoadedStyleName('common');\n        }\n\n        // directive\n        if (!Theme.isStyleNameLoaded(instance.$style?.name) && instance.$style?.name) {\n            const { css } = instance.$style?.getDirectiveTheme?.() || {};\n\n            instance.$style?.load(css, { name: `${instance.$style.name}-variables`, ...useStyleOptions });\n            instance.$style?.loadTheme({ name: `${instance.$style.name}-style`, ...useStyleOptions });\n\n            Theme.setLoadedStyleName(instance.$style.name);\n        }\n\n        // layer order\n        if (!Theme.isStyleNameLoaded('layer-order')) {\n            const layerOrder = instance.$style?.getLayerOrderThemeCSS?.();\n\n            BaseStyle.load(layerOrder, { name: 'layer-order', first: true, ...useStyleOptions });\n\n            Theme.setLoadedStyleName('layer-order');\n        }\n    },\n    _loadScopedThemeStyles(instance = {}, useStyleOptions) {\n        const preset = instance.preset();\n\n        if (preset && instance.$attrSelector) {\n            const { css } = instance.$style?.getPresetTheme?.(preset, `[${instance.$attrSelector}]`) || {};\n            const scopedStyle = instance.$style?.load(css, { name: `${instance.$attrSelector}-${instance.$style.name}`, ...useStyleOptions });\n\n            instance.scopedStyleEl = scopedStyle.el;\n        }\n    },\n    _themeChangeListener(callback = () => {}) {\n        Base.clearLoadedStyleNames();\n        ThemeService.on('theme:change', callback);\n    },\n    _hook: (directiveName, hookName, el, binding, vnode, prevVnode) => {\n        const name = `on${ObjectUtils.toCapitalCase(hookName)}`;\n        const config = BaseDirective._getConfig(binding, vnode);\n        const instance = el?.$instance;\n        const selfHook = BaseDirective._usePT(instance, BaseDirective._getPT(binding?.value?.pt, directiveName), BaseDirective._getOptionValue, `hooks.${name}`);\n        const defaultHook = BaseDirective._useDefaultPT(instance, config?.pt?.directives?.[directiveName], BaseDirective._getOptionValue, `hooks.${name}`);\n        const options = { el, binding, vnode, prevVnode };\n\n        selfHook?.(instance, options);\n        defaultHook?.(instance, options);\n    },\n    _mergeProps(instance = {}, fn, ...args) {\n        return ObjectUtils.isFunction(fn) ? fn(...args) : mergeProps(...args);\n    },\n    _extend: (name, options = {}) => {\n        const handleHook = (hook, el, binding, vnode, prevVnode) => {\n            el._$instances = el._$instances || {};\n\n            const config = BaseDirective._getConfig(binding, vnode);\n            const $prevInstance = el._$instances[name] || {};\n            const $options = ObjectUtils.isEmpty($prevInstance) ? { ...options, ...options?.methods } : {};\n\n            el._$instances[name] = {\n                ...$prevInstance,\n                /* new instance variables to pass in directive methods */\n                $name: name,\n                $host: el,\n                $binding: binding,\n                $modifiers: binding?.modifiers,\n                $value: binding?.value,\n                $el: $prevInstance['$el'] || el || undefined,\n                $style: { classes: undefined, inlineStyles: undefined, load: () => {}, loadCSS: () => {}, loadTheme: () => {}, ...options?.style },\n                $primevueConfig: config,\n                $attrSelector: el.$attrSelector,\n                /* computed instance variables */\n                defaultPT: () => BaseDirective._getPT(config?.pt, undefined, (value) => value?.directives?.[name]),\n                isUnstyled: () => (el.$instance?.$binding?.value?.unstyled !== undefined ? el.$instance?.$binding?.value?.unstyled : config?.unstyled),\n                theme: () => el.$instance?.$primevueConfig?.theme,\n                preset: () => el.$instance?.$binding?.value?.dt,\n                /* instance's methods */\n                ptm: (key = '', params = {}) => BaseDirective._getPTValue(el.$instance, el.$instance?.$binding?.value?.pt, key, { ...params }),\n                ptmo: (obj = {}, key = '', params = {}) => BaseDirective._getPTValue(el.$instance, obj, key, params, false),\n                cx: (key = '', params = {}) => (!el.$instance?.isUnstyled() ? BaseDirective._getOptionValue(el.$instance?.$style?.classes, key, { ...params }) : undefined),\n                sx: (key = '', when = true, params = {}) => (when ? BaseDirective._getOptionValue(el.$instance?.$style?.inlineStyles, key, { ...params }) : undefined),\n                ...$options\n            };\n\n            el.$instance = el._$instances[name]; // pass instance data to hooks\n            el.$instance[hook]?.(el, binding, vnode, prevVnode); // handle hook in directive implementation\n            el[`$${name}`] = el.$instance; // expose all options with $<directive_name>\n            BaseDirective._hook(name, hook, el, binding, vnode, prevVnode); // handle hooks during directive uses (global and self-definition)\n\n            el.$pd ||= {};\n            el.$pd[name] = { ...el.$pd?.[name], name, instance: el.$instance };\n        };\n\n        const handleWatch = (el) => {\n            const watchers = el.$instance?.watch;\n\n            // for 'config'\n            watchers?.['config']?.call(el.$instance, el.$instance?.$primevueConfig);\n            PrimeVueService.on('config:change', ({ newValue, oldValue }) => watchers?.['config']?.call(el.$instance, newValue, oldValue));\n\n            // for 'config.ripple'\n            watchers?.['config.ripple']?.call(el.$instance, el.$instance?.$primevueConfig?.ripple);\n            PrimeVueService.on('config:ripple:change', ({ newValue, oldValue }) => watchers?.['config.ripple']?.call(el.$instance, newValue, oldValue));\n        };\n\n        return {\n            created: (el, binding, vnode, prevVnode) => {\n                handleHook('created', el, binding, vnode, prevVnode);\n            },\n            beforeMount: (el, binding, vnode, prevVnode) => {\n                el.$attrSelector = UniqueComponentId('pd');\n                BaseDirective._loadStyles(el, binding, vnode);\n                handleHook('beforeMount', el, binding, vnode, prevVnode);\n                handleWatch(el);\n            },\n            mounted: (el, binding, vnode, prevVnode) => {\n                BaseDirective._loadStyles(el, binding, vnode);\n                handleHook('mounted', el, binding, vnode, prevVnode);\n            },\n            beforeUpdate: (el, binding, vnode, prevVnode) => {\n                handleHook('beforeUpdate', el, binding, vnode, prevVnode);\n            },\n            updated: (el, binding, vnode, prevVnode) => {\n                BaseDirective._loadStyles(el, binding, vnode);\n                handleHook('updated', el, binding, vnode, prevVnode);\n            },\n            beforeUnmount: (el, binding, vnode, prevVnode) => {\n                handleHook('beforeUnmount', el, binding, vnode, prevVnode);\n            },\n            unmounted: (el, binding, vnode, prevVnode) => {\n                el.$instance?.scopedStyleEl?.value?.remove();\n                handleHook('unmounted', el, binding, vnode, prevVnode);\n            }\n        };\n    },\n    extend: (...args) => {\n        const [name, options] = BaseDirective._getMeta(...args);\n\n        return {\n            extend: (..._args) => {\n                const [_name, _options] = BaseDirective._getMeta(..._args);\n\n                return BaseDirective.extend(_name, { ...options, ...options?.methods, ..._options });\n            },\n            ...BaseDirective._extend(name, options)\n        };\n    }\n};\n\nexport default BaseDirective;\n"],"names":["BaseDirective","_getMeta","ObjectUtils","isObject","arguments","length","undefined","getItemValue","_getConfig","binding","vnode","_ref","_binding$instance","_vnode$ctx","instance","$primevue","ctx","appContext","config","globalProperties","_getOptionValue","options","key","params","fKeys","toFlatCase","split","fKey","shift","Object","keys","find","k","join","_getPTValue","_instance$binding","_instance$$primevueCo","obj","searchInDefaultPT","getValue","value","apply","isString","isArray","_ref2","ptOptions","$primevueConfig","_ref2$mergeSections","mergeSections","_ref2$mergeProps","mergeProps","useMergeProps","global","_useDefaultPT","defaultPT","self","_usePT","_getPT","$name","_objectSpread","datasets","_getPTDatasets","_mergeProps","datasetPrefix","_defineProperty","concat","pt","callback","_computedValue$_key","computedValue","_key","hasOwnProperty","_usept","originalValue","fn","_instance$$primevueCo2","_ref4","_ref4$mergeSections","_ref4$mergeProps","_loadStyles","el","_config$csp","useStyleOptions","nonce","csp","_loadCoreStyles","$instance","_loadThemeStyles","_loadScopedThemeStyles","_themeChangeListener","_instance$$style","_instance$$style2","Base","isStyleNameLoaded","$style","name","_instance$$style3","BaseStyle","loadCSS","isUnstyled","setLoadedStyleName","_instance$$style5","_instance$$style6","Theme","_instance$$style4","_instance$$style4$get","_ref5","getCommonTheme","call","primitive","semantic","load","css","loadTheme","_instance$$style7","_instance$$style7$get","_instance$$style8","_instance$$style9","_ref6","getDirectiveTheme","_instance$$style10","_instance$$style10$ge","layerOrder","getLayerOrderThemeCSS","first","preset","$attrSelector","_instance$$style11","_instance$$style11$ge","_instance$$style12","_ref7","getPresetTheme","scopedStyle","scopedStyleEl","clearLoadedStyleNames","ThemeService","on","_hook","directiveName","hookName","prevVnode","_binding$value","_config$pt","toCapitalCase","selfHook","defaultHook","directives","_len","args","Array","_key2","isFunction","_extend","handleHook","hook","_el$$instance$hook","_el$$instance9","_el$$pd","_$instances","$prevInstance","$options","isEmpty","methods","$host","$binding","$modifiers","modifiers","$value","$el","classes","inlineStyles","style","_value$directives","_el$$instance","_el$$instance2","unstyled","theme","_el$$instance3","_el$$instance4","dt","ptm","_el$$instance5","ptmo","cx","_el$$instance6","_el$$instance7","sx","_el$$instance8","when","$pd","handleWatch","_el$$instance10","_watchers$config","_el$$instance11","_watchers$configRipp","_el$$instance12","watchers","watch","PrimeVueService","_ref8","_watchers$config2","newValue","oldValue","ripple","_ref9","_watchers$configRipp2","created","beforeMount","UniqueComponentId","mounted","beforeUpdate","updated","beforeUnmount","unmounted","_el$$instance13","remove","extend","_BaseDirective$_getMe","_BaseDirective$_getMe2","_slicedToArray","_BaseDirective$_getMe3","_BaseDirective$_getMe4","_name","_options"],"mappings":";;;;;;;;;;;;;;;;;;;AAOA,IAAMA,aAAa,GAAG;EAClBC,QAAQ,EAAE,SAAAA,QAAA,GAAA;AAAA,IAAA,OAAa,CAACC,WAAW,CAACC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAC,CAAAA,GAAAA,SAAA,GAAAF,SAAA,CAAQ,CAAA,CAAA,CAAC,GAAGE,SAAS,GAAAF,SAAA,CAAAC,MAAA,IAAAC,CAAAA,GAAAA,SAAA,GAAAF,SAAA,CAAU,CAAA,CAAA,EAAEF,WAAW,CAACK,YAAY,CAACL,WAAW,CAACC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAA,CAAA,GAAAC,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAQ,CAAC,GAAAA,SAAA,CAAAC,MAAA,IAAA,CAAA,GAAAC,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAAA,SAAA,CAAAC,MAAA,IAAA,CAAA,GAAAC,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAoB,CAAC,CAAC,CAAA;AAAA,GAAA;AACzJI,EAAAA,UAAU,EAAE,SAAAA,UAACC,CAAAA,OAAO,EAAEC,KAAK,EAAA;AAAA,IAAA,IAAAC,IAAA,EAAAC,iBAAA,EAAAC,UAAA,CAAA;AAAA,IAAA,OAAA,CAAAF,IAAA,GAAM,CAAAF,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAAG,KAAAA,CAAAA,IAAAA,CAAAA,iBAAA,GAAPH,OAAO,CAAEK,QAAQ,MAAAF,IAAAA,IAAAA,iBAAA,KAAjBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAA,CAAmBG,SAAS,MAAIL,KAAK,KAALA,IAAAA,IAAAA,KAAK,KAAAG,KAAAA,CAAAA,IAAAA,CAAAA,UAAA,GAALH,KAAK,CAAEM,GAAG,cAAAH,UAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,UAAA,GAAVA,UAAA,CAAYI,UAAU,MAAA,IAAA,IAAAJ,UAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,UAAA,GAAtBA,UAAA,CAAwBK,MAAM,MAAA,IAAA,IAAAL,UAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,UAAA,GAA9BA,UAAA,CAAgCM,gBAAgB,MAAAN,IAAAA,IAAAA,UAAA,KAAhDA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,UAAA,CAAkDE,SAAS,CAAAJ,MAAAA,IAAAA,IAAAA,IAAA,KAA5FA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAA,CAA+FO,MAAM,CAAA;AAAA,GAAA;AACrIE,EAAAA,eAAe,EAAE,SAAAA,eAACC,CAAAA,OAAO,EAA4B;AAAA,IAAA,IAA1BC,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,IAAA,IAAEmB,MAAM,GAAAnB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAC5C,IAAA,IAAMoB,KAAK,GAAGtB,WAAW,CAACuB,UAAU,CAACH,GAAG,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC,CAAA;AACpD,IAAA,IAAMC,IAAI,GAAGH,KAAK,CAACI,KAAK,EAAE,CAAA;AAE1B,IAAA,OAAOD,IAAI,GACLzB,WAAW,CAACC,QAAQ,CAACkB,OAAO,CAAC,GACzBrB,aAAa,CAACoB,eAAe,CAAClB,WAAW,CAACK,YAAY,CAACc,OAAO,CAACQ,MAAM,CAACC,IAAI,CAACT,OAAO,CAAC,CAACU,IAAI,CAAC,UAACC,CAAC,EAAA;AAAA,MAAA,OAAK9B,WAAW,CAACuB,UAAU,CAACO,CAAC,CAAC,KAAKL,IAAI,CAAA;KAAC,CAAA,IAAI,EAAE,CAAC,EAAEJ,MAAM,CAAC,EAAEC,KAAK,CAACS,IAAI,CAAC,GAAG,CAAC,EAAEV,MAAM,CAAC,GAC7KjB,SAAS,GACbJ,WAAW,CAACK,YAAY,CAACc,OAAO,EAAEE,MAAM,CAAC,CAAA;GAClD;EACDW,WAAW,EAAE,SAAAA,WAAAA,GAA8E;IAAA,IAAAC,iBAAA,EAAAC,qBAAA,CAAA;AAAA,IAAA,IAA7EtB,QAAQ,GAAAV,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,IAAA,IAAEiC,GAAG,GAAAjC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,IAAA,IAAEkB,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,IAAA,IAAEmB,MAAM,GAAAnB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,IAAA,IAAEkC,iBAAiB,GAAAlC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;AAClF,IAAA,IAAMmC,QAAQ,GAAG,SAAXA,QAAQA,GAAgB;MAC1B,IAAMC,KAAK,GAAGxC,aAAa,CAACoB,eAAe,CAAAqB,KAAA,CAA7BzC,aAAa,EAAAI,SAAwB,CAAC,CAAA;AAEpD,MAAA,OAAOF,WAAW,CAACwC,QAAQ,CAACF,KAAK,CAAC,IAAItC,WAAW,CAACyC,OAAO,CAACH,KAAK,CAAC,GAAG;QAAE,OAAOA,EAAAA,KAAAA;AAAM,OAAC,GAAGA,KAAK,CAAA;KAC9F,CAAA;AAED,IAAA,IAAAI,KAAA,GAAoE,CAAA,CAAAT,iBAAA,GAAArB,QAAQ,CAACL,OAAO,MAAA0B,IAAAA,IAAAA,iBAAA,gBAAAA,iBAAA,GAAhBA,iBAAA,CAAkBK,KAAK,MAAAL,IAAAA,IAAAA,iBAAA,KAAvBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAA,CAAyBU,SAAS,MAAA,CAAAT,qBAAA,GAAItB,QAAQ,CAACgC,eAAe,MAAAV,IAAAA,IAAAA,qBAAA,uBAAxBA,qBAAA,CAA0BS,SAAS,CAAA,IAAI,EAAE;MAAAE,mBAAA,GAAAH,KAAA,CAA3II,aAAa;AAAbA,MAAAA,aAAa,GAAAD,mBAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,mBAAA;MAAAE,gBAAA,GAAAL,KAAA,CAAEM,UAAU;AAAEC,MAAAA,aAAa,GAAAF,gBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,gBAAA,CAAA;IAC/D,IAAMG,MAAM,GAAGd,iBAAiB,GAAGtC,aAAa,CAACqD,aAAa,CAACvC,QAAQ,EAAEA,QAAQ,CAACwC,SAAS,EAAE,EAAEf,QAAQ,EAAEjB,GAAG,EAAEC,MAAM,CAAC,GAAGjB,SAAS,CAAA;IACjI,IAAMiD,IAAI,GAAGvD,aAAa,CAACwD,MAAM,CAAC1C,QAAQ,EAAEd,aAAa,CAACyD,MAAM,CAACpB,GAAG,EAAEvB,QAAQ,CAAC4C,KAAK,CAAC,EAAEnB,QAAQ,EAAEjB,GAAG,EAAAqC,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAOpC,MAAM,CAAA,EAAA,EAAA,EAAA;MAAE6B,MAAM,EAAEA,MAAM,IAAI,EAAC;AAAC,KAAA,CAAE,CAAC,CAAA;IAC1I,IAAMQ,QAAQ,GAAG5D,aAAa,CAAC6D,cAAc,CAAC/C,QAAQ,EAAEQ,GAAG,CAAC,CAAA;IAE5D,OAAO0B,aAAa,IAAK,CAACA,aAAa,IAAIO,IAAK,GAAIJ,aAAa,GAAGnD,aAAa,CAAC8D,WAAW,CAAChD,QAAQ,EAAEqC,aAAa,EAAEC,MAAM,EAAEG,IAAI,EAAEK,QAAQ,CAAC,GAAAD,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAQP,EAAAA,EAAAA,MAAM,GAAKG,IAAI,CAAA,EAAKK,QAAQ,CAAE,GAAAD,aAAA,CAAAA,aAAA,KAASJ,IAAI,CAAA,EAAKK,QAAQ,CAAE,CAAA;GACnN;EACDC,cAAc,EAAA,SAAAA,iBAA0B;AAAA,IAAA,IAAzB/C,QAAQ,GAAAV,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,IAAA,IAAEkB,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAClC,IAAM2D,aAAa,GAAG,UAAU,CAAA;AAEhC,IAAA,OAAAJ,aAAA,CAAAA,aAAA,CAAA,EAAA,EACQrC,GAAG,KAAK,MAAM,IAAA0C,eAAA,QAAAC,MAAA,CAAUF,aAAa,EAAA,MAAA,CAAA,EAAS7D,WAAW,CAACuB,UAAU,CAACX,QAAQ,CAAC4C,KAAK,CAAC,CAAE,CAAA,EAAA,EAAA,EAAAM,eAAA,CAAAC,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CACtFF,aAAa,cAAY7D,WAAW,CAACuB,UAAU,CAACH,GAAG,CAAC,CAAA,CAAA,CAAA;GAE/D;AACDmC,EAAAA,MAAM,EAAE,SAAAA,MAACS,CAAAA,EAAE,EAAyB;AAAA,IAAA,IAAvB5C,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAA,IAAE+D,QAAQ,GAAA/D,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;AAC3B,IAAA,IAAMiC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAK;AAAA,MAAA,IAAA4B,mBAAA,CAAA;MACxB,IAAMC,aAAa,GAAGF,QAAQ,GAAGA,QAAQ,CAAC3B,KAAK,CAAC,GAAGA,KAAK,CAAA;AACxD,MAAA,IAAM8B,IAAI,GAAGpE,WAAW,CAACuB,UAAU,CAACH,GAAG,CAAC,CAAA;AAExC,MAAA,OAAA,CAAA8C,mBAAA,GAAOC,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAGC,IAAI,CAAC,MAAAF,IAAAA,IAAAA,mBAAA,KAAAA,KAAAA,CAAAA,GAAAA,mBAAA,GAAIC,aAAa,CAAA;KAChD,CAAA;IAED,OAAOH,EAAE,KAAFA,IAAAA,IAAAA,EAAE,KAAFA,KAAAA,CAAAA,IAAAA,EAAE,CAAEK,cAAc,CAAC,QAAQ,CAAC,GAC7B;AACIC,MAAAA,MAAM,EAAEN,EAAE,CAAC,QAAQ,CAAC;AACpBO,MAAAA,aAAa,EAAElC,QAAQ,CAAC2B,EAAE,CAACO,aAAa,CAAC;AACzCjC,MAAAA,KAAK,EAAED,QAAQ,CAAC2B,EAAE,CAAC1B,KAAK,CAAA;AAC5B,KAAC,GACDD,QAAQ,CAAC2B,EAAE,CAAC,CAAA;GACrB;EACDV,MAAM,EAAE,SAAAA,MAAAA,GAA8C;AAAA,IAAA,IAA7C1C,QAAQ,GAAAV,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAA,IAAE8D,EAAE,GAAA9D,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;IAAA,IAAE6D,QAAQ,GAAA/D,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;IAAA,IAAEgB,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;IAAA,IAAEiB,MAAM,GAAAnB,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;AAC7C,IAAA,IAAMoE,EAAE,GAAG,SAALA,EAAEA,CAAIlC,KAAK,EAAA;AAAA,MAAA,OAAK2B,QAAQ,CAAC3B,KAAK,EAAElB,GAAG,EAAEC,MAAM,CAAC,CAAA;AAAA,KAAA,CAAA;IAElD,IAAI2C,EAAE,KAAFA,IAAAA,IAAAA,EAAE,KAAFA,KAAAA,CAAAA,IAAAA,EAAE,CAAEK,cAAc,CAAC,QAAQ,CAAC,EAAE;AAAA,MAAA,IAAAI,sBAAA,CAAA;MAC9B,IAAAC,KAAA,GAAoEV,EAAE,CAAC,QAAQ,CAAC,KAAA,CAAAS,sBAAA,GAAI7D,QAAQ,CAACgC,eAAe,MAAA,IAAA,IAAA6B,sBAAA,KAAxBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAA0B9B,SAAS,CAAA,IAAI,EAAE;QAAAgC,mBAAA,GAAAD,KAAA,CAArH5B,aAAa;AAAbA,QAAAA,aAAa,GAAA6B,mBAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,mBAAA;QAAAC,gBAAA,GAAAF,KAAA,CAAE1B,UAAU;AAAEC,QAAAA,aAAa,GAAA2B,gBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,gBAAA,CAAA;AAC/D,MAAA,IAAML,aAAa,GAAGC,EAAE,CAACR,EAAE,CAACO,aAAa,CAAC,CAAA;AAC1C,MAAA,IAAMjC,KAAK,GAAGkC,EAAE,CAACR,EAAE,CAAC1B,KAAK,CAAC,CAAA;AAE1B,MAAA,IAAIiC,aAAa,KAAKnE,SAAS,IAAIkC,KAAK,KAAKlC,SAAS,EAAE,OAAOA,SAAS,CAAC,KACpE,IAAIJ,WAAW,CAACwC,QAAQ,CAACF,KAAK,CAAC,EAAE,OAAOA,KAAK,CAAC,KAC9C,IAAItC,WAAW,CAACwC,QAAQ,CAAC+B,aAAa,CAAC,EAAE,OAAOA,aAAa,CAAA;AAElE,MAAA,OAAOzB,aAAa,IAAK,CAACA,aAAa,IAAIR,KAAM,GAAIW,aAAa,GAAGnD,aAAa,CAAC8D,WAAW,CAAChD,QAAQ,EAAEqC,aAAa,EAAEsB,aAAa,EAAEjC,KAAK,CAAC,GAAAmB,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAQc,aAAa,CAAA,EAAKjC,KAAK,CAAE,GAAIA,KAAK,CAAA;AAC3L,KAAA;IAEA,OAAOkC,EAAE,CAACR,EAAE,CAAC,CAAA;GAChB;EACDb,aAAa,EAAE,SAAAA,aAAAA,GAA0D;AAAA,IAAA,IAAzDvC,QAAQ,GAAAV,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,IAAA,IAAEkD,SAAS,GAAAlD,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAA,IAAE+D,QAAQ,GAAA/D,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;IAAA,IAAEgB,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;IAAA,IAAEiB,MAAM,GAAAnB,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;AAChE,IAAA,OAAON,aAAa,CAACwD,MAAM,CAAC1C,QAAQ,EAAEwC,SAAS,EAAEa,QAAQ,EAAE7C,GAAG,EAAEC,MAAM,CAAC,CAAA;GAC1E;EACDwD,WAAW,EAAE,SAAAA,WAACC,CAAAA,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAK;AAAA,IAAA,IAAAuE,WAAA,CAAA;IACjC,IAAM/D,MAAM,GAAGlB,aAAa,CAACQ,UAAU,CAACC,OAAO,EAAEC,KAAK,CAAC,CAAA;AACvD,IAAA,IAAMwE,eAAe,GAAG;AAAEC,MAAAA,KAAK,EAAEjE,MAAM,KAANA,IAAAA,IAAAA,MAAM,gBAAA+D,WAAA,GAAN/D,MAAM,CAAEkE,GAAG,MAAA,IAAA,IAAAH,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAXA,WAAA,CAAaE,KAAAA;KAAO,CAAA;IAErDnF,aAAa,CAACqF,eAAe,CAACL,EAAE,CAACM,SAAS,EAAEJ,eAAe,CAAC,CAAA;IAC5DlF,aAAa,CAACuF,gBAAgB,CAACP,EAAE,CAACM,SAAS,EAAEJ,eAAe,CAAC,CAAA;IAC7DlF,aAAa,CAACwF,sBAAsB,CAACR,EAAE,CAACM,SAAS,EAAEJ,eAAe,CAAC,CAAA;IAEnElF,aAAa,CAACyF,oBAAoB,CAAC,YAAA;MAAA,OAAMzF,aAAa,CAACuF,gBAAgB,CAACP,EAAE,CAACM,SAAS,EAAEJ,eAAe,CAAC,CAAA;KAAC,CAAA,CAAA;GAC1G;EACDG,eAAe,EAAA,SAAAA,kBAAiC;IAAA,IAAAK,gBAAA,EAAAC,iBAAA,CAAA;AAAA,IAAA,IAAhC7E,QAAQ,GAAAV,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAA,IAAE8E,eAAe,GAAA9E,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;AAC1C,IAAA,IAAI,CAACsF,IAAI,CAACC,iBAAiB,CAAAH,CAAAA,gBAAA,GAAC5E,QAAQ,CAACgF,MAAM,MAAAJ,IAAAA,IAAAA,gBAAA,KAAfA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,gBAAA,CAAiBK,IAAI,CAAC,IAAA,CAAAJ,iBAAA,GAAI7E,QAAQ,CAACgF,MAAM,MAAA,IAAA,IAAAH,iBAAA,KAAA,KAAA,CAAA,IAAfA,iBAAA,CAAiBI,IAAI,EAAE;AAAA,MAAA,IAAAC,iBAAA,CAAA;AACzEC,MAAAA,SAAS,CAACC,OAAO,CAAChB,eAAe,CAAC,CAAA;AAClCpE,MAAAA,QAAQ,CAACqF,UAAU,EAAE,KAAAH,CAAAA,iBAAA,GAAIlF,QAAQ,CAACgF,MAAM,MAAA,IAAA,IAAAE,iBAAA,KAAfA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAA,CAAiBE,OAAO,CAAChB,eAAe,CAAC,CAAA,CAAA;MAElEU,IAAI,CAACQ,kBAAkB,CAACtF,QAAQ,CAACgF,MAAM,CAACC,IAAI,CAAC,CAAA;AACjD,KAAA;GACH;EACDR,gBAAgB,EAAE,SAAAA,gBAAAA,GAAoC;IAAA,IAAAc,iBAAA,EAAAC,iBAAA,CAAA;AAAA,IAAA,IAAnCxF,QAAQ,GAAAV,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAA,IAAE8E,eAAe,GAAA9E,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;IAC7C,IAAIQ,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,IAARA,QAAQ,CAAEqF,UAAU,EAAE,EAAE,OAAA;;AAE5B;AACA,IAAA,IAAI,CAACI,KAAK,CAACV,iBAAiB,CAAC,QAAQ,CAAC,EAAE;MAAA,IAAAW,iBAAA,EAAAC,qBAAA,CAAA;MACpC,IAAAC,KAAA,GAAgC,CAAA,CAAAF,iBAAA,GAAA1F,QAAQ,CAACgF,MAAM,MAAA,IAAA,IAAAU,iBAAA,KAAA,KAAA,CAAA,IAAA,CAAAC,qBAAA,GAAfD,iBAAA,CAAiBG,cAAc,MAAA,IAAA,IAAAF,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA/BA,qBAAA,CAAAG,IAAA,CAAAJ,iBAAkC,CAAC,KAAI,EAAE;QAAjEK,SAAS,GAAAH,KAAA,CAATG,SAAS;QAAEC,QAAQ,GAAAJ,KAAA,CAARI,QAAQ,CAAA;MAE3Bb,SAAS,CAACc,IAAI,CAACF,SAAS,KAAA,IAAA,IAATA,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAATA,SAAS,CAAEG,GAAG,EAAArD,aAAA,CAAA;AAAIoC,QAAAA,IAAI,EAAE,qBAAA;OAA0Bb,EAAAA,eAAe,CAAE,CAAC,CAAA;MACnFe,SAAS,CAACc,IAAI,CAACD,QAAQ,KAAA,IAAA,IAARA,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAARA,QAAQ,CAAEE,GAAG,EAAArD,aAAA,CAAA;AAAIoC,QAAAA,IAAI,EAAE,oBAAA;OAAyBb,EAAAA,eAAe,CAAE,CAAC,CAAA;MACjFe,SAAS,CAACgB,SAAS,CAAAtD,aAAA,CAAA;AAAGoC,QAAAA,IAAI,EAAE,cAAA;OAAmBb,EAAAA,eAAe,CAAE,CAAC,CAAA;AAEjEqB,MAAAA,KAAK,CAACH,kBAAkB,CAAC,QAAQ,CAAC,CAAA;AACtC,KAAA;;AAEA;AACA,IAAA,IAAI,CAACG,KAAK,CAACV,iBAAiB,CAAAQ,CAAAA,iBAAA,GAACvF,QAAQ,CAACgF,MAAM,MAAAO,IAAAA,IAAAA,iBAAA,KAAfA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAA,CAAiBN,IAAI,CAAC,IAAA,CAAAO,iBAAA,GAAIxF,QAAQ,CAACgF,MAAM,MAAA,IAAA,IAAAQ,iBAAA,KAAA,KAAA,CAAA,IAAfA,iBAAA,CAAiBP,IAAI,EAAE;AAAA,MAAA,IAAAmB,iBAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,iBAAA,CAAA;MAC1E,IAAAC,KAAA,GAAgB,CAAA,CAAAJ,iBAAA,GAAApG,QAAQ,CAACgF,MAAM,MAAA,IAAA,IAAAoB,iBAAA,KAAA,KAAA,CAAA,IAAA,CAAAC,qBAAA,GAAfD,iBAAA,CAAiBK,iBAAiB,MAAA,IAAA,IAAAJ,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlCA,qBAAA,CAAAP,IAAA,CAAAM,iBAAqC,CAAC,KAAI,EAAE;QAApDF,GAAG,GAAAM,KAAA,CAAHN,GAAG,CAAA;AAEX,MAAA,CAAAI,iBAAA,GAAAtG,QAAQ,CAACgF,MAAM,MAAAsB,IAAAA,IAAAA,iBAAA,KAAfA,KAAAA,CAAAA,IAAAA,iBAAA,CAAiBL,IAAI,CAACC,GAAG,EAAArD,aAAA,CAAA;AAAIoC,QAAAA,IAAI,KAAA9B,MAAA,CAAKnD,QAAQ,CAACgF,MAAM,CAACC,IAAI,EAAA,YAAA,CAAA;OAAiBb,EAAAA,eAAe,CAAE,CAAC,CAAA;AAC7F,MAAA,CAAAmC,iBAAA,GAAAvG,QAAQ,CAACgF,MAAM,MAAA,IAAA,IAAAuB,iBAAA,KAAA,KAAA,CAAA,IAAfA,iBAAA,CAAiBJ,SAAS,CAAAtD,aAAA,CAAA;AAAGoC,QAAAA,IAAI,KAAA9B,MAAA,CAAKnD,QAAQ,CAACgF,MAAM,CAACC,IAAI,EAAA,QAAA,CAAA;OAAab,EAAAA,eAAe,CAAE,CAAC,CAAA;MAEzFqB,KAAK,CAACH,kBAAkB,CAACtF,QAAQ,CAACgF,MAAM,CAACC,IAAI,CAAC,CAAA;AAClD,KAAA;;AAEA;AACA,IAAA,IAAI,CAACQ,KAAK,CAACV,iBAAiB,CAAC,aAAa,CAAC,EAAE;MAAA,IAAA2B,kBAAA,EAAAC,qBAAA,CAAA;MACzC,IAAMC,UAAU,IAAAF,kBAAA,GAAG1G,QAAQ,CAACgF,MAAM,MAAA0B,IAAAA,IAAAA,kBAAA,KAAAC,KAAAA,CAAAA,IAAAA,CAAAA,qBAAA,GAAfD,kBAAA,CAAiBG,qBAAqB,MAAA,IAAA,IAAAF,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtCA,qBAAA,CAAAb,IAAA,CAAAY,kBAAyC,CAAC,CAAA;AAE7DvB,MAAAA,SAAS,CAACc,IAAI,CAACW,UAAU,EAAA/D,aAAA,CAAA;AAAIoC,QAAAA,IAAI,EAAE,aAAa;AAAE6B,QAAAA,KAAK,EAAE,IAAA;OAAS1C,EAAAA,eAAe,CAAE,CAAC,CAAA;AAEpFqB,MAAAA,KAAK,CAACH,kBAAkB,CAAC,aAAa,CAAC,CAAA;AAC3C,KAAA;GACH;EACDZ,sBAAsB,EAAA,SAAAA,yBAAiC;AAAA,IAAA,IAAhC1E,QAAQ,GAAAV,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAA,IAAE8E,eAAe,GAAA9E,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;AACjD,IAAA,IAAMuH,MAAM,GAAG/G,QAAQ,CAAC+G,MAAM,EAAE,CAAA;AAEhC,IAAA,IAAIA,MAAM,IAAI/G,QAAQ,CAACgH,aAAa,EAAE;AAAA,MAAA,IAAAC,kBAAA,EAAAC,qBAAA,EAAAC,kBAAA,CAAA;AAClC,MAAA,IAAAC,KAAA,GAAgB,CAAA,CAAAH,kBAAA,GAAAjH,QAAQ,CAACgF,MAAM,MAAAiC,IAAAA,IAAAA,kBAAA,gBAAAC,qBAAA,GAAfD,kBAAA,CAAiBI,cAAc,MAAAH,IAAAA,IAAAA,qBAAA,KAA/BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAApB,IAAA,CAAAmB,kBAAA,EAAkCF,MAAM,EAAA5D,GAAAA,CAAAA,MAAA,CAAMnD,QAAQ,CAACgH,aAAa,EAAA,GAAA,CAAG,CAAC,KAAI,EAAE;QAAtFd,GAAG,GAAAkB,KAAA,CAAHlB,GAAG,CAAA;AACX,MAAA,IAAMoB,WAAW,GAAAH,CAAAA,kBAAA,GAAGnH,QAAQ,CAACgF,MAAM,MAAA,IAAA,IAAAmC,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAfA,kBAAA,CAAiBlB,IAAI,CAACC,GAAG,EAAArD,aAAA,CAAA;AAAIoC,QAAAA,IAAI,EAAA9B,EAAAA,CAAAA,MAAA,CAAKnD,QAAQ,CAACgH,aAAa,EAAA7D,GAAAA,CAAAA,CAAAA,MAAA,CAAInD,QAAQ,CAACgF,MAAM,CAACC,IAAI,CAAA;OAAOb,EAAAA,eAAe,CAAE,CAAC,CAAA;AAEjIpE,MAAAA,QAAQ,CAACuH,aAAa,GAAGD,WAAW,CAACpD,EAAE,CAAA;AAC3C,KAAA;GACH;EACDS,oBAAoB,EAAA,SAAAA,uBAAsB;AAAA,IAAA,IAArBtB,QAAQ,GAAA/D,SAAA,CAAAC,MAAA,GAAAD,CAAAA,IAAAA,SAAA,CAAAE,CAAAA,CAAAA,KAAAA,SAAA,GAAAF,SAAA,CAAG,CAAA,CAAA,GAAA,YAAM,EAAE,CAAA;IACpCwF,IAAI,CAAC0C,qBAAqB,EAAE,CAAA;AAC5BC,IAAAA,YAAY,CAACC,EAAE,CAAC,cAAc,EAAErE,QAAQ,CAAC,CAAA;GAC5C;AACDsE,EAAAA,KAAK,EAAE,SAAAA,KAACC,CAAAA,aAAa,EAAEC,QAAQ,EAAE3D,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,EAAK;IAAA,IAAAC,cAAA,EAAAC,UAAA,CAAA;IAC/D,IAAM/C,IAAI,GAAA9B,IAAAA,CAAAA,MAAA,CAAQ/D,WAAW,CAAC6I,aAAa,CAACJ,QAAQ,CAAC,CAAE,CAAA;IACvD,IAAMzH,MAAM,GAAGlB,aAAa,CAACQ,UAAU,CAACC,OAAO,EAAEC,KAAK,CAAC,CAAA;IACvD,IAAMI,QAAQ,GAAGkE,EAAE,KAAA,IAAA,IAAFA,EAAE,KAAFA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,EAAE,CAAEM,SAAS,CAAA;AAC9B,IAAA,IAAM0D,QAAQ,GAAGhJ,aAAa,CAACwD,MAAM,CAAC1C,QAAQ,EAAEd,aAAa,CAACyD,MAAM,CAAChD,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,IAAA,CAAAoI,cAAA,GAAPpI,OAAO,CAAE+B,KAAK,cAAAqG,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,cAAA,CAAgB3E,EAAE,EAAEwE,aAAa,CAAC,EAAE1I,aAAa,CAACoB,eAAe,EAAA,QAAA,CAAA6C,MAAA,CAAW8B,IAAI,CAAE,CAAC,CAAA;AACxJ,IAAA,IAAMkD,WAAW,GAAGjJ,aAAa,CAACqD,aAAa,CAACvC,QAAQ,EAAEI,MAAM,KAANA,IAAAA,IAAAA,MAAM,gBAAA4H,UAAA,GAAN5H,MAAM,CAAEgD,EAAE,cAAA4E,UAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,UAAA,GAAVA,UAAA,CAAYI,UAAU,cAAAJ,UAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtBA,UAAA,CAAyBJ,aAAa,CAAC,EAAE1I,aAAa,CAACoB,eAAe,EAAA,QAAA,CAAA6C,MAAA,CAAW8B,IAAI,CAAE,CAAC,CAAA;AAClJ,IAAA,IAAM1E,OAAO,GAAG;AAAE2D,MAAAA,EAAE,EAAFA,EAAE;AAAEvE,MAAAA,OAAO,EAAPA,OAAO;AAAEC,MAAAA,KAAK,EAALA,KAAK;AAAEkI,MAAAA,SAAS,EAATA,SAAAA;KAAW,CAAA;IAEjDI,QAAQ,KAAA,IAAA,IAARA,QAAQ,KAARA,KAAAA,CAAAA,IAAAA,QAAQ,CAAGlI,QAAQ,EAAEO,OAAO,CAAC,CAAA;IAC7B4H,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAXA,KAAAA,CAAAA,IAAAA,WAAW,CAAGnI,QAAQ,EAAEO,OAAO,CAAC,CAAA;GACnC;EACDyC,WAAW,EAAA,SAAAA,cAA6B;IAAf,IAAEY,EAAE,GAAAtE,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;IAAA,KAAA6I,IAAAA,IAAA,GAAA/I,SAAA,CAAAC,MAAA,EAAK+I,IAAI,OAAAC,KAAA,CAAAF,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAG,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAH,IAAA,EAAAG,KAAA,EAAA,EAAA;AAAJF,MAAAA,IAAI,CAAAE,KAAA,GAAAlJ,CAAAA,CAAAA,GAAAA,SAAA,CAAAkJ,KAAA,CAAA,CAAA;AAAA,KAAA;AAClC,IAAA,OAAOpJ,WAAW,CAACqJ,UAAU,CAAC7E,EAAE,CAAC,GAAGA,EAAE,CAAAjC,KAAA,CAAI2G,KAAAA,CAAAA,EAAAA,IAAI,CAAC,GAAGlG,UAAU,CAAAT,KAAA,CAAA,KAAA,CAAA,EAAI2G,IAAI,CAAC,CAAA;GACxE;AACDI,EAAAA,OAAO,EAAE,SAAAA,OAACzD,CAAAA,IAAI,EAAmB;AAAA,IAAA,IAAjB1E,OAAO,GAAAjB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AACxB,IAAA,IAAMqJ,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAE1E,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,EAAK;AAAA,MAAA,IAAAe,kBAAA,EAAAC,cAAA,EAAAC,OAAA,CAAA;MACxD7E,EAAE,CAAC8E,WAAW,GAAG9E,EAAE,CAAC8E,WAAW,IAAI,EAAE,CAAA;MAErC,IAAM5I,MAAM,GAAGlB,aAAa,CAACQ,UAAU,CAACC,OAAO,EAAEC,KAAK,CAAC,CAAA;MACvD,IAAMqJ,aAAa,GAAG/E,EAAE,CAAC8E,WAAW,CAAC/D,IAAI,CAAC,IAAI,EAAE,CAAA;MAChD,IAAMiE,QAAQ,GAAG9J,WAAW,CAAC+J,OAAO,CAACF,aAAa,CAAC,GAAApG,aAAA,CAAAA,aAAA,KAAQtC,OAAO,CAAA,EAAKA,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAE6I,OAAO,CAAK,GAAA,EAAE,CAAA;MAE9FlF,EAAE,CAAC8E,WAAW,CAAC/D,IAAI,CAAC,GAAApC,aAAA,CAAAA,aAAA,CAAA,EAAA,EACboG,aAAa,CAAA,EAAA,EAAA,EAAA;AAChB;AACArG,QAAAA,KAAK,EAAEqC,IAAI;AACXoE,QAAAA,KAAK,EAAEnF,EAAE;AACToF,QAAAA,QAAQ,EAAE3J,OAAO;AACjB4J,QAAAA,UAAU,EAAE5J,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE6J,SAAS;AAC9BC,QAAAA,MAAM,EAAE9J,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE+B,KAAK;QACtBgI,GAAG,EAAET,aAAa,CAAC,KAAK,CAAC,IAAI/E,EAAE,IAAI1E,SAAS;AAC5CwF,QAAAA,MAAM,EAAAnC,aAAA,CAAA;AAAI8G,UAAAA,OAAO,EAAEnK,SAAS;AAAEoK,UAAAA,YAAY,EAAEpK,SAAS;AAAEyG,UAAAA,IAAI,EAAE,SAAAA,IAAA,GAAM,EAAE;AAAEb,UAAAA,OAAO,EAAE,SAAAA,OAAA,GAAM,EAAE;AAAEe,UAAAA,SAAS,EAAE,SAAAA,SAAA,GAAM,EAAC;AAAC,SAAA,EAAK5F,OAAO,KAAPA,IAAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEsJ,KAAK,CAAE;AAClI7H,QAAAA,eAAe,EAAE5B,MAAM;QACvB4G,aAAa,EAAE9C,EAAE,CAAC8C,aAAa;AAC/B;QACAxE,SAAS,EAAE,SAAAA,SAAA,GAAA;AAAA,UAAA,OAAMtD,aAAa,CAACyD,MAAM,CAACvC,MAAM,KAANA,IAAAA,IAAAA,MAAM,KAANA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAM,CAAEgD,EAAE,EAAE5D,SAAS,EAAE,UAACkC,KAAK,EAAA;AAAA,YAAA,IAAAoI,iBAAA,CAAA;AAAA,YAAA,OAAKpI,KAAK,KAAA,IAAA,IAALA,KAAK,KAAA,KAAA,CAAA,IAAA,CAAAoI,iBAAA,GAALpI,KAAK,CAAE0G,UAAU,cAAA0B,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjBA,iBAAA,CAAoB7E,IAAI,CAAC,CAAA;WAAC,CAAA,CAAA;AAAA,SAAA;QAClGI,UAAU,EAAE,SAAAA,UAAA,GAAA;UAAA,IAAA0E,aAAA,EAAAC,cAAA,CAAA;AAAA,UAAA,OAAO,CAAAD,CAAAA,aAAA,GAAA7F,EAAE,CAACM,SAAS,MAAAuF,IAAAA,IAAAA,aAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,aAAA,GAAZA,aAAA,CAAcT,QAAQ,MAAA,IAAA,IAAAS,aAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,aAAA,GAAtBA,aAAA,CAAwBrI,KAAK,MAAA,IAAA,IAAAqI,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA7BA,aAAA,CAA+BE,QAAQ,MAAKzK,SAAS,GAAAwK,CAAAA,cAAA,GAAG9F,EAAE,CAACM,SAAS,MAAAwF,IAAAA,IAAAA,cAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,cAAA,GAAZA,cAAA,CAAcV,QAAQ,MAAAU,IAAAA,IAAAA,cAAA,gBAAAA,cAAA,GAAtBA,cAAA,CAAwBtI,KAAK,MAAA,IAAA,IAAAsI,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA7BA,cAAA,CAA+BC,QAAQ,GAAG7J,MAAM,KAANA,IAAAA,IAAAA,MAAM,KAANA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAM,CAAE6J,QAAQ,CAAA;SAAC;QACtIC,KAAK,EAAE,SAAAA,KAAA,GAAA;AAAA,UAAA,IAAAC,cAAA,CAAA;AAAA,UAAA,OAAA,CAAAA,cAAA,GAAMjG,EAAE,CAACM,SAAS,MAAA,IAAA,IAAA2F,cAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,cAAA,GAAZA,cAAA,CAAcnI,eAAe,MAAA,IAAA,IAAAmI,cAAA,KAA7BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAA,CAA+BD,KAAK,CAAA;AAAA,SAAA;QACjDnD,MAAM,EAAE,SAAAA,MAAA,GAAA;AAAA,UAAA,IAAAqD,cAAA,CAAA;UAAA,OAAAA,CAAAA,cAAA,GAAMlG,EAAE,CAACM,SAAS,MAAA4F,IAAAA,IAAAA,cAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,cAAA,GAAZA,cAAA,CAAcd,QAAQ,cAAAc,cAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,cAAA,GAAtBA,cAAA,CAAwB1I,KAAK,MAAA,IAAA,IAAA0I,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA7BA,cAAA,CAA+BC,EAAE,CAAA;AAAA,SAAA;AAC/C;QACAC,GAAG,EAAE,SAAAA,GAAA,GAAA;AAAA,UAAA,IAAAC,cAAA,CAAA;AAAA,UAAA,IAAC/J,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,UAAA,IAAEmB,MAAM,GAAAnB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,UAAA,OAAKJ,aAAa,CAACkC,WAAW,CAAC8C,EAAE,CAACM,SAAS,EAAA+F,CAAAA,cAAA,GAAErG,EAAE,CAACM,SAAS,MAAA+F,IAAAA,IAAAA,cAAA,gBAAAA,cAAA,GAAZA,cAAA,CAAcjB,QAAQ,MAAAiB,IAAAA,IAAAA,cAAA,gBAAAA,cAAA,GAAtBA,cAAA,CAAwB7I,KAAK,cAAA6I,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA7BA,cAAA,CAA+BnH,EAAE,EAAE5C,GAAG,EAAAqC,aAAA,CAAOpC,EAAAA,EAAAA,MAAM,CAAE,CAAC,CAAA;AAAA,SAAA;QAC9H+J,IAAI,EAAE,SAAAA,IAAA,GAAA;AAAA,UAAA,IAACjJ,GAAG,GAAAjC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,UAAA,IAAEkB,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,UAAA,IAAEmB,MAAM,GAAAnB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,UAAA,OAAKJ,aAAa,CAACkC,WAAW,CAAC8C,EAAE,CAACM,SAAS,EAAEjD,GAAG,EAAEf,GAAG,EAAEC,MAAM,EAAE,KAAK,CAAC,CAAA;AAAA,SAAA;QAC3GgK,EAAE,EAAE,SAAAA,EAAA,GAAA;UAAA,IAAAC,cAAA,EAAAC,cAAA,CAAA;AAAA,UAAA,IAACnK,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,UAAA,IAAEmB,MAAM,GAAAnB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;UAAA,OAAM,EAAA,CAAAoL,cAAA,GAACxG,EAAE,CAACM,SAAS,MAAA,IAAA,IAAAkG,cAAA,KAAZA,KAAAA,CAAAA,IAAAA,cAAA,CAAcrF,UAAU,EAAE,CAAGnG,GAAAA,aAAa,CAACoB,eAAe,CAAA,CAAAqK,cAAA,GAACzG,EAAE,CAACM,SAAS,MAAAmG,IAAAA,IAAAA,cAAA,gBAAAA,cAAA,GAAZA,cAAA,CAAc3F,MAAM,MAAA2F,IAAAA,IAAAA,cAAA,KAApBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAA,CAAsBhB,OAAO,EAAEnJ,GAAG,EAAAqC,aAAA,KAAOpC,MAAM,CAAE,CAAC,GAAGjB,SAAS,CAAA;SAAC;QAC3JoL,EAAE,EAAE,SAAAA,EAAA,GAAA;AAAA,UAAA,IAAAC,cAAA,CAAA;AAAA,UAAA,IAACrK,GAAG,GAAAlB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,UAAA,IAAEwL,IAAI,GAAAxL,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;AAAA,UAAA,IAAEmB,MAAM,GAAAnB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,UAAA,OAAMwL,IAAI,GAAG5L,aAAa,CAACoB,eAAe,CAAAuK,CAAAA,cAAA,GAAC3G,EAAE,CAACM,SAAS,MAAA,IAAA,IAAAqG,cAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,cAAA,GAAZA,cAAA,CAAc7F,MAAM,MAAA6F,IAAAA,IAAAA,cAAA,KAApBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAA,CAAsBjB,YAAY,EAAEpJ,GAAG,EAAAqC,aAAA,CAAOpC,EAAAA,EAAAA,MAAM,CAAE,CAAC,GAAGjB,SAAS,CAAA;AAAA,SAAA;AAAC,OAAA,EACnJ0J,QAAQ,CACd,CAAA;MAEDhF,EAAE,CAACM,SAAS,GAAGN,EAAE,CAAC8E,WAAW,CAAC/D,IAAI,CAAC,CAAC;AACpC,MAAA,CAAA4D,kBAAA,GAAA,CAAAC,cAAA,GAAA5E,EAAE,CAACM,SAAS,EAACoE,IAAI,CAAC,MAAAC,IAAAA,IAAAA,kBAAA,KAAlBA,KAAAA,CAAAA,IAAAA,kBAAA,CAAA/C,IAAA,CAAAgD,cAAA,EAAqB5E,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,CAAC,CAAC;MACpD5D,EAAE,CAAA,GAAA,CAAAf,MAAA,CAAK8B,IAAI,CAAA,CAAG,GAAGf,EAAE,CAACM,SAAS,CAAC;AAC9BtF,MAAAA,aAAa,CAACyI,KAAK,CAAC1C,IAAI,EAAE2D,IAAI,EAAE1E,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,CAAC,CAAC;;MAE/D5D,EAAE,CAAC6G,GAAG,KAAN7G,EAAE,CAAC6G,GAAG,GAAK,EAAE,CAAA,CAAA;MACb7G,EAAE,CAAC6G,GAAG,CAAC9F,IAAI,CAAC,GAAApC,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAA,CAAAkG,OAAA,GAAQ7E,EAAE,CAAC6G,GAAG,MAAA,IAAA,IAAAhC,OAAA,KAANA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAA,CAAS9D,IAAI,CAAC,CAAA,EAAA,EAAA,EAAA;AAAEA,QAAAA,IAAI,EAAJA,IAAI;QAAEjF,QAAQ,EAAEkE,EAAE,CAACM,SAAAA;OAAW,CAAA,CAAA;KACrE,CAAA;AAED,IAAA,IAAMwG,WAAW,GAAG,SAAdA,WAAWA,CAAI9G,EAAE,EAAK;MAAA,IAAA+G,eAAA,EAAAC,gBAAA,EAAAC,eAAA,EAAAC,oBAAA,EAAAC,eAAA,CAAA;AACxB,MAAA,IAAMC,QAAQ,GAAA,CAAAL,eAAA,GAAG/G,EAAE,CAACM,SAAS,MAAA,IAAA,IAAAyG,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,eAAA,CAAcM,KAAK,CAAA;;AAEpC;AACAD,MAAAA,QAAQ,KAARA,IAAAA,IAAAA,QAAQ,KAAAJ,KAAAA,CAAAA,IAAAA,CAAAA,gBAAA,GAARI,QAAQ,CAAG,QAAQ,CAAC,MAAA,IAAA,IAAAJ,gBAAA,KAAA,KAAA,CAAA,IAApBA,gBAAA,CAAsBpF,IAAI,CAAC5B,EAAE,CAACM,SAAS,EAAA2G,CAAAA,eAAA,GAAEjH,EAAE,CAACM,SAAS,MAAA,IAAA,IAAA2G,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,eAAA,CAAcnJ,eAAe,CAAC,CAAA;AACvEwJ,MAAAA,eAAe,CAAC9D,EAAE,CAAC,eAAe,EAAE,UAAA+D,KAAA,EAAA;AAAA,QAAA,IAAAC,iBAAA,CAAA;AAAA,QAAA,IAAGC,QAAQ,GAAAF,KAAA,CAARE,QAAQ;UAAEC,QAAQ,GAAAH,KAAA,CAARG,QAAQ,CAAA;QAAA,OAAON,QAAQ,KAARA,IAAAA,IAAAA,QAAQ,KAAAI,KAAAA,CAAAA,IAAAA,CAAAA,iBAAA,GAARJ,QAAQ,CAAG,QAAQ,CAAC,MAAAI,IAAAA,IAAAA,iBAAA,uBAApBA,iBAAA,CAAsB5F,IAAI,CAAC5B,EAAE,CAACM,SAAS,EAAEmH,QAAQ,EAAEC,QAAQ,CAAC,CAAA;OAAC,CAAA,CAAA;;AAE7H;AACAN,MAAAA,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,IAAA,CAAAF,oBAAA,GAARE,QAAQ,CAAG,eAAe,CAAC,MAAA,IAAA,IAAAF,oBAAA,KAA3BA,KAAAA,CAAAA,IAAAA,oBAAA,CAA6BtF,IAAI,CAAC5B,EAAE,CAACM,SAAS,EAAA6G,CAAAA,eAAA,GAAEnH,EAAE,CAACM,SAAS,MAAA6G,IAAAA,IAAAA,eAAA,gBAAAA,eAAA,GAAZA,eAAA,CAAcrJ,eAAe,MAAAqJ,IAAAA,IAAAA,eAAA,uBAA7BA,eAAA,CAA+BQ,MAAM,CAAC,CAAA;AACtFL,MAAAA,eAAe,CAAC9D,EAAE,CAAC,sBAAsB,EAAE,UAAAoE,KAAA,EAAA;AAAA,QAAA,IAAAC,qBAAA,CAAA;AAAA,QAAA,IAAGJ,QAAQ,GAAAG,KAAA,CAARH,QAAQ;UAAEC,QAAQ,GAAAE,KAAA,CAARF,QAAQ,CAAA;QAAA,OAAON,QAAQ,KAARA,IAAAA,IAAAA,QAAQ,KAAAS,KAAAA,CAAAA,IAAAA,CAAAA,qBAAA,GAART,QAAQ,CAAG,eAAe,CAAC,MAAAS,IAAAA,IAAAA,qBAAA,uBAA3BA,qBAAA,CAA6BjG,IAAI,CAAC5B,EAAE,CAACM,SAAS,EAAEmH,QAAQ,EAAEC,QAAQ,CAAC,CAAA;OAAC,CAAA,CAAA;KAC9I,CAAA;IAED,OAAO;MACHI,OAAO,EAAE,SAAAA,OAAAA,CAAC9H,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,EAAK;QACxCa,UAAU,CAAC,SAAS,EAAEzE,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,CAAC,CAAA;OACvD;MACDmE,WAAW,EAAE,SAAAA,WAAAA,CAAC/H,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,EAAK;AAC5C5D,QAAAA,EAAE,CAAC8C,aAAa,GAAGkF,iBAAiB,CAAC,IAAI,CAAC,CAAA;QAC1ChN,aAAa,CAAC+E,WAAW,CAACC,EAAE,EAAEvE,OAAO,EAAEC,KAAK,CAAC,CAAA;QAC7C+I,UAAU,CAAC,aAAa,EAAEzE,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,CAAC,CAAA;QACxDkD,WAAW,CAAC9G,EAAE,CAAC,CAAA;OAClB;MACDiI,OAAO,EAAE,SAAAA,OAAAA,CAACjI,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,EAAK;QACxC5I,aAAa,CAAC+E,WAAW,CAACC,EAAE,EAAEvE,OAAO,EAAEC,KAAK,CAAC,CAAA;QAC7C+I,UAAU,CAAC,SAAS,EAAEzE,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,CAAC,CAAA;OACvD;MACDsE,YAAY,EAAE,SAAAA,YAAAA,CAAClI,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,EAAK;QAC7Ca,UAAU,CAAC,cAAc,EAAEzE,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,CAAC,CAAA;OAC5D;MACDuE,OAAO,EAAE,SAAAA,OAAAA,CAACnI,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,EAAK;QACxC5I,aAAa,CAAC+E,WAAW,CAACC,EAAE,EAAEvE,OAAO,EAAEC,KAAK,CAAC,CAAA;QAC7C+I,UAAU,CAAC,SAAS,EAAEzE,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,CAAC,CAAA;OACvD;MACDwE,aAAa,EAAE,SAAAA,aAAAA,CAACpI,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,EAAK;QAC9Ca,UAAU,CAAC,eAAe,EAAEzE,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,CAAC,CAAA;OAC7D;MACDyE,SAAS,EAAE,SAAAA,SAAAA,CAACrI,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,EAAK;AAAA,QAAA,IAAA0E,eAAA,CAAA;AAC1C,QAAA,CAAAA,eAAA,GAAAtI,EAAE,CAACM,SAAS,MAAA,IAAA,IAAAgI,eAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,eAAA,GAAZA,eAAA,CAAcjF,aAAa,MAAA,IAAA,IAAAiF,eAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,eAAA,GAA3BA,eAAA,CAA6B9K,KAAK,MAAA,IAAA,IAAA8K,eAAA,KAAA,KAAA,CAAA,IAAlCA,eAAA,CAAoCC,MAAM,EAAE,CAAA;QAC5C9D,UAAU,CAAC,WAAW,EAAEzE,EAAE,EAAEvE,OAAO,EAAEC,KAAK,EAAEkI,SAAS,CAAC,CAAA;AAC1D,OAAA;KACH,CAAA;GACJ;EACD4E,MAAM,EAAE,SAAAA,MAAAA,GAAa;IACjB,IAAAC,qBAAA,GAAwBzN,aAAa,CAACC,QAAQ,CAAAwC,KAAA,CAAtBzC,aAAa,EAAAI,SAAiB,CAAC;MAAAsN,sBAAA,GAAAC,cAAA,CAAAF,qBAAA,EAAA,CAAA,CAAA;AAAhD1H,MAAAA,IAAI,GAAA2H,sBAAA,CAAA,CAAA,CAAA;AAAErM,MAAAA,OAAO,GAAAqM,sBAAA,CAAA,CAAA,CAAA,CAAA;AAEpB,IAAA,OAAA/J,aAAA,CAAA;MACI6J,MAAM,EAAE,SAAAA,MAAAA,GAAc;QAClB,IAAAI,sBAAA,GAA0B5N,aAAa,CAACC,QAAQ,CAAAwC,KAAA,CAAtBzC,aAAa,EAAAI,SAAkB,CAAC;UAAAyN,sBAAA,GAAAF,cAAA,CAAAC,sBAAA,EAAA,CAAA,CAAA;AAAnDE,UAAAA,KAAK,GAAAD,sBAAA,CAAA,CAAA,CAAA;AAAEE,UAAAA,QAAQ,GAAAF,sBAAA,CAAA,CAAA,CAAA,CAAA;QAEtB,OAAO7N,aAAa,CAACwN,MAAM,CAACM,KAAK,EAAAnK,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAOtC,OAAO,CAAKA,EAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE6I,OAAO,CAAA,EAAK6D,QAAQ,CAAE,CAAC,CAAA;AACxF,OAAA;AAAC,KAAA,EACE/N,aAAa,CAACwJ,OAAO,CAACzD,IAAI,EAAE1E,OAAO,CAAC,CAAA,CAAA;AAE/C,GAAA;AACJ;;;;"}