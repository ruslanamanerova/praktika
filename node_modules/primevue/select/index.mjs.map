{"version":3,"file":"index.mjs","sources":["../../src/select/BaseSelect.vue","../../src/select/Select.vue","../../src/select/Select.vue?vue&type=template&id=04c299d5&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport SelectStyle from 'primevue/select/style';\n\nexport default {\n    name: 'BaseSelect',\n    extends: BaseComponent,\n    props: {\n        modelValue: null,\n        options: Array,\n        optionLabel: [String, Function],\n        optionValue: [String, Function],\n        optionDisabled: [String, Function],\n        optionGroupLabel: [String, Function],\n        optionGroupChildren: [String, Function],\n        scrollHeight: {\n            type: String,\n            default: '14rem'\n        },\n        filter: Boolean,\n        filterPlaceholder: String,\n        filterLocale: String,\n        filterMatchMode: {\n            type: String,\n            default: 'contains'\n        },\n        filterFields: {\n            type: Array,\n            default: null\n        },\n        editable: Boolean,\n        placeholder: {\n            type: String,\n            default: null\n        },\n        variant: {\n            type: String,\n            default: null\n        },\n        invalid: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        dataKey: null,\n        showClear: {\n            type: Boolean,\n            default: false\n        },\n        inputId: {\n            type: String,\n            default: null\n        },\n        inputClass: {\n            type: [String, Object],\n            default: null\n        },\n        inputStyle: {\n            type: Object,\n            default: null\n        },\n        labelId: {\n            type: String,\n            default: null\n        },\n        labelClass: {\n            type: [String, Object],\n            default: null\n        },\n        labelStyle: {\n            type: Object,\n            default: null\n        },\n        panelClass: {\n            type: [String, Object],\n            default: null\n        },\n        overlayStyle: {\n            type: Object,\n            default: null\n        },\n        overlayClass: {\n            type: [String, Object],\n            default: null\n        },\n        panelStyle: {\n            type: Object,\n            default: null\n        },\n        appendTo: {\n            type: [String, Object],\n            default: 'body'\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        clearIcon: {\n            type: String,\n            default: undefined\n        },\n        dropdownIcon: {\n            type: String,\n            default: undefined\n        },\n        filterIcon: {\n            type: String,\n            default: undefined\n        },\n        loadingIcon: {\n            type: String,\n            default: undefined\n        },\n        resetFilterOnHide: {\n            type: Boolean,\n            default: false\n        },\n        resetFilterOnClear: {\n            type: Boolean,\n            default: false\n        },\n        virtualScrollerOptions: {\n            type: Object,\n            default: null\n        },\n        autoOptionFocus: {\n            type: Boolean,\n            default: false\n        },\n        autoFilterFocus: {\n            type: Boolean,\n            default: false\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        focusOnHover: {\n            type: Boolean,\n            default: true\n        },\n        highlightOnSelect: {\n            type: Boolean,\n            default: true\n        },\n        checkmark: {\n            type: Boolean,\n            default: false\n        },\n        filterMessage: {\n            type: String,\n            default: null\n        },\n        selectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySelectionMessage: {\n            type: String,\n            default: null\n        },\n        emptyFilterMessage: {\n            type: String,\n            default: null\n        },\n        emptyMessage: {\n            type: String,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    style: SelectStyle,\n    provide() {\n        return {\n            $pcSelect: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div ref=\"container\" :id=\"id\" :class=\"cx('root')\" @click=\"onContainerClick\" v-bind=\"ptmi('root')\">\n        <input\n            v-if=\"editable\"\n            ref=\"focusInput\"\n            :id=\"labelId || inputId\"\n            type=\"text\"\n            :class=\"[cx('label'), inputClass, labelClass]\"\n            :style=\"[inputStyle, labelStyle]\"\n            :value=\"editableInputValue\"\n            :placeholder=\"placeholder\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            :disabled=\"disabled\"\n            autocomplete=\"off\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"id + '_list'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :aria-invalid=\"invalid || undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @input=\"onEditableInput\"\n            v-bind=\"ptm('label')\"\n        />\n        <span\n            v-else\n            ref=\"focusInput\"\n            :id=\"labelId || inputId\"\n            :class=\"[cx('label'), inputClass, labelClass]\"\n            :style=\"[inputStyle, labelStyle]\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel || (label === 'p-emptylabel' ? undefined : label)\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"id + '_list'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :aria-disabled=\"disabled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            v-bind=\"ptm('label')\"\n        >\n            <slot name=\"value\" :value=\"modelValue\" :placeholder=\"placeholder\">{{ label === 'p-emptylabel' ? '&nbsp;' : label || 'empty' }}</slot>\n        </span>\n        <slot v-if=\"showClear && modelValue != null\" name=\"clearicon\" :class=\"cx('clearIcon')\" :clearCallback=\"onClearClick\">\n            <component :is=\"clearIcon ? 'i' : 'TimesIcon'\" ref=\"clearIcon\" :class=\"[cx('clearIcon'), clearIcon]\" @click=\"onClearClick\" v-bind=\"ptm('clearIcon')\" data-pc-section=\"clearicon\" />\n        </slot>\n        <div :class=\"cx('dropdown')\" v-bind=\"ptm('dropdown')\">\n            <slot v-if=\"loading\" name=\"loadingicon\" :class=\"cx('loadingIcon')\">\n                <span v-if=\"loadingIcon\" :class=\"[cx('loadingIcon'), 'pi-spin', loadingIcon]\" aria-hidden=\"true\" v-bind=\"ptm('loadingIcon')\" />\n                <SpinnerIcon v-else :class=\"cx('loadingIcon')\" spin aria-hidden=\"true\" v-bind=\"ptm('loadingIcon')\" />\n            </slot>\n            <slot v-else name=\"dropdownicon\" :class=\"cx('dropdownIcon')\">\n                <component :is=\"dropdownIcon ? 'span' : 'ChevronDownIcon'\" :class=\"[cx('dropdownIcon'), dropdownIcon]\" aria-hidden=\"true\" v-bind=\"ptm('dropdownIcon')\" />\n            </slot>\n        </div>\n        <Portal :appendTo=\"appendTo\">\n            <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @after-enter=\"onOverlayAfterEnter\" @leave=\"onOverlayLeave\" @after-leave=\"onOverlayAfterLeave\" v-bind=\"ptm('transition')\">\n                <div v-if=\"overlayVisible\" :ref=\"overlayRef\" :class=\"[cx('overlay'), panelClass, overlayClass]\" :style=\"[panelStyle, overlayStyle]\" @click=\"onOverlayClick\" @keydown=\"onOverlayKeyDown\" v-bind=\"ptm('overlay')\">\n                    <span\n                        ref=\"firstHiddenFocusableElementOnOverlay\"\n                        role=\"presentation\"\n                        aria-hidden=\"true\"\n                        class=\"p-hidden-accessible p-hidden-focusable\"\n                        :tabindex=\"0\"\n                        @focus=\"onFirstHiddenFocus\"\n                        v-bind=\"ptm('hiddenFirstFocusableEl')\"\n                        :data-p-hidden-accessible=\"true\"\n                        :data-p-hidden-focusable=\"true\"\n                    ></span>\n                    <slot name=\"header\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n                    <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n                        <IconField :unstyled=\"unstyled\" v-bind=\"ptm('pcFilterContainer')\">\n                            <InputText\n                                ref=\"filterInput\"\n                                type=\"text\"\n                                :value=\"filterValue\"\n                                @vue:mounted=\"onFilterUpdated\"\n                                @vue:updated=\"onFilterUpdated\"\n                                :class=\"cx('pcFilter')\"\n                                :placeholder=\"filterPlaceholder\"\n                                :variant=\"variant\"\n                                :unstyled=\"unstyled\"\n                                role=\"searchbox\"\n                                autocomplete=\"off\"\n                                :aria-owns=\"id + '_list'\"\n                                :aria-activedescendant=\"focusedOptionId\"\n                                @keydown=\"onFilterKeyDown\"\n                                @blur=\"onFilterBlur\"\n                                @input=\"onFilterChange\"\n                                :pt=\"ptm('pcFilter')\"\n                            />\n                            <InputIcon :unstyled=\"unstyled\" v-bind=\"ptm('pcFilterIconContainer')\">\n                                <slot name=\"filtericon\">\n                                    <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                                    <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                                </slot>\n                            </InputIcon>\n                        </IconField>\n                        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                            {{ filterResultMessageText }}\n                        </span>\n                    </div>\n                    <div :class=\"cx('listContainer')\" :style=\"{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }\" v-bind=\"ptm('listContainer')\">\n                        <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"{ height: scrollHeight }\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                            <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                                <ul :ref=\"(el) => listRef(el, contentRef)\" :id=\"id + '_list'\" :class=\"[cx('list'), styleClass]\" :style=\"contentStyle\" role=\"listbox\" v-bind=\"ptm('list')\">\n                                    <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                                        <li\n                                            v-if=\"isOptionGroup(option)\"\n                                            :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                            :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                            :class=\"cx('optionGroup')\"\n                                            role=\"option\"\n                                            v-bind=\"ptm('optionGroup')\"\n                                        >\n                                            <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">\n                                                <span :class=\"cx('optionGroupLabel')\" v-bind=\"ptm('optionGroupLabel')\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                            </slot>\n                                        </li>\n                                        <li\n                                            v-else\n                                            :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                            v-ripple\n                                            :class=\"cx('option', { option, focusedOption: getOptionIndex(i, getItemOptions) })\"\n                                            :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                            role=\"option\"\n                                            :aria-label=\"getOptionLabel(option)\"\n                                            :aria-selected=\"isSelected(option)\"\n                                            :aria-disabled=\"isOptionDisabled(option)\"\n                                            :aria-setsize=\"ariaSetSize\"\n                                            :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                            @click=\"onOptionSelect($event, option)\"\n                                            @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                            :data-p-selected=\"isSelected(option)\"\n                                            :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                            :data-p-disabled=\"isOptionDisabled(option)\"\n                                            v-bind=\"getPTItemOptions(option, getItemOptions, i, 'option')\"\n                                        >\n                                            <template v-if=\"checkmark\">\n                                                <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                                <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                            </template>\n                                            <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">\n                                                <span :class=\"cx('optionLabel')\" v-bind=\"ptm('optionLabel')\">{{ getOptionLabel(option) }}</span>\n                                            </slot>\n                                        </li>\n                                    </template>\n                                    <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\" :data-p-hidden-accessible=\"true\">\n                                        <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                                    </li>\n                                    <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\" :data-p-hidden-accessible=\"true\">\n                                        <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                                    </li>\n                                </ul>\n                            </template>\n                            <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                                <slot name=\"loader\" :options=\"options\"></slot>\n                            </template>\n                        </VirtualScroller>\n                    </div>\n                    <slot name=\"footer\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n                    <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ emptyMessageText }}\n                    </span>\n                    <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ selectedMessageText }}\n                    </span>\n                    <span\n                        ref=\"lastHiddenFocusableElementOnOverlay\"\n                        role=\"presentation\"\n                        aria-hidden=\"true\"\n                        class=\"p-hidden-accessible p-hidden-focusable\"\n                        :tabindex=\"0\"\n                        @focus=\"onLastHiddenFocus\"\n                        v-bind=\"ptm('hiddenLastFocusableEl')\"\n                        :data-p-hidden-accessible=\"true\"\n                        :data-p-hidden-focusable=\"true\"\n                    ></span>\n                </div>\n            </transition>\n        </Portal>\n    </div>\n</template>\n\n<script>\nimport { FilterService } from '@primevue/core/api';\nimport { ConnectedOverlayScrollHandler, DomHandler, ObjectUtils, UniqueComponentId, ZIndexUtils } from '@primevue/core/utils';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport SearchIcon from '@primevue/icons/search';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport TimesIcon from '@primevue/icons/times';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseSelect from './BaseSelect.vue';\n\nexport default {\n    name: 'Select',\n    extends: BaseSelect,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change', 'focus', 'blur', 'before-show', 'before-hide', 'show', 'hide', 'filter'],\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    labelClickListener: null,\n    overlay: null,\n    list: null,\n    virtualScroller: null,\n    searchTimeout: null,\n    searchValue: null,\n    isModelValueChanged: false,\n    data() {\n        return {\n            id: this.$attrs.id,\n            clicked: false,\n            focused: false,\n            focusedOptionIndex: -1,\n            filterValue: null,\n            overlayVisible: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        modelValue() {\n            this.isModelValueChanged = true;\n        },\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n        this.bindLabelClickListener();\n    },\n    updated() {\n        if (this.overlayVisible && this.isModelValueChanged) {\n            this.scrollInView(this.findSelectedOptionIndex());\n        }\n\n        this.isModelValueChanged = false;\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindLabelClickListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTItemOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    option,\n                    index,\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        show(isFocus) {\n            this.$emit('before-show');\n            this.overlayVisible = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex();\n\n            isFocus && DomHandler.focus(this.$refs.focusInput);\n        },\n        hide(isFocus) {\n            const _hide = () => {\n                this.$emit('before-hide');\n                this.overlayVisible = false;\n                this.clicked = false;\n                this.focusedOptionIndex = -1;\n                this.searchValue = '';\n\n                this.resetFilterOnHide && (this.filterValue = null);\n                isFocus && DomHandler.focus(this.$refs.focusInput);\n            };\n\n            setTimeout(() => {\n                _hide();\n            }, 0); // For ScreenReaders\n        },\n        onFocus(event) {\n            if (this.disabled) {\n                // For ScreenReaders\n                return;\n            }\n\n            this.focused = true;\n\n            if (this.overlayVisible) {\n                this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex();\n                this.scrollInView(this.focusedOptionIndex);\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled || DomHandler.isAndroid()) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event, this.editable);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, this.editable);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, this.editable);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, this.editable);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event, this.editable);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'Backspace':\n                    this.onBackspaceKey(event, this.editable);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        !this.overlayVisible && this.show();\n                        !this.editable && this.searchOptions(event, event.key);\n                    }\n\n                    break;\n            }\n\n            this.clicked = false;\n        },\n        onEditableInput(event) {\n            const value = event.target.value;\n\n            this.searchValue = '';\n            const matched = this.searchOptions(event, value);\n\n            !matched && (this.focusedOptionIndex = -1);\n\n            this.updateModel(event, value);\n\n            !this.overlayVisible && ObjectUtils.isNotEmpty(value) && this.show();\n        },\n        onContainerClick(event) {\n            if (this.disabled || this.loading) {\n                return;\n            }\n\n            if (event.target.tagName === 'INPUT' || event.target.getAttribute('data-pc-section') === 'clearicon' || event.target.closest('[data-pc-section=\"clearicon\"]')) {\n                return;\n            } else if (!this.overlay || !this.overlay.contains(event.target)) {\n                this.overlayVisible ? this.hide(true) : this.show(true);\n            }\n\n            this.clicked = true;\n        },\n        onClearClick(event) {\n            this.updateModel(event, null);\n            this.resetFilterOnClear && (this.filterValue = null);\n        },\n        onFirstHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? DomHandler.getFirstFocusableElement(this.overlay, ':not([data-p-hidden-focusable=\"true\"])') : this.$refs.focusInput;\n\n            DomHandler.focus(focusableEl);\n        },\n        onLastHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? DomHandler.getLastFocusableElement(this.overlay, ':not([data-p-hidden-focusable=\"true\"])') : this.$refs.focusInput;\n\n            DomHandler.focus(focusableEl);\n        },\n        onOptionSelect(event, option, isHide = true) {\n            const value = this.getOptionValue(option);\n\n            this.updateModel(event, value);\n            isHide && this.hide(true);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onFilterChange(event) {\n            const value = event.target.value;\n\n            this.filterValue = value;\n            this.focusedOptionIndex = -1;\n            this.$emit('filter', { originalEvent: event, value });\n\n            !this.virtualScrollerDisabled && this.virtualScroller.scrollToIndex(0);\n        },\n        onFilterKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event, true);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event, true);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = -1;\n        },\n        onFilterUpdated() {\n            if (this.overlayVisible) {\n                this.alignOverlay();\n            }\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        },\n        onOverlayKeyDown(event) {\n            switch (event.code) {\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            if (!this.overlayVisible) {\n                this.show();\n                this.editable && this.changeFocusedOptionIndex(event, this.findSelectedOptionIndex());\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowUpKey(event, pressedInInputText = false) {\n            if (event.altKey && !pressedInInputText) {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.overlayVisible && this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                !this.overlayVisible && this.show();\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (!this.overlayVisible) {\n                this.focusedOptionIndex = -1; // reset\n                this.onArrowDownKey(event);\n            } else {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.hide();\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event, pressedInInputText = false) {\n            !pressedInInputText && this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            this.overlayVisible && this.hide(true);\n            event.preventDefault();\n            event.stopPropagation(); //@todo will be changed next versionss\n        },\n        onTabKey(event, pressedInInputText = false) {\n            if (!pressedInInputText) {\n                if (this.overlayVisible && this.hasFocusableElements()) {\n                    DomHandler.focus(this.$refs.firstHiddenFocusableElementOnOverlay);\n\n                    event.preventDefault();\n                } else {\n                    if (this.focusedOptionIndex !== -1) {\n                        this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                    }\n\n                    this.overlayVisible && this.hide(this.filter);\n                }\n            }\n        },\n        onBackspaceKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                !this.overlayVisible && this.show();\n            }\n        },\n        onOverlayEnter(el) {\n            ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n\n            DomHandler.addStyles(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            this.scrollInView();\n\n            this.autoFilterFocus && DomHandler.focus(this.$refs.filterInput.$el);\n        },\n        onOverlayAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.overlay = null;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndexUtils.clear(el);\n        },\n        alignOverlay() {\n            if (this.appendTo === 'self') {\n                DomHandler.relativePosition(this.overlay, this.$el);\n            } else {\n                this.overlay.style.minWidth = DomHandler.getOuterWidth(this.$el) + 'px';\n                DomHandler.absolutePosition(this.overlay, this.$el);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.overlay && !this.$el.contains(event.target) && !this.overlay.contains(event.target)) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindLabelClickListener() {\n            if (!this.editable && !this.labelClickListener) {\n                const label = document.querySelector(`label[for=\"${this.inputId}\"]`);\n\n                if (label && DomHandler.isVisible(label)) {\n                    this.labelClickListener = () => {\n                        DomHandler.focus(this.$refs.focusInput);\n                    };\n\n                    label.addEventListener('click', this.labelClickListener);\n                }\n            }\n        },\n        unbindLabelClickListener() {\n            if (this.labelClickListener) {\n                const label = document.querySelector(`label[for=\"${this.inputId}\"]`);\n\n                if (label && DomHandler.isVisible(label)) {\n                    label.removeEventListener('click', this.labelClickListener);\n                }\n            }\n        },\n        hasFocusableElements() {\n            return DomHandler.getFocusableElements(this.overlay, ':not([data-p-hidden-focusable=\"true\"])').length > 0;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return ObjectUtils.isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isSelected(option) {\n            return this.isValidOption(option) && ObjectUtils.equals(this.modelValue, this.getOptionValue(option), this.equalityKey);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            return this.hasSelectedOption ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n            let matched = false;\n\n            if (ObjectUtils.isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex !== -1) {\n                    matched = true;\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus) {\n                    this.onOptionSelect(event, this.visibleOptions[index], false);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex], false);\n            }\n        },\n        updateModel(event, value) {\n            this.$emit('update:modelValue', value);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        flatOptions(options) {\n            return (options || []).reduce((result, option, index) => {\n                result.push({ optionGroup: option, group: true, index });\n\n                const optionGroupChildren = this.getOptionGroupChildren(option);\n\n                optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n\n                return result;\n            }, []);\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        visibleOptions() {\n            const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n\n            if (this.filterValue) {\n                const filteredOptions = FilterService.filter(options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n                if (this.optionGroupLabel) {\n                    const optionGroups = this.options || [];\n                    const filtered = [];\n\n                    optionGroups.forEach((group) => {\n                        const groupChildren = this.getOptionGroupChildren(group);\n                        const filteredItems = groupChildren.filter((item) => filteredOptions.includes(item));\n\n                        if (filteredItems.length > 0) filtered.push({ ...group, [typeof this.optionGroupChildren === 'string' ? this.optionGroupChildren : 'items']: [...filteredItems] });\n                    });\n\n                    return this.flatOptions(filtered);\n                }\n\n                return filteredOptions;\n            }\n\n            return options;\n        },\n        hasSelectedOption() {\n            return ObjectUtils.isNotEmpty(this.modelValue);\n        },\n        label() {\n            const selectedOptionIndex = this.findSelectedOptionIndex();\n\n            return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions[selectedOptionIndex]) : this.placeholder || 'p-emptylabel';\n        },\n        editableInputValue() {\n            const selectedOptionIndex = this.findSelectedOptionIndex();\n\n            return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions[selectedOptionIndex]) : this.modelValue || '';\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return ObjectUtils.isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.hasSelectedOption ? this.selectionMessageText.replaceAll('{0}', '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        Portal,\n        InputIcon,\n        IconField,\n        TimesIcon,\n        ChevronDownIcon,\n        SpinnerIcon,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n","<template>\n    <div ref=\"container\" :id=\"id\" :class=\"cx('root')\" @click=\"onContainerClick\" v-bind=\"ptmi('root')\">\n        <input\n            v-if=\"editable\"\n            ref=\"focusInput\"\n            :id=\"labelId || inputId\"\n            type=\"text\"\n            :class=\"[cx('label'), inputClass, labelClass]\"\n            :style=\"[inputStyle, labelStyle]\"\n            :value=\"editableInputValue\"\n            :placeholder=\"placeholder\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            :disabled=\"disabled\"\n            autocomplete=\"off\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"id + '_list'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :aria-invalid=\"invalid || undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @input=\"onEditableInput\"\n            v-bind=\"ptm('label')\"\n        />\n        <span\n            v-else\n            ref=\"focusInput\"\n            :id=\"labelId || inputId\"\n            :class=\"[cx('label'), inputClass, labelClass]\"\n            :style=\"[inputStyle, labelStyle]\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel || (label === 'p-emptylabel' ? undefined : label)\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"id + '_list'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :aria-disabled=\"disabled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            v-bind=\"ptm('label')\"\n        >\n            <slot name=\"value\" :value=\"modelValue\" :placeholder=\"placeholder\">{{ label === 'p-emptylabel' ? '&nbsp;' : label || 'empty' }}</slot>\n        </span>\n        <slot v-if=\"showClear && modelValue != null\" name=\"clearicon\" :class=\"cx('clearIcon')\" :clearCallback=\"onClearClick\">\n            <component :is=\"clearIcon ? 'i' : 'TimesIcon'\" ref=\"clearIcon\" :class=\"[cx('clearIcon'), clearIcon]\" @click=\"onClearClick\" v-bind=\"ptm('clearIcon')\" data-pc-section=\"clearicon\" />\n        </slot>\n        <div :class=\"cx('dropdown')\" v-bind=\"ptm('dropdown')\">\n            <slot v-if=\"loading\" name=\"loadingicon\" :class=\"cx('loadingIcon')\">\n                <span v-if=\"loadingIcon\" :class=\"[cx('loadingIcon'), 'pi-spin', loadingIcon]\" aria-hidden=\"true\" v-bind=\"ptm('loadingIcon')\" />\n                <SpinnerIcon v-else :class=\"cx('loadingIcon')\" spin aria-hidden=\"true\" v-bind=\"ptm('loadingIcon')\" />\n            </slot>\n            <slot v-else name=\"dropdownicon\" :class=\"cx('dropdownIcon')\">\n                <component :is=\"dropdownIcon ? 'span' : 'ChevronDownIcon'\" :class=\"[cx('dropdownIcon'), dropdownIcon]\" aria-hidden=\"true\" v-bind=\"ptm('dropdownIcon')\" />\n            </slot>\n        </div>\n        <Portal :appendTo=\"appendTo\">\n            <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @after-enter=\"onOverlayAfterEnter\" @leave=\"onOverlayLeave\" @after-leave=\"onOverlayAfterLeave\" v-bind=\"ptm('transition')\">\n                <div v-if=\"overlayVisible\" :ref=\"overlayRef\" :class=\"[cx('overlay'), panelClass, overlayClass]\" :style=\"[panelStyle, overlayStyle]\" @click=\"onOverlayClick\" @keydown=\"onOverlayKeyDown\" v-bind=\"ptm('overlay')\">\n                    <span\n                        ref=\"firstHiddenFocusableElementOnOverlay\"\n                        role=\"presentation\"\n                        aria-hidden=\"true\"\n                        class=\"p-hidden-accessible p-hidden-focusable\"\n                        :tabindex=\"0\"\n                        @focus=\"onFirstHiddenFocus\"\n                        v-bind=\"ptm('hiddenFirstFocusableEl')\"\n                        :data-p-hidden-accessible=\"true\"\n                        :data-p-hidden-focusable=\"true\"\n                    ></span>\n                    <slot name=\"header\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n                    <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n                        <IconField :unstyled=\"unstyled\" v-bind=\"ptm('pcFilterContainer')\">\n                            <InputText\n                                ref=\"filterInput\"\n                                type=\"text\"\n                                :value=\"filterValue\"\n                                @vue:mounted=\"onFilterUpdated\"\n                                @vue:updated=\"onFilterUpdated\"\n                                :class=\"cx('pcFilter')\"\n                                :placeholder=\"filterPlaceholder\"\n                                :variant=\"variant\"\n                                :unstyled=\"unstyled\"\n                                role=\"searchbox\"\n                                autocomplete=\"off\"\n                                :aria-owns=\"id + '_list'\"\n                                :aria-activedescendant=\"focusedOptionId\"\n                                @keydown=\"onFilterKeyDown\"\n                                @blur=\"onFilterBlur\"\n                                @input=\"onFilterChange\"\n                                :pt=\"ptm('pcFilter')\"\n                            />\n                            <InputIcon :unstyled=\"unstyled\" v-bind=\"ptm('pcFilterIconContainer')\">\n                                <slot name=\"filtericon\">\n                                    <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                                    <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                                </slot>\n                            </InputIcon>\n                        </IconField>\n                        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                            {{ filterResultMessageText }}\n                        </span>\n                    </div>\n                    <div :class=\"cx('listContainer')\" :style=\"{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }\" v-bind=\"ptm('listContainer')\">\n                        <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"{ height: scrollHeight }\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                            <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                                <ul :ref=\"(el) => listRef(el, contentRef)\" :id=\"id + '_list'\" :class=\"[cx('list'), styleClass]\" :style=\"contentStyle\" role=\"listbox\" v-bind=\"ptm('list')\">\n                                    <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                                        <li\n                                            v-if=\"isOptionGroup(option)\"\n                                            :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                            :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                            :class=\"cx('optionGroup')\"\n                                            role=\"option\"\n                                            v-bind=\"ptm('optionGroup')\"\n                                        >\n                                            <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">\n                                                <span :class=\"cx('optionGroupLabel')\" v-bind=\"ptm('optionGroupLabel')\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                            </slot>\n                                        </li>\n                                        <li\n                                            v-else\n                                            :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                            v-ripple\n                                            :class=\"cx('option', { option, focusedOption: getOptionIndex(i, getItemOptions) })\"\n                                            :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                            role=\"option\"\n                                            :aria-label=\"getOptionLabel(option)\"\n                                            :aria-selected=\"isSelected(option)\"\n                                            :aria-disabled=\"isOptionDisabled(option)\"\n                                            :aria-setsize=\"ariaSetSize\"\n                                            :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                            @click=\"onOptionSelect($event, option)\"\n                                            @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                            :data-p-selected=\"isSelected(option)\"\n                                            :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                            :data-p-disabled=\"isOptionDisabled(option)\"\n                                            v-bind=\"getPTItemOptions(option, getItemOptions, i, 'option')\"\n                                        >\n                                            <template v-if=\"checkmark\">\n                                                <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                                <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                            </template>\n                                            <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">\n                                                <span :class=\"cx('optionLabel')\" v-bind=\"ptm('optionLabel')\">{{ getOptionLabel(option) }}</span>\n                                            </slot>\n                                        </li>\n                                    </template>\n                                    <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\" :data-p-hidden-accessible=\"true\">\n                                        <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                                    </li>\n                                    <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\" :data-p-hidden-accessible=\"true\">\n                                        <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                                    </li>\n                                </ul>\n                            </template>\n                            <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                                <slot name=\"loader\" :options=\"options\"></slot>\n                            </template>\n                        </VirtualScroller>\n                    </div>\n                    <slot name=\"footer\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n                    <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ emptyMessageText }}\n                    </span>\n                    <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ selectedMessageText }}\n                    </span>\n                    <span\n                        ref=\"lastHiddenFocusableElementOnOverlay\"\n                        role=\"presentation\"\n                        aria-hidden=\"true\"\n                        class=\"p-hidden-accessible p-hidden-focusable\"\n                        :tabindex=\"0\"\n                        @focus=\"onLastHiddenFocus\"\n                        v-bind=\"ptm('hiddenLastFocusableEl')\"\n                        :data-p-hidden-accessible=\"true\"\n                        :data-p-hidden-focusable=\"true\"\n                    ></span>\n                </div>\n            </transition>\n        </Portal>\n    </div>\n</template>\n\n<script>\nimport { FilterService } from '@primevue/core/api';\nimport { ConnectedOverlayScrollHandler, DomHandler, ObjectUtils, UniqueComponentId, ZIndexUtils } from '@primevue/core/utils';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport SearchIcon from '@primevue/icons/search';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport TimesIcon from '@primevue/icons/times';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseSelect from './BaseSelect.vue';\n\nexport default {\n    name: 'Select',\n    extends: BaseSelect,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change', 'focus', 'blur', 'before-show', 'before-hide', 'show', 'hide', 'filter'],\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    labelClickListener: null,\n    overlay: null,\n    list: null,\n    virtualScroller: null,\n    searchTimeout: null,\n    searchValue: null,\n    isModelValueChanged: false,\n    data() {\n        return {\n            id: this.$attrs.id,\n            clicked: false,\n            focused: false,\n            focusedOptionIndex: -1,\n            filterValue: null,\n            overlayVisible: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        modelValue() {\n            this.isModelValueChanged = true;\n        },\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n        this.bindLabelClickListener();\n    },\n    updated() {\n        if (this.overlayVisible && this.isModelValueChanged) {\n            this.scrollInView(this.findSelectedOptionIndex());\n        }\n\n        this.isModelValueChanged = false;\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindLabelClickListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTItemOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    option,\n                    index,\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        show(isFocus) {\n            this.$emit('before-show');\n            this.overlayVisible = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex();\n\n            isFocus && DomHandler.focus(this.$refs.focusInput);\n        },\n        hide(isFocus) {\n            const _hide = () => {\n                this.$emit('before-hide');\n                this.overlayVisible = false;\n                this.clicked = false;\n                this.focusedOptionIndex = -1;\n                this.searchValue = '';\n\n                this.resetFilterOnHide && (this.filterValue = null);\n                isFocus && DomHandler.focus(this.$refs.focusInput);\n            };\n\n            setTimeout(() => {\n                _hide();\n            }, 0); // For ScreenReaders\n        },\n        onFocus(event) {\n            if (this.disabled) {\n                // For ScreenReaders\n                return;\n            }\n\n            this.focused = true;\n\n            if (this.overlayVisible) {\n                this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex();\n                this.scrollInView(this.focusedOptionIndex);\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled || DomHandler.isAndroid()) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event, this.editable);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, this.editable);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, this.editable);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, this.editable);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event, this.editable);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'Backspace':\n                    this.onBackspaceKey(event, this.editable);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        !this.overlayVisible && this.show();\n                        !this.editable && this.searchOptions(event, event.key);\n                    }\n\n                    break;\n            }\n\n            this.clicked = false;\n        },\n        onEditableInput(event) {\n            const value = event.target.value;\n\n            this.searchValue = '';\n            const matched = this.searchOptions(event, value);\n\n            !matched && (this.focusedOptionIndex = -1);\n\n            this.updateModel(event, value);\n\n            !this.overlayVisible && ObjectUtils.isNotEmpty(value) && this.show();\n        },\n        onContainerClick(event) {\n            if (this.disabled || this.loading) {\n                return;\n            }\n\n            if (event.target.tagName === 'INPUT' || event.target.getAttribute('data-pc-section') === 'clearicon' || event.target.closest('[data-pc-section=\"clearicon\"]')) {\n                return;\n            } else if (!this.overlay || !this.overlay.contains(event.target)) {\n                this.overlayVisible ? this.hide(true) : this.show(true);\n            }\n\n            this.clicked = true;\n        },\n        onClearClick(event) {\n            this.updateModel(event, null);\n            this.resetFilterOnClear && (this.filterValue = null);\n        },\n        onFirstHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? DomHandler.getFirstFocusableElement(this.overlay, ':not([data-p-hidden-focusable=\"true\"])') : this.$refs.focusInput;\n\n            DomHandler.focus(focusableEl);\n        },\n        onLastHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? DomHandler.getLastFocusableElement(this.overlay, ':not([data-p-hidden-focusable=\"true\"])') : this.$refs.focusInput;\n\n            DomHandler.focus(focusableEl);\n        },\n        onOptionSelect(event, option, isHide = true) {\n            const value = this.getOptionValue(option);\n\n            this.updateModel(event, value);\n            isHide && this.hide(true);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onFilterChange(event) {\n            const value = event.target.value;\n\n            this.filterValue = value;\n            this.focusedOptionIndex = -1;\n            this.$emit('filter', { originalEvent: event, value });\n\n            !this.virtualScrollerDisabled && this.virtualScroller.scrollToIndex(0);\n        },\n        onFilterKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event, true);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event, true);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = -1;\n        },\n        onFilterUpdated() {\n            if (this.overlayVisible) {\n                this.alignOverlay();\n            }\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        },\n        onOverlayKeyDown(event) {\n            switch (event.code) {\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            if (!this.overlayVisible) {\n                this.show();\n                this.editable && this.changeFocusedOptionIndex(event, this.findSelectedOptionIndex());\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowUpKey(event, pressedInInputText = false) {\n            if (event.altKey && !pressedInInputText) {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.overlayVisible && this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                !this.overlayVisible && this.show();\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (!this.overlayVisible) {\n                this.focusedOptionIndex = -1; // reset\n                this.onArrowDownKey(event);\n            } else {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.hide();\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event, pressedInInputText = false) {\n            !pressedInInputText && this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            this.overlayVisible && this.hide(true);\n            event.preventDefault();\n            event.stopPropagation(); //@todo will be changed next versionss\n        },\n        onTabKey(event, pressedInInputText = false) {\n            if (!pressedInInputText) {\n                if (this.overlayVisible && this.hasFocusableElements()) {\n                    DomHandler.focus(this.$refs.firstHiddenFocusableElementOnOverlay);\n\n                    event.preventDefault();\n                } else {\n                    if (this.focusedOptionIndex !== -1) {\n                        this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                    }\n\n                    this.overlayVisible && this.hide(this.filter);\n                }\n            }\n        },\n        onBackspaceKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                !this.overlayVisible && this.show();\n            }\n        },\n        onOverlayEnter(el) {\n            ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n\n            DomHandler.addStyles(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            this.scrollInView();\n\n            this.autoFilterFocus && DomHandler.focus(this.$refs.filterInput.$el);\n        },\n        onOverlayAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.overlay = null;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndexUtils.clear(el);\n        },\n        alignOverlay() {\n            if (this.appendTo === 'self') {\n                DomHandler.relativePosition(this.overlay, this.$el);\n            } else {\n                this.overlay.style.minWidth = DomHandler.getOuterWidth(this.$el) + 'px';\n                DomHandler.absolutePosition(this.overlay, this.$el);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.overlay && !this.$el.contains(event.target) && !this.overlay.contains(event.target)) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindLabelClickListener() {\n            if (!this.editable && !this.labelClickListener) {\n                const label = document.querySelector(`label[for=\"${this.inputId}\"]`);\n\n                if (label && DomHandler.isVisible(label)) {\n                    this.labelClickListener = () => {\n                        DomHandler.focus(this.$refs.focusInput);\n                    };\n\n                    label.addEventListener('click', this.labelClickListener);\n                }\n            }\n        },\n        unbindLabelClickListener() {\n            if (this.labelClickListener) {\n                const label = document.querySelector(`label[for=\"${this.inputId}\"]`);\n\n                if (label && DomHandler.isVisible(label)) {\n                    label.removeEventListener('click', this.labelClickListener);\n                }\n            }\n        },\n        hasFocusableElements() {\n            return DomHandler.getFocusableElements(this.overlay, ':not([data-p-hidden-focusable=\"true\"])').length > 0;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return ObjectUtils.isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isSelected(option) {\n            return this.isValidOption(option) && ObjectUtils.equals(this.modelValue, this.getOptionValue(option), this.equalityKey);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            return this.hasSelectedOption ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n            let matched = false;\n\n            if (ObjectUtils.isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex !== -1) {\n                    matched = true;\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus) {\n                    this.onOptionSelect(event, this.visibleOptions[index], false);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex], false);\n            }\n        },\n        updateModel(event, value) {\n            this.$emit('update:modelValue', value);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        flatOptions(options) {\n            return (options || []).reduce((result, option, index) => {\n                result.push({ optionGroup: option, group: true, index });\n\n                const optionGroupChildren = this.getOptionGroupChildren(option);\n\n                optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n\n                return result;\n            }, []);\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        visibleOptions() {\n            const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n\n            if (this.filterValue) {\n                const filteredOptions = FilterService.filter(options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n                if (this.optionGroupLabel) {\n                    const optionGroups = this.options || [];\n                    const filtered = [];\n\n                    optionGroups.forEach((group) => {\n                        const groupChildren = this.getOptionGroupChildren(group);\n                        const filteredItems = groupChildren.filter((item) => filteredOptions.includes(item));\n\n                        if (filteredItems.length > 0) filtered.push({ ...group, [typeof this.optionGroupChildren === 'string' ? this.optionGroupChildren : 'items']: [...filteredItems] });\n                    });\n\n                    return this.flatOptions(filtered);\n                }\n\n                return filteredOptions;\n            }\n\n            return options;\n        },\n        hasSelectedOption() {\n            return ObjectUtils.isNotEmpty(this.modelValue);\n        },\n        label() {\n            const selectedOptionIndex = this.findSelectedOptionIndex();\n\n            return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions[selectedOptionIndex]) : this.placeholder || 'p-emptylabel';\n        },\n        editableInputValue() {\n            const selectedOptionIndex = this.findSelectedOptionIndex();\n\n            return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions[selectedOptionIndex]) : this.modelValue || '';\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return ObjectUtils.isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.hasSelectedOption ? this.selectionMessageText.replaceAll('{0}', '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        Portal,\n        InputIcon,\n        IconField,\n        TimesIcon,\n        ChevronDownIcon,\n        SpinnerIcon,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","modelValue","options","Array","optionLabel","String","Function","optionValue","optionDisabled","optionGroupLabel","optionGroupChildren","scrollHeight","type","filter","Boolean","filterPlaceholder","filterLocale","filterMatchMode","filterFields","editable","placeholder","variant","invalid","disabled","dataKey","showClear","inputId","inputClass","Object","inputStyle","labelId","labelClass","labelStyle","panelClass","overlayStyle","overlayClass","panelStyle","appendTo","loading","clearIcon","undefined","dropdownIcon","filterIcon","loadingIcon","resetFilterOnHide","resetFilterOnClear","virtualScrollerOptions","autoOptionFocus","autoFilterFocus","selectOnFocus","focusOnHover","highlightOnSelect","checkmark","filterMessage","selectionMessage","emptySelectionMessage","emptyFilterMessage","emptyMessage","tabindex","Number","ariaLabel","ariaLabelledby","style","SelectStyle","provide","$pcSelect","$parentInstance","BaseSelect","inheritAttrs","emits","outsideClickListener","scrollHandler","resizeListener","labelClickListener","overlay","list","virtualScroller","searchTimeout","searchValue","isModelValueChanged","data","id","$attrs","clicked","focused","focusedOptionIndex","filterValue","overlayVisible","watch","$attrsId","newValue","UniqueComponentId","autoUpdateModel","mounted","bindLabelClickListener","updated","scrollInView","findSelectedOptionIndex","beforeUnmount","unbindOutsideClickListener","unbindResizeListener","unbindLabelClickListener","destroy","ZIndexUtils","clear","methods","getOptionIndex","index","fn","virtualScrollerDisabled","getOptionLabel","option","ObjectUtils","resolveFieldData","getOptionValue","getOptionRenderKey","getPTItemOptions","itemOptions","key","ptm","context","selected","isSelected","isOptionDisabled","isOptionGroup","optionGroup","group","getOptionGroupLabel","getOptionGroupChildren","getAriaPosInset","_this","visibleOptions","slice","length","show","isFocus","$emit","findFirstFocusedOptionIndex","DomHandler","focus","$refs","focusInput","hide","_this2","_hide","setTimeout","onFocus","event","onBlur","onKeyDown","isAndroid","preventDefault","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onSpaceKey","onEnterKey","onEscapeKey","onTabKey","onBackspaceKey","isPrintableCharacter","searchOptions","onEditableInput","value","target","matched","updateModel","isNotEmpty","onContainerClick","tagName","getAttribute","closest","contains","onClearClick","onFirstHiddenFocus","focusableEl","relatedTarget","getFirstFocusableElement","onLastHiddenFocus","getLastFocusableElement","onOptionSelect","isHide","arguments","onOptionMouseMove","changeFocusedOptionIndex","onFilterChange","originalEvent","scrollToIndex","onFilterKeyDown","onFilterBlur","onFilterUpdated","alignOverlay","onOverlayClick","OverlayEventBus","emit","$el","onOverlayKeyDown","optionIndex","findNextOptionIndex","findFirstOptionIndex","pressedInInputText","altKey","findPrevOptionIndex","findLastOptionIndex","findLastFocusedOptionIndex","currentTarget","shiftKey","setSelectionRange","selectionStart","len","stopPropagation","hasFocusableElements","firstHiddenFocusableElementOnOverlay","onOverlayEnter","el","set","$primevue","config","zIndex","addStyles","position","top","left","filterInput","onOverlayAfterEnter","bindOutsideClickListener","bindScrollListener","bindResizeListener","onOverlayLeave","unbindScrollListener","onOverlayAfterLeave","relativePosition","minWidth","getOuterWidth","absolutePosition","_this3","document","addEventListener","removeEventListener","_this4","ConnectedOverlayScrollHandler","container","_this5","isTouchDevice","window","_this6","label","querySelector","concat","isVisible","getFocusableElements","isOptionMatched","_this$getOptionLabel","isValidOption","toLocaleLowerCase","startsWith","isValidSelectedOption","equals","equalityKey","_this7","findIndex","_this8","findLastIndex","_this9","matchedOptionIndex","_this10","_this11","hasSelectedOption","selectedIndex","char","_this12","clearTimeout","_this13","$nextTick","focusedOptionId","element","findSingle","scrollIntoView","block","inline","flatOptions","_this14","reduce","result","push","forEach","o","overlayRef","listRef","contentRef","virtualScrollerRef","computed","_this15","filteredOptions","FilterService","searchFields","optionGroups","filtered","groupChildren","filteredItems","item","includes","_objectSpread","_defineProperty","_toConsumableArray","selectedOptionIndex","editableInputValue","filterResultMessageText","filterMessageText","replaceAll","emptyFilterMessageText","locale","searchMessage","emptySearchMessage","emptyMessageText","selectionMessageText","emptySelectionMessageText","selectedMessageText","ariaSetSize","_this16","directives","ripple","Ripple","components","InputText","VirtualScroller","Portal","InputIcon","IconField","TimesIcon","ChevronDownIcon","SpinnerIcon","SearchIcon","CheckIcon","BlankIcon","_openBlock","_createElementBlock","_mergeProps","ref","$data","_ctx","cx","onClick","$options","apply","ptmi","autocomplete","role","onKeydown","onInput","_hoisted_2","_renderSlot","$slots","_createTextVNode","_toDisplayString","clearCallback","_createBlock","_resolveDynamicComponent","_createElementVNode","_component_SpinnerIcon","spin","_createVNode","_component_Portal","_Transition","onEnter","onAfterEnter","onLeave","onAfterLeave","_component_IconField","unstyled","_component_InputText","onVnodeMounted","onVnodeUpdated","pt","_component_InputIcon","_component_SearchIcon","_component_VirtualScroller","items","content","_withCtx","_ref","styleClass","getItemOptions","contentStyle","itemSize","_Fragment","_renderList","i","height","_withDirectives","$event","onMousemove","_component_CheckIcon","_component_BlankIcon","loader","_ref2"],"mappings":"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"}