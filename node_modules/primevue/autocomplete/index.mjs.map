{"version":3,"file":"index.mjs","sources":["../../src/autocomplete/BaseAutoComplete.vue","../../src/autocomplete/AutoComplete.vue","../../src/autocomplete/AutoComplete.vue?vue&type=template&id=51acd05c&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AutoCompleteStyle from 'primevue/autocomplete/style';\n\nexport default {\n    name: 'BaseAutoComplete',\n    extends: BaseComponent,\n    props: {\n        modelValue: null,\n        suggestions: {\n            type: Array,\n            default: null\n        },\n        optionLabel: null,\n        optionDisabled: null,\n        optionGroupLabel: null,\n        optionGroupChildren: null,\n        scrollHeight: {\n            type: String,\n            default: '14rem'\n        },\n        dropdown: {\n            type: Boolean,\n            default: false\n        },\n        dropdownMode: {\n            type: String,\n            default: 'blank'\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        variant: {\n            type: String,\n            default: null\n        },\n        invalid: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        placeholder: {\n            type: String,\n            default: null\n        },\n        dataKey: {\n            type: String,\n            default: null\n        },\n        minLength: {\n            type: Number,\n            default: 1\n        },\n        delay: {\n            type: Number,\n            default: 300\n        },\n        appendTo: {\n            type: [String, Object],\n            default: 'body'\n        },\n        forceSelection: {\n            type: Boolean,\n            default: false\n        },\n        completeOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        inputId: {\n            type: String,\n            default: null\n        },\n        inputStyle: {\n            type: Object,\n            default: null\n        },\n        inputClass: {\n            type: [String, Object],\n            default: null\n        },\n        panelStyle: {\n            type: Object,\n            default: null\n        },\n        panelClass: {\n            type: [String, Object],\n            default: null\n        },\n        overlayStyle: {\n            type: Object,\n            default: null\n        },\n        overlayClass: {\n            type: [String, Object],\n            default: null\n        },\n        dropdownIcon: {\n            type: String,\n            default: null\n        },\n        dropdownClass: {\n            type: [String, Object],\n            default: null\n        },\n        loader: {\n            type: String,\n            default: null\n        },\n        loadingIcon: {\n            type: String,\n            default: null\n        },\n        removeTokenIcon: {\n            type: String,\n            default: null\n        },\n        chipIcon: {\n            type: String,\n            default: null\n        },\n        virtualScrollerOptions: {\n            type: Object,\n            default: null\n        },\n        autoOptionFocus: {\n            type: Boolean,\n            default: false\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        focusOnHover: {\n            type: Boolean,\n            default: true\n        },\n        searchLocale: {\n            type: String,\n            default: undefined\n        },\n        searchMessage: {\n            type: String,\n            default: null\n        },\n        selectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySelectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySearchMessage: {\n            type: String,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        typeahead: {\n            type: Boolean,\n            default: true\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    style: AutoCompleteStyle,\n    provide() {\n        return {\n            $pcAutoComplete: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div ref=\"container\" :class=\"cx('root')\" :style=\"sx('root')\" @click=\"onContainerClick\" v-bind=\"ptmi('root')\">\n        <InputText\n            v-if=\"!multiple\"\n            ref=\"focusInput\"\n            :id=\"inputId\"\n            type=\"text\"\n            :class=\"[cx('pcInput'), inputClass]\"\n            :style=\"inputStyle\"\n            :value=\"inputValue\"\n            :placeholder=\"placeholder\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            :disabled=\"disabled\"\n            :invalid=\"invalid\"\n            :variant=\"variant\"\n            autocomplete=\"off\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            aria-autocomplete=\"list\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"panelId\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @input=\"onInput\"\n            @change=\"onChange\"\n            :unstyled=\"unstyled\"\n            :pt=\"ptm('pcInput')\"\n        />\n        <ul\n            v-if=\"multiple\"\n            ref=\"multiContainer\"\n            :class=\"cx('inputMultiple')\"\n            tabindex=\"-1\"\n            role=\"listbox\"\n            aria-orientation=\"horizontal\"\n            :aria-activedescendant=\"focused ? focusedMultipleOptionId : undefined\"\n            @focus=\"onMultipleContainerFocus\"\n            @blur=\"onMultipleContainerBlur\"\n            @keydown=\"onMultipleContainerKeyDown\"\n            v-bind=\"ptm('inputMultiple')\"\n        >\n            <li\n                v-for=\"(option, i) of modelValue\"\n                :key=\"`${i}_${getOptionLabel(option)}`\"\n                :id=\"id + '_multiple_option_' + i\"\n                :class=\"cx('chipItem', { i })\"\n                role=\"option\"\n                :aria-label=\"getOptionLabel(option)\"\n                :aria-selected=\"true\"\n                :aria-setsize=\"modelValue.length\"\n                :aria-posinset=\"i + 1\"\n                v-bind=\"ptm('chipItem')\"\n            >\n                <slot name=\"chip\" :class=\"cx('pcChip')\" :value=\"option\" :index=\"i\" :removeCallback=\"(event) => removeOption(event, i)\" v-bind=\"ptm('pcChip')\">\n                    <!-- TODO: removetokenicon and removeTokenIcon  deprecated since v4.0. Use chipicon slot and chipIcon prop-->\n                    <Chip :class=\"cx('pcChip')\" :label=\"getOptionLabel(option)\" :removeIcon=\"chipIcon || removeTokenIcon\" removable :unstyled=\"unstyled\" @remove=\"removeOption($event, i)\" :pt=\"ptm('pcChip')\">\n                        <template #removeicon>\n                            <slot :name=\"$slots.chipicon ? 'chipicon' : 'removetokenicon'\" :class=\"cx('chipIcon')\" :index=\"i\" :removeCallback=\"(event) => removeOption(event, i)\" />\n                        </template>\n                    </Chip>\n                </slot>\n            </li>\n            <li :class=\"cx('inputChip')\" role=\"option\" v-bind=\"ptm('inputChip')\">\n                <input\n                    ref=\"focusInput\"\n                    :id=\"inputId\"\n                    type=\"text\"\n                    :style=\"inputStyle\"\n                    :class=\"inputClass\"\n                    :placeholder=\"placeholder\"\n                    :tabindex=\"!disabled ? tabindex : -1\"\n                    :disabled=\"disabled\"\n                    autocomplete=\"off\"\n                    role=\"combobox\"\n                    :aria-label=\"ariaLabel\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    aria-haspopup=\"listbox\"\n                    aria-autocomplete=\"list\"\n                    :aria-expanded=\"overlayVisible\"\n                    :aria-controls=\"id + '_list'\"\n                    :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                    :aria-invalid=\"invalid || undefined\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @input=\"onInput\"\n                    @change=\"onChange\"\n                    v-bind=\"ptm('input')\"\n                />\n            </li>\n        </ul>\n        <slot v-if=\"searching || loading\" :class=\"cx('loader')\" :name=\"$slots.loader ? 'loader' : 'loadingicon'\">\n            <i v-if=\"loader || loadingIcon\" :class=\"['pi-spin', cx('loader'), loader, loadingIcon]\" aria-hidden=\"true\" v-bind=\"ptm('loader')\" />\n            <SpinnerIcon v-else :class=\"cx('loader')\" spin aria-hidden=\"true\" v-bind=\"ptm('loader')\" />\n        </slot>\n        <slot :name=\"$slots.dropdown ? 'dropdown' : 'dropdownbutton'\" :toggleCallback=\"(event) => onDropdownClick(event)\">\n            <button\n                v-if=\"dropdown\"\n                ref=\"dropdownButton\"\n                type=\"button\"\n                :class=\"[cx('dropdown'), dropdownClass]\"\n                :disabled=\"disabled\"\n                aria-haspopup=\"listbox\"\n                :aria-expanded=\"overlayVisible\"\n                :aria-controls=\"panelId\"\n                @click=\"onDropdownClick\"\n                v-bind=\"ptm('dropdown')\"\n            >\n                <slot name=\"dropdownicon\" :class=\"dropdownIcon\">\n                    <component :is=\"dropdownIcon ? 'span' : 'ChevronDownIcon'\" :class=\"dropdownIcon\" v-bind=\"ptm('dropdownIcon')\" />\n                </slot>\n            </button>\n        </slot>\n        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSearchResult')\" :data-p-hidden-accessible=\"true\">\n            {{ searchResultMessageText }}\n        </span>\n        <Portal :appendTo=\"appendTo\">\n            <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @after-enter=\"onOverlayAfterEnter\" @leave=\"onOverlayLeave\" @after-leave=\"onOverlayAfterLeave\" v-bind=\"ptm('transition')\">\n                <div\n                    v-if=\"overlayVisible\"\n                    :ref=\"overlayRef\"\n                    :id=\"panelId\"\n                    :class=\"[cx('overlay'), panelClass, overlayClass]\"\n                    :style=\"{ ...panelStyle, ...overlayStyle, 'max-height': virtualScrollerDisabled ? scrollHeight : '' }\"\n                    @click=\"onOverlayClick\"\n                    @keydown=\"onOverlayKeyDown\"\n                    v-bind=\"ptm('overlay')\"\n                >\n                    <slot name=\"header\" :value=\"modelValue\" :suggestions=\"visibleOptions\"></slot>\n                    <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :style=\"{ height: scrollHeight }\" :items=\"visibleOptions\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                        <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                            <ul :ref=\"(el) => listRef(el, contentRef)\" :id=\"id + '_list'\" :class=\"[cx('list'), styleClass]\" :style=\"contentStyle\" role=\"listbox\" :aria-label=\"listAriaLabel\" v-bind=\"ptm('list')\">\n                                <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                                    <li v-if=\"isOptionGroup(option)\" :id=\"id + '_' + getOptionIndex(i, getItemOptions)\" :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\" :class=\"cx('optionGroup')\" role=\"option\" v-bind=\"ptm('optionGroup')\">\n                                        <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionGroupLabel(option.optionGroup) }}</slot>\n                                    </li>\n                                    <li\n                                        v-else\n                                        :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                        v-ripple\n                                        :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                        :class=\"cx('option', { option, i, getItemOptions })\"\n                                        role=\"option\"\n                                        :aria-label=\"getOptionLabel(option)\"\n                                        :aria-selected=\"isSelected(option)\"\n                                        :aria-disabled=\"isOptionDisabled(option)\"\n                                        :aria-setsize=\"ariaSetSize\"\n                                        :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                        @click=\"onOptionSelect($event, option)\"\n                                        @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                        :data-p-selected=\"isSelected(option)\"\n                                        :data-p-focus=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                        :data-p-disabled=\"isOptionDisabled(option)\"\n                                        v-bind=\"getPTOptions(option, getItemOptions, i, 'option')\"\n                                    >\n                                        <slot name=\"option\" :option=\"option\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionLabel(option) }}</slot>\n                                    </li>\n                                </template>\n                                <li v-if=\"!items || (items && items.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                                    <slot name=\"empty\">{{ searchResultMessageText }}</slot>\n                                </li>\n                            </ul>\n                        </template>\n                        <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                            <slot name=\"loader\" :options=\"options\"></slot>\n                        </template>\n                    </VirtualScroller>\n                    <slot name=\"footer\" :value=\"modelValue\" :suggestions=\"visibleOptions\"></slot>\n                    <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ selectedMessageText }}\n                    </span>\n                </div>\n            </transition>\n        </Portal>\n    </div>\n</template>\n\n<script>\nimport { ConnectedOverlayScrollHandler, DomHandler, ObjectUtils, UniqueComponentId, ZIndexUtils } from '@primevue/core/utils';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport Chip from 'primevue/chip';\nimport InputText from 'primevue/inputtext';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseAutoComplete from './BaseAutoComplete.vue';\n\nexport default {\n    name: 'AutoComplete',\n    extends: BaseAutoComplete,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change', 'focus', 'blur', 'item-select', 'item-unselect', 'option-select', 'option-unselect', 'dropdown-click', 'clear', 'complete', 'before-show', 'before-hide', 'show', 'hide'],\n    outsideClickListener: null,\n    resizeListener: null,\n    scrollHandler: null,\n    overlay: null,\n    virtualScroller: null,\n    searchTimeout: null,\n    dirty: false,\n    data() {\n        return {\n            id: this.$attrs.id,\n            clicked: false,\n            focused: false,\n            focusedOptionIndex: -1,\n            focusedMultipleOptionIndex: -1,\n            overlayVisible: false,\n            searching: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        suggestions() {\n            if (this.searching) {\n                this.show();\n                this.focusedOptionIndex = this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n                this.searching = false;\n            }\n\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n    },\n    updated() {\n        if (this.overlayVisible) {\n            this.alignOverlay();\n        }\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option;\n        },\n        getOptionValue(option) {\n            return option; // TODO: The 'optionValue' properties can be added.\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        show(isFocus) {\n            this.$emit('before-show');\n            this.dirty = true;\n            this.overlayVisible = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n            isFocus && DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n        },\n        hide(isFocus) {\n            const _hide = () => {\n                this.$emit('before-hide');\n                this.dirty = isFocus;\n                this.overlayVisible = false;\n                this.clicked = false;\n                this.focusedOptionIndex = -1;\n\n                isFocus && DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n            };\n\n            setTimeout(() => {\n                _hide();\n            }, 0); // For ScreenReaders\n        },\n        onFocus(event) {\n            if (this.disabled) {\n                // For ScreenReaders\n                return;\n            }\n\n            if (!this.dirty && this.completeOnFocus) {\n                this.search(event, event.target.value, 'focus');\n            }\n\n            this.dirty = true;\n            this.focused = true;\n\n            if (this.overlayVisible) {\n                this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n                this.scrollInView(this.focusedOptionIndex);\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.dirty = false;\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'Backspace':\n                    this.onBackspaceKey(event);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    break;\n            }\n\n            this.clicked = false;\n        },\n        onInput(event) {\n            if (this.typeahead) {\n                if (this.searchTimeout) {\n                    clearTimeout(this.searchTimeout);\n                }\n\n                let query = event.target.value;\n\n                if (!this.multiple) {\n                    this.updateModel(event, query);\n                }\n\n                if (query.length === 0) {\n                    this.hide();\n                    this.$emit('clear');\n                } else {\n                    if (query.length >= this.minLength) {\n                        this.focusedOptionIndex = -1;\n\n                        this.searchTimeout = setTimeout(() => {\n                            this.search(event, query, 'input');\n                        }, this.delay);\n                    } else {\n                        this.hide();\n                    }\n                }\n            }\n        },\n        onChange(event) {\n            if (this.forceSelection) {\n                let valid = false;\n\n                // when forceSelection is on, prevent called twice onOptionSelect()\n                if (this.visibleOptions && !this.multiple) {\n                    let value = this.multiple ? this.$refs.focusInput.value : this.$refs.focusInput.$el.value;\n                    const matchedValue = this.visibleOptions.find((option) => this.isOptionMatched(option, value || ''));\n\n                    if (matchedValue !== undefined) {\n                        valid = true;\n                        !this.isSelected(matchedValue) && this.onOptionSelect(event, matchedValue);\n                    }\n                }\n\n                if (!valid) {\n                    if (this.multiple) this.$refs.focusInput.value = '';\n                    else this.$refs.focusInput.$el.value = '';\n                    this.$emit('clear');\n                    !this.multiple && this.updateModel(event, null);\n                }\n            }\n        },\n        onMultipleContainerFocus() {\n            if (this.disabled) {\n                // For ScreenReaders\n                return;\n            }\n\n            this.focused = true;\n        },\n        onMultipleContainerBlur() {\n            this.focusedMultipleOptionIndex = -1;\n            this.focused = false;\n        },\n        onMultipleContainerKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.onArrowLeftKeyOnMultiple(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKeyOnMultiple(event);\n                    break;\n\n                case 'Backspace':\n                    this.onBackspaceKeyOnMultiple(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onContainerClick(event) {\n            this.clicked = true;\n\n            if (this.disabled || this.searching || this.loading || this.isInputClicked(event) || this.isDropdownClicked(event)) {\n                return;\n            }\n\n            if (!this.overlay || !this.overlay.contains(event.target)) {\n                DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n            }\n        },\n        onDropdownClick(event) {\n            let query = undefined;\n\n            if (this.overlayVisible) {\n                this.hide(true);\n            } else {\n                DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n                query = this.$refs.focusInput.$el.value;\n\n                if (this.dropdownMode === 'blank') this.search(event, '', 'dropdown');\n                else if (this.dropdownMode === 'current') this.search(event, query, 'dropdown');\n            }\n\n            this.$emit('dropdown-click', { originalEvent: event, query });\n        },\n        onOptionSelect(event, option, isHide = true) {\n            const value = this.getOptionValue(option);\n\n            if (this.multiple) {\n                this.$refs.focusInput.value = '';\n\n                if (!this.isSelected(option)) {\n                    this.updateModel(event, [...(this.modelValue || []), value]);\n                }\n            } else {\n                this.updateModel(event, value);\n            }\n\n            this.$emit('item-select', { originalEvent: event, value: option });\n            this.$emit('option-select', { originalEvent: event, value: option });\n\n            isHide && this.hide(true);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        },\n        onOverlayKeyDown(event) {\n            switch (event.code) {\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            if (!this.overlayVisible) {\n                return;\n            }\n\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (!this.overlayVisible) {\n                return;\n            }\n\n            if (event.altKey) {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.overlayVisible && this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const target = event.currentTarget;\n\n            this.focusedOptionIndex = -1;\n\n            if (this.multiple) {\n                if (ObjectUtils.isEmpty(target.value) && this.hasSelectedOption) {\n                    DomHandler.focus(this.$refs.multiContainer);\n                    this.focusedMultipleOptionIndex = this.modelValue.length;\n                } else {\n                    event.stopPropagation(); // To prevent onArrowLeftKeyOnMultiple method\n                }\n            }\n        },\n        onArrowRightKey(event) {\n            this.focusedOptionIndex = -1;\n\n            this.multiple && event.stopPropagation(); // To prevent onArrowRightKeyOnMultiple method\n        },\n        onHomeKey(event) {\n            const { currentTarget } = event;\n            const len = currentTarget.value.length;\n\n            currentTarget.setSelectionRange(0, event.shiftKey ? len : 0);\n            this.focusedOptionIndex = -1;\n\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            const { currentTarget } = event;\n            const len = currentTarget.value.length;\n\n            currentTarget.setSelectionRange(event.shiftKey ? 0 : len, len);\n            this.focusedOptionIndex = -1;\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (!this.typeahead) {\n                if (this.multiple) {\n                    this.updateModel(event, [...(this.modelValue || []), event.target.value]);\n                    this.$refs.focusInput.value = '';\n                }\n            } else {\n                if (!this.overlayVisible) {\n                    this.focusedOptionIndex = -1; // reset\n                    this.onArrowDownKey(event);\n                } else {\n                    if (this.focusedOptionIndex !== -1) {\n                        this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                    }\n\n                    this.hide();\n                }\n            }\n        },\n        onEscapeKey(event) {\n            this.overlayVisible && this.hide(true);\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedOptionIndex !== -1) {\n                this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n            }\n\n            this.overlayVisible && this.hide();\n        },\n        onBackspaceKey(event) {\n            if (this.multiple) {\n                if (ObjectUtils.isNotEmpty(this.modelValue) && !this.$refs.focusInput.value) {\n                    const removedValue = this.modelValue[this.modelValue.length - 1];\n                    const newValue = this.modelValue.slice(0, -1);\n\n                    this.$emit('update:modelValue', newValue);\n                    this.$emit('item-unselect', { originalEvent: event, value: removedValue });\n                    this.$emit('option-unselect', { originalEvent: event, value: removedValue });\n                }\n\n                event.stopPropagation(); // To prevent onBackspaceKeyOnMultiple method\n            }\n        },\n        onArrowLeftKeyOnMultiple() {\n            this.focusedMultipleOptionIndex = this.focusedMultipleOptionIndex < 1 ? 0 : this.focusedMultipleOptionIndex - 1;\n        },\n        onArrowRightKeyOnMultiple() {\n            this.focusedMultipleOptionIndex++;\n\n            if (this.focusedMultipleOptionIndex > this.modelValue.length - 1) {\n                this.focusedMultipleOptionIndex = -1;\n                DomHandler.focus(this.$refs.focusInput);\n            }\n        },\n        onBackspaceKeyOnMultiple(event) {\n            if (this.focusedMultipleOptionIndex !== -1) {\n                this.removeOption(event, this.focusedMultipleOptionIndex);\n            }\n        },\n        onOverlayEnter(el) {\n            ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n\n            DomHandler.addStyles(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n        },\n        onOverlayAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.overlay = null;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndexUtils.clear(el);\n        },\n        alignOverlay() {\n            let target = this.multiple ? this.$refs.multiContainer : this.$refs.focusInput.$el;\n\n            if (this.appendTo === 'self') {\n                DomHandler.relativePosition(this.overlay, target);\n            } else {\n                this.overlay.style.minWidth = DomHandler.getOuterWidth(target) + 'px';\n                DomHandler.absolutePosition(this.overlay, target);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.overlay && this.isOutsideClicked(event)) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isOutsideClicked(event) {\n            return !this.overlay.contains(event.target) && !this.isInputClicked(event) && !this.isDropdownClicked(event);\n        },\n        isInputClicked(event) {\n            if (this.multiple) return event.target === this.$refs.multiContainer || this.$refs.multiContainer.contains(event.target);\n            else return event.target === this.$refs.focusInput.$el;\n        },\n        isDropdownClicked(event) {\n            return this.$refs.dropdownButton ? event.target === this.$refs.dropdownButton || this.$refs.dropdownButton.contains(event.target) : false;\n        },\n        isOptionMatched(option, value) {\n            return this.isValidOption(option) && this.getOptionLabel(option)?.toLocaleLowerCase(this.searchLocale) === value.toLocaleLowerCase(this.searchLocale);\n        },\n        isValidOption(option) {\n            return ObjectUtils.isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isEquals(value1, value2) {\n            return ObjectUtils.equals(value1, value2, this.equalityKey);\n        },\n        isSelected(option) {\n            const optionValue = this.getOptionValue(option);\n\n            return this.multiple ? (this.modelValue || []).some((value) => this.isEquals(value, optionValue)) : this.isEquals(this.modelValue, this.getOptionValue(option));\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            return this.hasSelectedOption ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        search(event, query, source) {\n            //allow empty string but not undefined or null\n            if (query === undefined || query === null) {\n                return;\n            }\n\n            //do not search blank values on input change\n            if (source === 'input' && query.trim().length === 0) {\n                return;\n            }\n\n            this.searching = true;\n            this.$emit('complete', { originalEvent: event, query });\n        },\n        removeOption(event, index) {\n            const removedOption = this.modelValue[index];\n            const value = this.modelValue.filter((_, i) => i !== index).map((option) => this.getOptionValue(option));\n\n            this.updateModel(event, value);\n            this.$emit('item-unselect', { originalEvent: event, value: removedOption });\n            this.$emit('option-unselect', { originalEvent: event, value: removedOption });\n            this.dirty = true;\n            DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus) {\n                    this.onOptionSelect(event, this.visibleOptions[index], false);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex], false);\n            }\n        },\n        updateModel(event, value) {\n            this.$emit('update:modelValue', value);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        flatOptions(options) {\n            return (options || []).reduce((result, option, index) => {\n                result.push({ optionGroup: option, group: true, index });\n\n                const optionGroupChildren = this.getOptionGroupChildren(option);\n\n                optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n\n                return result;\n            }, []);\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        visibleOptions() {\n            return this.optionGroupLabel ? this.flatOptions(this.suggestions) : this.suggestions || [];\n        },\n        inputValue() {\n            if (ObjectUtils.isNotEmpty(this.modelValue)) {\n                if (typeof this.modelValue === 'object') {\n                    const label = this.getOptionLabel(this.modelValue);\n\n                    return label != null ? label : this.modelValue;\n                } else {\n                    return this.modelValue;\n                }\n            } else {\n                return '';\n            }\n        },\n        hasSelectedOption() {\n            return ObjectUtils.isNotEmpty(this.modelValue);\n        },\n        equalityKey() {\n            return this.dataKey; // TODO: The 'optionValue' properties can be added.\n        },\n        searchResultMessageText() {\n            return ObjectUtils.isNotEmpty(this.visibleOptions) && this.overlayVisible ? this.searchMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptySearchMessageText;\n        },\n        searchMessageText() {\n            return this.searchMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptySearchMessageText() {\n            return this.emptySearchMessage || this.$primevue.config.locale.emptySearchMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.hasSelectedOption ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.modelValue.length : '1') : this.emptySelectionMessageText;\n        },\n        listAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.listLabel : undefined;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        focusedMultipleOptionId() {\n            return this.focusedMultipleOptionIndex !== -1 ? `${this.id}_multiple_option_${this.focusedMultipleOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        },\n        panelId() {\n            return this.id + '_panel';\n        }\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        Portal,\n        ChevronDownIcon,\n        SpinnerIcon,\n        Chip\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <div ref=\"container\" :class=\"cx('root')\" :style=\"sx('root')\" @click=\"onContainerClick\" v-bind=\"ptmi('root')\">\n        <InputText\n            v-if=\"!multiple\"\n            ref=\"focusInput\"\n            :id=\"inputId\"\n            type=\"text\"\n            :class=\"[cx('pcInput'), inputClass]\"\n            :style=\"inputStyle\"\n            :value=\"inputValue\"\n            :placeholder=\"placeholder\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            :disabled=\"disabled\"\n            :invalid=\"invalid\"\n            :variant=\"variant\"\n            autocomplete=\"off\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            aria-autocomplete=\"list\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"panelId\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @input=\"onInput\"\n            @change=\"onChange\"\n            :unstyled=\"unstyled\"\n            :pt=\"ptm('pcInput')\"\n        />\n        <ul\n            v-if=\"multiple\"\n            ref=\"multiContainer\"\n            :class=\"cx('inputMultiple')\"\n            tabindex=\"-1\"\n            role=\"listbox\"\n            aria-orientation=\"horizontal\"\n            :aria-activedescendant=\"focused ? focusedMultipleOptionId : undefined\"\n            @focus=\"onMultipleContainerFocus\"\n            @blur=\"onMultipleContainerBlur\"\n            @keydown=\"onMultipleContainerKeyDown\"\n            v-bind=\"ptm('inputMultiple')\"\n        >\n            <li\n                v-for=\"(option, i) of modelValue\"\n                :key=\"`${i}_${getOptionLabel(option)}`\"\n                :id=\"id + '_multiple_option_' + i\"\n                :class=\"cx('chipItem', { i })\"\n                role=\"option\"\n                :aria-label=\"getOptionLabel(option)\"\n                :aria-selected=\"true\"\n                :aria-setsize=\"modelValue.length\"\n                :aria-posinset=\"i + 1\"\n                v-bind=\"ptm('chipItem')\"\n            >\n                <slot name=\"chip\" :class=\"cx('pcChip')\" :value=\"option\" :index=\"i\" :removeCallback=\"(event) => removeOption(event, i)\" v-bind=\"ptm('pcChip')\">\n                    <!-- TODO: removetokenicon and removeTokenIcon  deprecated since v4.0. Use chipicon slot and chipIcon prop-->\n                    <Chip :class=\"cx('pcChip')\" :label=\"getOptionLabel(option)\" :removeIcon=\"chipIcon || removeTokenIcon\" removable :unstyled=\"unstyled\" @remove=\"removeOption($event, i)\" :pt=\"ptm('pcChip')\">\n                        <template #removeicon>\n                            <slot :name=\"$slots.chipicon ? 'chipicon' : 'removetokenicon'\" :class=\"cx('chipIcon')\" :index=\"i\" :removeCallback=\"(event) => removeOption(event, i)\" />\n                        </template>\n                    </Chip>\n                </slot>\n            </li>\n            <li :class=\"cx('inputChip')\" role=\"option\" v-bind=\"ptm('inputChip')\">\n                <input\n                    ref=\"focusInput\"\n                    :id=\"inputId\"\n                    type=\"text\"\n                    :style=\"inputStyle\"\n                    :class=\"inputClass\"\n                    :placeholder=\"placeholder\"\n                    :tabindex=\"!disabled ? tabindex : -1\"\n                    :disabled=\"disabled\"\n                    autocomplete=\"off\"\n                    role=\"combobox\"\n                    :aria-label=\"ariaLabel\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    aria-haspopup=\"listbox\"\n                    aria-autocomplete=\"list\"\n                    :aria-expanded=\"overlayVisible\"\n                    :aria-controls=\"id + '_list'\"\n                    :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                    :aria-invalid=\"invalid || undefined\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @input=\"onInput\"\n                    @change=\"onChange\"\n                    v-bind=\"ptm('input')\"\n                />\n            </li>\n        </ul>\n        <slot v-if=\"searching || loading\" :class=\"cx('loader')\" :name=\"$slots.loader ? 'loader' : 'loadingicon'\">\n            <i v-if=\"loader || loadingIcon\" :class=\"['pi-spin', cx('loader'), loader, loadingIcon]\" aria-hidden=\"true\" v-bind=\"ptm('loader')\" />\n            <SpinnerIcon v-else :class=\"cx('loader')\" spin aria-hidden=\"true\" v-bind=\"ptm('loader')\" />\n        </slot>\n        <slot :name=\"$slots.dropdown ? 'dropdown' : 'dropdownbutton'\" :toggleCallback=\"(event) => onDropdownClick(event)\">\n            <button\n                v-if=\"dropdown\"\n                ref=\"dropdownButton\"\n                type=\"button\"\n                :class=\"[cx('dropdown'), dropdownClass]\"\n                :disabled=\"disabled\"\n                aria-haspopup=\"listbox\"\n                :aria-expanded=\"overlayVisible\"\n                :aria-controls=\"panelId\"\n                @click=\"onDropdownClick\"\n                v-bind=\"ptm('dropdown')\"\n            >\n                <slot name=\"dropdownicon\" :class=\"dropdownIcon\">\n                    <component :is=\"dropdownIcon ? 'span' : 'ChevronDownIcon'\" :class=\"dropdownIcon\" v-bind=\"ptm('dropdownIcon')\" />\n                </slot>\n            </button>\n        </slot>\n        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSearchResult')\" :data-p-hidden-accessible=\"true\">\n            {{ searchResultMessageText }}\n        </span>\n        <Portal :appendTo=\"appendTo\">\n            <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @after-enter=\"onOverlayAfterEnter\" @leave=\"onOverlayLeave\" @after-leave=\"onOverlayAfterLeave\" v-bind=\"ptm('transition')\">\n                <div\n                    v-if=\"overlayVisible\"\n                    :ref=\"overlayRef\"\n                    :id=\"panelId\"\n                    :class=\"[cx('overlay'), panelClass, overlayClass]\"\n                    :style=\"{ ...panelStyle, ...overlayStyle, 'max-height': virtualScrollerDisabled ? scrollHeight : '' }\"\n                    @click=\"onOverlayClick\"\n                    @keydown=\"onOverlayKeyDown\"\n                    v-bind=\"ptm('overlay')\"\n                >\n                    <slot name=\"header\" :value=\"modelValue\" :suggestions=\"visibleOptions\"></slot>\n                    <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :style=\"{ height: scrollHeight }\" :items=\"visibleOptions\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                        <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                            <ul :ref=\"(el) => listRef(el, contentRef)\" :id=\"id + '_list'\" :class=\"[cx('list'), styleClass]\" :style=\"contentStyle\" role=\"listbox\" :aria-label=\"listAriaLabel\" v-bind=\"ptm('list')\">\n                                <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                                    <li v-if=\"isOptionGroup(option)\" :id=\"id + '_' + getOptionIndex(i, getItemOptions)\" :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\" :class=\"cx('optionGroup')\" role=\"option\" v-bind=\"ptm('optionGroup')\">\n                                        <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionGroupLabel(option.optionGroup) }}</slot>\n                                    </li>\n                                    <li\n                                        v-else\n                                        :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                        v-ripple\n                                        :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                        :class=\"cx('option', { option, i, getItemOptions })\"\n                                        role=\"option\"\n                                        :aria-label=\"getOptionLabel(option)\"\n                                        :aria-selected=\"isSelected(option)\"\n                                        :aria-disabled=\"isOptionDisabled(option)\"\n                                        :aria-setsize=\"ariaSetSize\"\n                                        :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                        @click=\"onOptionSelect($event, option)\"\n                                        @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                        :data-p-selected=\"isSelected(option)\"\n                                        :data-p-focus=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                        :data-p-disabled=\"isOptionDisabled(option)\"\n                                        v-bind=\"getPTOptions(option, getItemOptions, i, 'option')\"\n                                    >\n                                        <slot name=\"option\" :option=\"option\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionLabel(option) }}</slot>\n                                    </li>\n                                </template>\n                                <li v-if=\"!items || (items && items.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                                    <slot name=\"empty\">{{ searchResultMessageText }}</slot>\n                                </li>\n                            </ul>\n                        </template>\n                        <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                            <slot name=\"loader\" :options=\"options\"></slot>\n                        </template>\n                    </VirtualScroller>\n                    <slot name=\"footer\" :value=\"modelValue\" :suggestions=\"visibleOptions\"></slot>\n                    <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ selectedMessageText }}\n                    </span>\n                </div>\n            </transition>\n        </Portal>\n    </div>\n</template>\n\n<script>\nimport { ConnectedOverlayScrollHandler, DomHandler, ObjectUtils, UniqueComponentId, ZIndexUtils } from '@primevue/core/utils';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport Chip from 'primevue/chip';\nimport InputText from 'primevue/inputtext';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseAutoComplete from './BaseAutoComplete.vue';\n\nexport default {\n    name: 'AutoComplete',\n    extends: BaseAutoComplete,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change', 'focus', 'blur', 'item-select', 'item-unselect', 'option-select', 'option-unselect', 'dropdown-click', 'clear', 'complete', 'before-show', 'before-hide', 'show', 'hide'],\n    outsideClickListener: null,\n    resizeListener: null,\n    scrollHandler: null,\n    overlay: null,\n    virtualScroller: null,\n    searchTimeout: null,\n    dirty: false,\n    data() {\n        return {\n            id: this.$attrs.id,\n            clicked: false,\n            focused: false,\n            focusedOptionIndex: -1,\n            focusedMultipleOptionIndex: -1,\n            overlayVisible: false,\n            searching: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        suggestions() {\n            if (this.searching) {\n                this.show();\n                this.focusedOptionIndex = this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n                this.searching = false;\n            }\n\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n    },\n    updated() {\n        if (this.overlayVisible) {\n            this.alignOverlay();\n        }\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option;\n        },\n        getOptionValue(option) {\n            return option; // TODO: The 'optionValue' properties can be added.\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        show(isFocus) {\n            this.$emit('before-show');\n            this.dirty = true;\n            this.overlayVisible = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n            isFocus && DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n        },\n        hide(isFocus) {\n            const _hide = () => {\n                this.$emit('before-hide');\n                this.dirty = isFocus;\n                this.overlayVisible = false;\n                this.clicked = false;\n                this.focusedOptionIndex = -1;\n\n                isFocus && DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n            };\n\n            setTimeout(() => {\n                _hide();\n            }, 0); // For ScreenReaders\n        },\n        onFocus(event) {\n            if (this.disabled) {\n                // For ScreenReaders\n                return;\n            }\n\n            if (!this.dirty && this.completeOnFocus) {\n                this.search(event, event.target.value, 'focus');\n            }\n\n            this.dirty = true;\n            this.focused = true;\n\n            if (this.overlayVisible) {\n                this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n                this.scrollInView(this.focusedOptionIndex);\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.dirty = false;\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'Backspace':\n                    this.onBackspaceKey(event);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    break;\n            }\n\n            this.clicked = false;\n        },\n        onInput(event) {\n            if (this.typeahead) {\n                if (this.searchTimeout) {\n                    clearTimeout(this.searchTimeout);\n                }\n\n                let query = event.target.value;\n\n                if (!this.multiple) {\n                    this.updateModel(event, query);\n                }\n\n                if (query.length === 0) {\n                    this.hide();\n                    this.$emit('clear');\n                } else {\n                    if (query.length >= this.minLength) {\n                        this.focusedOptionIndex = -1;\n\n                        this.searchTimeout = setTimeout(() => {\n                            this.search(event, query, 'input');\n                        }, this.delay);\n                    } else {\n                        this.hide();\n                    }\n                }\n            }\n        },\n        onChange(event) {\n            if (this.forceSelection) {\n                let valid = false;\n\n                // when forceSelection is on, prevent called twice onOptionSelect()\n                if (this.visibleOptions && !this.multiple) {\n                    let value = this.multiple ? this.$refs.focusInput.value : this.$refs.focusInput.$el.value;\n                    const matchedValue = this.visibleOptions.find((option) => this.isOptionMatched(option, value || ''));\n\n                    if (matchedValue !== undefined) {\n                        valid = true;\n                        !this.isSelected(matchedValue) && this.onOptionSelect(event, matchedValue);\n                    }\n                }\n\n                if (!valid) {\n                    if (this.multiple) this.$refs.focusInput.value = '';\n                    else this.$refs.focusInput.$el.value = '';\n                    this.$emit('clear');\n                    !this.multiple && this.updateModel(event, null);\n                }\n            }\n        },\n        onMultipleContainerFocus() {\n            if (this.disabled) {\n                // For ScreenReaders\n                return;\n            }\n\n            this.focused = true;\n        },\n        onMultipleContainerBlur() {\n            this.focusedMultipleOptionIndex = -1;\n            this.focused = false;\n        },\n        onMultipleContainerKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.onArrowLeftKeyOnMultiple(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKeyOnMultiple(event);\n                    break;\n\n                case 'Backspace':\n                    this.onBackspaceKeyOnMultiple(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onContainerClick(event) {\n            this.clicked = true;\n\n            if (this.disabled || this.searching || this.loading || this.isInputClicked(event) || this.isDropdownClicked(event)) {\n                return;\n            }\n\n            if (!this.overlay || !this.overlay.contains(event.target)) {\n                DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n            }\n        },\n        onDropdownClick(event) {\n            let query = undefined;\n\n            if (this.overlayVisible) {\n                this.hide(true);\n            } else {\n                DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n                query = this.$refs.focusInput.$el.value;\n\n                if (this.dropdownMode === 'blank') this.search(event, '', 'dropdown');\n                else if (this.dropdownMode === 'current') this.search(event, query, 'dropdown');\n            }\n\n            this.$emit('dropdown-click', { originalEvent: event, query });\n        },\n        onOptionSelect(event, option, isHide = true) {\n            const value = this.getOptionValue(option);\n\n            if (this.multiple) {\n                this.$refs.focusInput.value = '';\n\n                if (!this.isSelected(option)) {\n                    this.updateModel(event, [...(this.modelValue || []), value]);\n                }\n            } else {\n                this.updateModel(event, value);\n            }\n\n            this.$emit('item-select', { originalEvent: event, value: option });\n            this.$emit('option-select', { originalEvent: event, value: option });\n\n            isHide && this.hide(true);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        },\n        onOverlayKeyDown(event) {\n            switch (event.code) {\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            if (!this.overlayVisible) {\n                return;\n            }\n\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (!this.overlayVisible) {\n                return;\n            }\n\n            if (event.altKey) {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.overlayVisible && this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const target = event.currentTarget;\n\n            this.focusedOptionIndex = -1;\n\n            if (this.multiple) {\n                if (ObjectUtils.isEmpty(target.value) && this.hasSelectedOption) {\n                    DomHandler.focus(this.$refs.multiContainer);\n                    this.focusedMultipleOptionIndex = this.modelValue.length;\n                } else {\n                    event.stopPropagation(); // To prevent onArrowLeftKeyOnMultiple method\n                }\n            }\n        },\n        onArrowRightKey(event) {\n            this.focusedOptionIndex = -1;\n\n            this.multiple && event.stopPropagation(); // To prevent onArrowRightKeyOnMultiple method\n        },\n        onHomeKey(event) {\n            const { currentTarget } = event;\n            const len = currentTarget.value.length;\n\n            currentTarget.setSelectionRange(0, event.shiftKey ? len : 0);\n            this.focusedOptionIndex = -1;\n\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            const { currentTarget } = event;\n            const len = currentTarget.value.length;\n\n            currentTarget.setSelectionRange(event.shiftKey ? 0 : len, len);\n            this.focusedOptionIndex = -1;\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (!this.typeahead) {\n                if (this.multiple) {\n                    this.updateModel(event, [...(this.modelValue || []), event.target.value]);\n                    this.$refs.focusInput.value = '';\n                }\n            } else {\n                if (!this.overlayVisible) {\n                    this.focusedOptionIndex = -1; // reset\n                    this.onArrowDownKey(event);\n                } else {\n                    if (this.focusedOptionIndex !== -1) {\n                        this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                    }\n\n                    this.hide();\n                }\n            }\n        },\n        onEscapeKey(event) {\n            this.overlayVisible && this.hide(true);\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedOptionIndex !== -1) {\n                this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n            }\n\n            this.overlayVisible && this.hide();\n        },\n        onBackspaceKey(event) {\n            if (this.multiple) {\n                if (ObjectUtils.isNotEmpty(this.modelValue) && !this.$refs.focusInput.value) {\n                    const removedValue = this.modelValue[this.modelValue.length - 1];\n                    const newValue = this.modelValue.slice(0, -1);\n\n                    this.$emit('update:modelValue', newValue);\n                    this.$emit('item-unselect', { originalEvent: event, value: removedValue });\n                    this.$emit('option-unselect', { originalEvent: event, value: removedValue });\n                }\n\n                event.stopPropagation(); // To prevent onBackspaceKeyOnMultiple method\n            }\n        },\n        onArrowLeftKeyOnMultiple() {\n            this.focusedMultipleOptionIndex = this.focusedMultipleOptionIndex < 1 ? 0 : this.focusedMultipleOptionIndex - 1;\n        },\n        onArrowRightKeyOnMultiple() {\n            this.focusedMultipleOptionIndex++;\n\n            if (this.focusedMultipleOptionIndex > this.modelValue.length - 1) {\n                this.focusedMultipleOptionIndex = -1;\n                DomHandler.focus(this.$refs.focusInput);\n            }\n        },\n        onBackspaceKeyOnMultiple(event) {\n            if (this.focusedMultipleOptionIndex !== -1) {\n                this.removeOption(event, this.focusedMultipleOptionIndex);\n            }\n        },\n        onOverlayEnter(el) {\n            ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n\n            DomHandler.addStyles(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n        },\n        onOverlayAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.overlay = null;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndexUtils.clear(el);\n        },\n        alignOverlay() {\n            let target = this.multiple ? this.$refs.multiContainer : this.$refs.focusInput.$el;\n\n            if (this.appendTo === 'self') {\n                DomHandler.relativePosition(this.overlay, target);\n            } else {\n                this.overlay.style.minWidth = DomHandler.getOuterWidth(target) + 'px';\n                DomHandler.absolutePosition(this.overlay, target);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.overlay && this.isOutsideClicked(event)) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isOutsideClicked(event) {\n            return !this.overlay.contains(event.target) && !this.isInputClicked(event) && !this.isDropdownClicked(event);\n        },\n        isInputClicked(event) {\n            if (this.multiple) return event.target === this.$refs.multiContainer || this.$refs.multiContainer.contains(event.target);\n            else return event.target === this.$refs.focusInput.$el;\n        },\n        isDropdownClicked(event) {\n            return this.$refs.dropdownButton ? event.target === this.$refs.dropdownButton || this.$refs.dropdownButton.contains(event.target) : false;\n        },\n        isOptionMatched(option, value) {\n            return this.isValidOption(option) && this.getOptionLabel(option)?.toLocaleLowerCase(this.searchLocale) === value.toLocaleLowerCase(this.searchLocale);\n        },\n        isValidOption(option) {\n            return ObjectUtils.isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isEquals(value1, value2) {\n            return ObjectUtils.equals(value1, value2, this.equalityKey);\n        },\n        isSelected(option) {\n            const optionValue = this.getOptionValue(option);\n\n            return this.multiple ? (this.modelValue || []).some((value) => this.isEquals(value, optionValue)) : this.isEquals(this.modelValue, this.getOptionValue(option));\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            return this.hasSelectedOption ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        search(event, query, source) {\n            //allow empty string but not undefined or null\n            if (query === undefined || query === null) {\n                return;\n            }\n\n            //do not search blank values on input change\n            if (source === 'input' && query.trim().length === 0) {\n                return;\n            }\n\n            this.searching = true;\n            this.$emit('complete', { originalEvent: event, query });\n        },\n        removeOption(event, index) {\n            const removedOption = this.modelValue[index];\n            const value = this.modelValue.filter((_, i) => i !== index).map((option) => this.getOptionValue(option));\n\n            this.updateModel(event, value);\n            this.$emit('item-unselect', { originalEvent: event, value: removedOption });\n            this.$emit('option-unselect', { originalEvent: event, value: removedOption });\n            this.dirty = true;\n            DomHandler.focus(this.multiple ? this.$refs.focusInput : this.$refs.focusInput.$el);\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus) {\n                    this.onOptionSelect(event, this.visibleOptions[index], false);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex], false);\n            }\n        },\n        updateModel(event, value) {\n            this.$emit('update:modelValue', value);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        flatOptions(options) {\n            return (options || []).reduce((result, option, index) => {\n                result.push({ optionGroup: option, group: true, index });\n\n                const optionGroupChildren = this.getOptionGroupChildren(option);\n\n                optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n\n                return result;\n            }, []);\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        visibleOptions() {\n            return this.optionGroupLabel ? this.flatOptions(this.suggestions) : this.suggestions || [];\n        },\n        inputValue() {\n            if (ObjectUtils.isNotEmpty(this.modelValue)) {\n                if (typeof this.modelValue === 'object') {\n                    const label = this.getOptionLabel(this.modelValue);\n\n                    return label != null ? label : this.modelValue;\n                } else {\n                    return this.modelValue;\n                }\n            } else {\n                return '';\n            }\n        },\n        hasSelectedOption() {\n            return ObjectUtils.isNotEmpty(this.modelValue);\n        },\n        equalityKey() {\n            return this.dataKey; // TODO: The 'optionValue' properties can be added.\n        },\n        searchResultMessageText() {\n            return ObjectUtils.isNotEmpty(this.visibleOptions) && this.overlayVisible ? this.searchMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptySearchMessageText;\n        },\n        searchMessageText() {\n            return this.searchMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptySearchMessageText() {\n            return this.emptySearchMessage || this.$primevue.config.locale.emptySearchMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.hasSelectedOption ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.modelValue.length : '1') : this.emptySelectionMessageText;\n        },\n        listAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.listLabel : undefined;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        focusedMultipleOptionId() {\n            return this.focusedMultipleOptionIndex !== -1 ? `${this.id}_multiple_option_${this.focusedMultipleOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        },\n        panelId() {\n            return this.id + '_panel';\n        }\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        Portal,\n        ChevronDownIcon,\n        SpinnerIcon,\n        Chip\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","modelValue","suggestions","type","Array","optionLabel","optionDisabled","optionGroupLabel","optionGroupChildren","scrollHeight","String","dropdown","Boolean","dropdownMode","multiple","loading","variant","invalid","disabled","placeholder","dataKey","minLength","Number","delay","appendTo","Object","forceSelection","completeOnFocus","inputId","inputStyle","inputClass","panelStyle","panelClass","overlayStyle","overlayClass","dropdownIcon","dropdownClass","loader","loadingIcon","removeTokenIcon","chipIcon","virtualScrollerOptions","autoOptionFocus","selectOnFocus","focusOnHover","searchLocale","undefined","searchMessage","selectionMessage","emptySelectionMessage","emptySearchMessage","tabindex","typeahead","ariaLabel","ariaLabelledby","style","AutoCompleteStyle","provide","$pcAutoComplete","$parentInstance","BaseAutoComplete","inheritAttrs","emits","outsideClickListener","resizeListener","scrollHandler","overlay","virtualScroller","searchTimeout","dirty","data","id","$attrs","clicked","focused","focusedOptionIndex","focusedMultipleOptionIndex","overlayVisible","searching","watch","$attrsId","newValue","UniqueComponentId","show","findFirstFocusedOptionIndex","autoUpdateModel","mounted","updated","alignOverlay","beforeUnmount","unbindOutsideClickListener","unbindResizeListener","destroy","ZIndexUtils","clear","methods","getOptionIndex","index","fn","virtualScrollerDisabled","getOptionLabel","option","ObjectUtils","resolveFieldData","getOptionValue","getOptionRenderKey","getPTOptions","itemOptions","key","ptm","context","selected","isSelected","isOptionDisabled","isOptionGroup","optionGroup","group","getOptionGroupLabel","getOptionGroupChildren","getAriaPosInset","_this","visibleOptions","slice","filter","length","isFocus","$emit","DomHandler","focus","$refs","focusInput","$el","hide","_this2","_hide","setTimeout","onFocus","event","search","target","value","scrollInView","onBlur","onKeyDown","preventDefault","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onArrowRightKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onEnterKey","onEscapeKey","onTabKey","onBackspaceKey","onInput","_this3","clearTimeout","query","updateModel","onChange","_this4","valid","matchedValue","find","isOptionMatched","onOptionSelect","onMultipleContainerFocus","onMultipleContainerBlur","onMultipleContainerKeyDown","onArrowLeftKeyOnMultiple","onArrowRightKeyOnMultiple","onBackspaceKeyOnMultiple","onContainerClick","isInputClicked","isDropdownClicked","contains","onDropdownClick","originalEvent","isHide","arguments","concat","_toConsumableArray","onOptionMouseMove","changeFocusedOptionIndex","onOverlayClick","OverlayEventBus","emit","onOverlayKeyDown","optionIndex","findNextOptionIndex","findFirstOptionIndex","altKey","findPrevOptionIndex","findLastOptionIndex","findLastFocusedOptionIndex","currentTarget","isEmpty","hasSelectedOption","multiContainer","stopPropagation","len","setSelectionRange","shiftKey","isNotEmpty","removedValue","removeOption","onOverlayEnter","el","set","$primevue","config","zIndex","addStyles","position","top","left","onOverlayAfterEnter","bindOutsideClickListener","bindScrollListener","bindResizeListener","onOverlayLeave","unbindScrollListener","onOverlayAfterLeave","relativePosition","minWidth","getOuterWidth","absolutePosition","_this5","isOutsideClicked","document","addEventListener","removeEventListener","_this6","ConnectedOverlayScrollHandler","container","_this7","isTouchDevice","window","dropdownButton","_this$getOptionLabel","isValidOption","toLocaleLowerCase","isValidSelectedOption","isEquals","value1","value2","equals","equalityKey","_this8","optionValue","some","_this9","findIndex","_this10","findLastIndex","_this11","matchedOptionIndex","_this12","findSelectedOptionIndex","_this13","selectedIndex","source","trim","_this14","removedOption","_","i","map","_this15","$nextTick","focusedOptionId","element","findSingle","list","scrollIntoView","block","inline","scrollToIndex","flatOptions","options","_this16","reduce","result","push","forEach","o","overlayRef","listRef","contentRef","virtualScrollerRef","computed","inputValue","_typeof","label","searchResultMessageText","searchMessageText","replaceAll","emptySearchMessageText","locale","selectionMessageText","emptySelectionMessageText","selectedMessageText","listAriaLabel","aria","listLabel","focusedMultipleOptionId","ariaSetSize","_this17","panelId","components","InputText","VirtualScroller","Portal","ChevronDownIcon","SpinnerIcon","Chip","directives","ripple","Ripple","_openBlock","_createElementBlock","_mergeProps","ref","_ctx","cx","sx","onClick","$options","apply","ptmi","_createBlock","_component_InputText","_normalizeClass","autocomplete","role","$data","onKeydown","unstyled","pt","_Fragment","_renderList","_renderSlot","removeCallback","_createVNode","_component_Chip","removeIcon","removable","onRemove","$event","removeicon","$slots","chipicon","_createElementVNode","_hoisted_3","_component_SpinnerIcon","spin","toggleCallback","_resolveDynamicComponent","_component_Portal","_Transition","onEnter","onAfterEnter","onLeave","onAfterLeave","_objectSpread","_component_VirtualScroller","items","content","_withCtx","_ref","styleClass","getItemOptions","contentStyle","itemSize","height","_withDirectives","onMousemove","_createTextVNode","_toDisplayString","_ref2"],"mappings":"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"}