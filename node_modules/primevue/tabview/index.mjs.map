{"version":3,"file":"index.mjs","sources":["../../src/tabview/BaseTabView.vue","../../src/tabview/TabView.vue","../../src/tabview/TabView.vue?vue&type=template&id=18c92f1a&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport TabViewStyle from 'primevue/tabview/style';\n\nexport default {\n    name: 'BaseTabView',\n    extends: BaseComponent,\n    props: {\n        activeIndex: {\n            type: Number,\n            default: 0\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        scrollable: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        prevButtonProps: {\n            type: null,\n            default: null\n        },\n        nextButtonProps: {\n            type: null,\n            default: null\n        },\n        prevIcon: {\n            type: String,\n            default: undefined\n        },\n        nextIcon: {\n            type: String,\n            default: undefined\n        }\n    },\n    style: TabViewStyle,\n    provide() {\n        return {\n            $pcTabs: undefined, // Backwards compatible to prevent <TabPanel> component from breaking\n            $pcTabView: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" role=\"tablist\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('navContainer')\" v-bind=\"ptm('navContainer')\">\n            <button\n                v-if=\"scrollable && !isPrevButtonDisabled\"\n                ref=\"prevBtn\"\n                v-ripple\n                type=\"button\"\n                :class=\"cx('prevButton')\"\n                :tabindex=\"tabindex\"\n                :aria-label=\"prevButtonAriaLabel\"\n                @click=\"onPrevButtonClick\"\n                v-bind=\"{ ...prevButtonProps, ...ptm('prevButton') }\"\n                data-pc-group-section=\"navbutton\"\n            >\n                <slot name=\"previcon\">\n                    <component :is=\"prevIcon ? 'span' : 'ChevronLeftIcon'\" aria-hidden=\"true\" :class=\"prevIcon\" v-bind=\"ptm('prevIcon')\" />\n                </slot>\n            </button>\n            <div ref=\"content\" :class=\"cx('navContent')\" @scroll=\"onScroll\" v-bind=\"ptm('navContent')\">\n                <ul ref=\"nav\" :class=\"cx('nav')\" v-bind=\"ptm('nav')\">\n                    <li\n                        v-for=\"(tab, index) of tabs\"\n                        :key=\"getKey(tab, index)\"\n                        :style=\"getTabProp(tab, 'headerStyle')\"\n                        :class=\"cx('tab.header', { tab, index })\"\n                        role=\"presentation\"\n                        v-bind=\"{ ...getTabProp(tab, 'headerProps'), ...getTabPT(tab, 'root', index), ...getTabPT(tab, 'header', index) }\"\n                        data-pc-name=\"tabpanel\"\n                        :data-p-active=\"d_activeIndex === index\"\n                        :data-p-disabled=\"getTabProp(tab, 'disabled')\"\n                        :data-pc-index=\"index\"\n                    >\n                        <a\n                            :id=\"getTabHeaderActionId(index)\"\n                            v-ripple\n                            :class=\"cx('tab.headerAction')\"\n                            :tabindex=\"getTabProp(tab, 'disabled') || !isTabActive(index) ? -1 : tabindex\"\n                            role=\"tab\"\n                            :aria-disabled=\"getTabProp(tab, 'disabled')\"\n                            :aria-selected=\"isTabActive(index)\"\n                            :aria-controls=\"getTabContentId(index)\"\n                            @click=\"onTabClick($event, tab, index)\"\n                            @keydown=\"onTabKeyDown($event, tab, index)\"\n                            v-bind=\"{ ...getTabProp(tab, 'headerActionProps'), ...getTabPT(tab, 'headerAction', index) }\"\n                        >\n                            <span v-if=\"tab.props && tab.props.header\" :class=\"cx('tab.headerTitle')\" v-bind=\"getTabPT(tab, 'headerTitle', index)\">{{ tab.props.header }}</span>\n                            <component v-if=\"tab.children && tab.children.header\" :is=\"tab.children.header\"></component>\n                        </a>\n                    </li>\n                    <li ref=\"inkbar\" :class=\"cx('inkbar')\" role=\"presentation\" aria-hidden=\"true\" v-bind=\"ptm('inkbar')\"></li>\n                </ul>\n            </div>\n            <button\n                v-if=\"scrollable && !isNextButtonDisabled\"\n                ref=\"nextBtn\"\n                v-ripple\n                type=\"button\"\n                :class=\"cx('nextButton')\"\n                :tabindex=\"tabindex\"\n                :aria-label=\"nextButtonAriaLabel\"\n                @click=\"onNextButtonClick\"\n                v-bind=\"{ ...nextButtonProps, ...ptm('nextButton') }\"\n                data-pc-group-section=\"navbutton\"\n            >\n                <slot name=\"nexticon\">\n                    <component :is=\"nextIcon ? 'span' : 'ChevronRightIcon'\" aria-hidden=\"true\" :class=\"nextIcon\" v-bind=\"ptm('nextIcon')\" />\n                </slot>\n            </button>\n        </div>\n        <div :class=\"cx('panelContainer')\" v-bind=\"ptm('panelContainer')\">\n            <template v-for=\"(tab, index) of tabs\" :key=\"getKey(tab, index)\">\n                <div\n                    v-if=\"lazy ? isTabActive(index) : true\"\n                    v-show=\"lazy ? true : isTabActive(index)\"\n                    :id=\"getTabContentId(index)\"\n                    :style=\"getTabProp(tab, 'contentStyle')\"\n                    :class=\"cx('tab.content', { tab })\"\n                    role=\"tabpanel\"\n                    :aria-labelledby=\"getTabHeaderActionId(index)\"\n                    v-bind=\"{ ...getTabProp(tab, 'contentProps'), ...getTabPT(tab, 'root', index), ...getTabPT(tab, 'content', index) }\"\n                    data-pc-name=\"tabpanel\"\n                    :data-pc-index=\"index\"\n                    :data-p-active=\"d_activeIndex === index\"\n                >\n                    <component :is=\"tab\"></component>\n                </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { DomHandler, UniqueComponentId } from '@primevue/core/utils';\nimport ChevronLeftIcon from '@primevue/icons/chevronleft';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\nimport BaseTabView from './BaseTabView.vue';\n\nexport default {\n    name: 'TabView',\n    extends: BaseTabView,\n    inheritAttrs: false,\n    emits: ['update:activeIndex', 'tab-change', 'tab-click'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_activeIndex: this.activeIndex,\n            isPrevButtonDisabled: true,\n            isNextButtonDisabled: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeIndex(newValue) {\n            this.d_activeIndex = newValue;\n\n            this.scrollInView({ index: newValue });\n        }\n    },\n    mounted() {\n        console.warn('Deprecated since v4. Use Tabs component instead.');\n\n        this.id = this.id || UniqueComponentId();\n        this.updateInkBar();\n        this.scrollable && this.updateButtonState();\n    },\n    updated() {\n        this.updateInkBar();\n        this.scrollable && this.updateButtonState();\n    },\n    methods: {\n        isTabPanel(child) {\n            return child.type.name === 'TabPanel';\n        },\n        isTabActive(index) {\n            return this.d_activeIndex === index;\n        },\n        getTabProp(tab, name) {\n            return tab.props ? tab.props[name] : undefined;\n        },\n        getKey(tab, index) {\n            return this.getTabProp(tab, 'header') || index;\n        },\n        getTabHeaderActionId(index) {\n            return `${this.id}_${index}_header_action`;\n        },\n        getTabContentId(index) {\n            return `${this.id}_${index}_content`;\n        },\n        getTabPT(tab, key, index) {\n            const count = this.tabs.length;\n            const tabMetaData = {\n                props: tab.props,\n                parent: {\n                    instance: this,\n                    props: this.$props,\n                    state: this.$data\n                },\n                context: {\n                    index,\n                    count,\n                    first: index === 0,\n                    last: index === count - 1,\n                    active: this.isTabActive(index)\n                }\n            };\n\n            return mergeProps(this.ptm(`tabpanel.${key}`, { tabpanel: tabMetaData }), this.ptm(`tabpanel.${key}`, tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n        },\n        onScroll(event) {\n            this.scrollable && this.updateButtonState();\n\n            event.preventDefault();\n        },\n        onPrevButtonClick() {\n            const content = this.$refs.content;\n            const width = DomHandler.getWidth(content);\n            const pos = content.scrollLeft - width;\n\n            content.scrollLeft = pos <= 0 ? 0 : pos;\n        },\n        onNextButtonClick() {\n            const content = this.$refs.content;\n            const width = DomHandler.getWidth(content) - this.getVisibleButtonWidths();\n            const pos = content.scrollLeft + width;\n            const lastPos = content.scrollWidth - width;\n\n            content.scrollLeft = pos >= lastPos ? lastPos : pos;\n        },\n        onTabClick(event, tab, index) {\n            this.changeActiveIndex(event, tab, index);\n            this.$emit('tab-click', { originalEvent: event, index });\n        },\n        onTabKeyDown(event, tab, index) {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.onTabArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onTabArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onTabHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onTabEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onTabEnterKey(event, tab, index);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onTabArrowRightKey(event) {\n            const nextHeaderAction = this.findNextHeaderAction(event.target.parentElement);\n\n            nextHeaderAction ? this.changeFocusedTab(event, nextHeaderAction) : this.onTabHomeKey(event);\n            event.preventDefault();\n        },\n        onTabArrowLeftKey(event) {\n            const prevHeaderAction = this.findPrevHeaderAction(event.target.parentElement);\n\n            prevHeaderAction ? this.changeFocusedTab(event, prevHeaderAction) : this.onTabEndKey(event);\n            event.preventDefault();\n        },\n        onTabHomeKey(event) {\n            const firstHeaderAction = this.findFirstHeaderAction();\n\n            this.changeFocusedTab(event, firstHeaderAction);\n            event.preventDefault();\n        },\n        onTabEndKey(event) {\n            const lastHeaderAction = this.findLastHeaderAction();\n\n            this.changeFocusedTab(event, lastHeaderAction);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView({ index: this.$refs.nav.children.length - 2 });\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView({ index: 0 });\n            event.preventDefault();\n        },\n        onTabEnterKey(event, tab, index) {\n            this.changeActiveIndex(event, tab, index);\n\n            event.preventDefault();\n        },\n        findNextHeaderAction(tabElement, selfCheck = false) {\n            const headerElement = selfCheck ? tabElement : tabElement.nextElementSibling;\n\n            return headerElement\n                ? DomHandler.getAttribute(headerElement, 'data-p-disabled') || DomHandler.getAttribute(headerElement, 'data-pc-section') === 'inkbar'\n                    ? this.findNextHeaderAction(headerElement)\n                    : DomHandler.findSingle(headerElement, '[data-pc-section=\"headeraction\"]')\n                : null;\n        },\n        findPrevHeaderAction(tabElement, selfCheck = false) {\n            const headerElement = selfCheck ? tabElement : tabElement.previousElementSibling;\n\n            return headerElement\n                ? DomHandler.getAttribute(headerElement, 'data-p-disabled') || DomHandler.getAttribute(headerElement, 'data-pc-section') === 'inkbar'\n                    ? this.findPrevHeaderAction(headerElement)\n                    : DomHandler.findSingle(headerElement, '[data-pc-section=\"headeraction\"]')\n                : null;\n        },\n        findFirstHeaderAction() {\n            return this.findNextHeaderAction(this.$refs.nav.firstElementChild, true);\n        },\n        findLastHeaderAction() {\n            return this.findPrevHeaderAction(this.$refs.nav.lastElementChild, true);\n        },\n        changeActiveIndex(event, tab, index) {\n            if (!this.getTabProp(tab, 'disabled') && this.d_activeIndex !== index) {\n                this.d_activeIndex = index;\n\n                this.$emit('update:activeIndex', index);\n                this.$emit('tab-change', { originalEvent: event, index });\n\n                this.scrollInView({ index });\n            }\n        },\n        changeFocusedTab(event, element) {\n            if (element) {\n                DomHandler.focus(element);\n                this.scrollInView({ element });\n\n                if (this.selectOnFocus) {\n                    const index = parseInt(element.parentElement.dataset.pcIndex, 10);\n                    const tab = this.tabs[index];\n\n                    this.changeActiveIndex(event, tab, index);\n                }\n            }\n        },\n        scrollInView({ element, index = -1 }) {\n            const currentElement = element || this.$refs.nav.children[index];\n\n            if (currentElement) {\n                currentElement.scrollIntoView && currentElement.scrollIntoView({ block: 'nearest' });\n            }\n        },\n        updateInkBar() {\n            let tabHeader = this.$refs.nav.children[this.d_activeIndex];\n\n            this.$refs.inkbar.style.width = DomHandler.getWidth(tabHeader) + 'px';\n            this.$refs.inkbar.style.left = DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.$refs.nav).left + 'px';\n        },\n        updateButtonState() {\n            const content = this.$refs.content;\n            const { scrollLeft, scrollWidth } = content;\n            const width = DomHandler.getWidth(content);\n\n            this.isPrevButtonDisabled = scrollLeft === 0;\n            this.isNextButtonDisabled = parseInt(scrollLeft) === scrollWidth - width;\n        },\n        getVisibleButtonWidths() {\n            const { prevBtn, nextBtn } = this.$refs;\n\n            return [prevBtn, nextBtn].reduce((acc, el) => (el ? acc + DomHandler.getWidth(el) : acc), 0);\n        }\n    },\n    computed: {\n        tabs() {\n            return this.$slots.default().reduce((tabs, child) => {\n                if (this.isTabPanel(child)) {\n                    tabs.push(child);\n                } else if (child.children && child.children instanceof Array) {\n                    child.children.forEach((nestedChild) => {\n                        if (this.isTabPanel(nestedChild)) {\n                            tabs.push(nestedChild);\n                        }\n                    });\n                }\n\n                return tabs;\n            }, []);\n        },\n        prevButtonAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.previous : undefined;\n        },\n        nextButtonAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.next : undefined;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        ChevronLeftIcon,\n        ChevronRightIcon\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" role=\"tablist\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('navContainer')\" v-bind=\"ptm('navContainer')\">\n            <button\n                v-if=\"scrollable && !isPrevButtonDisabled\"\n                ref=\"prevBtn\"\n                v-ripple\n                type=\"button\"\n                :class=\"cx('prevButton')\"\n                :tabindex=\"tabindex\"\n                :aria-label=\"prevButtonAriaLabel\"\n                @click=\"onPrevButtonClick\"\n                v-bind=\"{ ...prevButtonProps, ...ptm('prevButton') }\"\n                data-pc-group-section=\"navbutton\"\n            >\n                <slot name=\"previcon\">\n                    <component :is=\"prevIcon ? 'span' : 'ChevronLeftIcon'\" aria-hidden=\"true\" :class=\"prevIcon\" v-bind=\"ptm('prevIcon')\" />\n                </slot>\n            </button>\n            <div ref=\"content\" :class=\"cx('navContent')\" @scroll=\"onScroll\" v-bind=\"ptm('navContent')\">\n                <ul ref=\"nav\" :class=\"cx('nav')\" v-bind=\"ptm('nav')\">\n                    <li\n                        v-for=\"(tab, index) of tabs\"\n                        :key=\"getKey(tab, index)\"\n                        :style=\"getTabProp(tab, 'headerStyle')\"\n                        :class=\"cx('tab.header', { tab, index })\"\n                        role=\"presentation\"\n                        v-bind=\"{ ...getTabProp(tab, 'headerProps'), ...getTabPT(tab, 'root', index), ...getTabPT(tab, 'header', index) }\"\n                        data-pc-name=\"tabpanel\"\n                        :data-p-active=\"d_activeIndex === index\"\n                        :data-p-disabled=\"getTabProp(tab, 'disabled')\"\n                        :data-pc-index=\"index\"\n                    >\n                        <a\n                            :id=\"getTabHeaderActionId(index)\"\n                            v-ripple\n                            :class=\"cx('tab.headerAction')\"\n                            :tabindex=\"getTabProp(tab, 'disabled') || !isTabActive(index) ? -1 : tabindex\"\n                            role=\"tab\"\n                            :aria-disabled=\"getTabProp(tab, 'disabled')\"\n                            :aria-selected=\"isTabActive(index)\"\n                            :aria-controls=\"getTabContentId(index)\"\n                            @click=\"onTabClick($event, tab, index)\"\n                            @keydown=\"onTabKeyDown($event, tab, index)\"\n                            v-bind=\"{ ...getTabProp(tab, 'headerActionProps'), ...getTabPT(tab, 'headerAction', index) }\"\n                        >\n                            <span v-if=\"tab.props && tab.props.header\" :class=\"cx('tab.headerTitle')\" v-bind=\"getTabPT(tab, 'headerTitle', index)\">{{ tab.props.header }}</span>\n                            <component v-if=\"tab.children && tab.children.header\" :is=\"tab.children.header\"></component>\n                        </a>\n                    </li>\n                    <li ref=\"inkbar\" :class=\"cx('inkbar')\" role=\"presentation\" aria-hidden=\"true\" v-bind=\"ptm('inkbar')\"></li>\n                </ul>\n            </div>\n            <button\n                v-if=\"scrollable && !isNextButtonDisabled\"\n                ref=\"nextBtn\"\n                v-ripple\n                type=\"button\"\n                :class=\"cx('nextButton')\"\n                :tabindex=\"tabindex\"\n                :aria-label=\"nextButtonAriaLabel\"\n                @click=\"onNextButtonClick\"\n                v-bind=\"{ ...nextButtonProps, ...ptm('nextButton') }\"\n                data-pc-group-section=\"navbutton\"\n            >\n                <slot name=\"nexticon\">\n                    <component :is=\"nextIcon ? 'span' : 'ChevronRightIcon'\" aria-hidden=\"true\" :class=\"nextIcon\" v-bind=\"ptm('nextIcon')\" />\n                </slot>\n            </button>\n        </div>\n        <div :class=\"cx('panelContainer')\" v-bind=\"ptm('panelContainer')\">\n            <template v-for=\"(tab, index) of tabs\" :key=\"getKey(tab, index)\">\n                <div\n                    v-if=\"lazy ? isTabActive(index) : true\"\n                    v-show=\"lazy ? true : isTabActive(index)\"\n                    :id=\"getTabContentId(index)\"\n                    :style=\"getTabProp(tab, 'contentStyle')\"\n                    :class=\"cx('tab.content', { tab })\"\n                    role=\"tabpanel\"\n                    :aria-labelledby=\"getTabHeaderActionId(index)\"\n                    v-bind=\"{ ...getTabProp(tab, 'contentProps'), ...getTabPT(tab, 'root', index), ...getTabPT(tab, 'content', index) }\"\n                    data-pc-name=\"tabpanel\"\n                    :data-pc-index=\"index\"\n                    :data-p-active=\"d_activeIndex === index\"\n                >\n                    <component :is=\"tab\"></component>\n                </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { DomHandler, UniqueComponentId } from '@primevue/core/utils';\nimport ChevronLeftIcon from '@primevue/icons/chevronleft';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\nimport BaseTabView from './BaseTabView.vue';\n\nexport default {\n    name: 'TabView',\n    extends: BaseTabView,\n    inheritAttrs: false,\n    emits: ['update:activeIndex', 'tab-change', 'tab-click'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_activeIndex: this.activeIndex,\n            isPrevButtonDisabled: true,\n            isNextButtonDisabled: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeIndex(newValue) {\n            this.d_activeIndex = newValue;\n\n            this.scrollInView({ index: newValue });\n        }\n    },\n    mounted() {\n        console.warn('Deprecated since v4. Use Tabs component instead.');\n\n        this.id = this.id || UniqueComponentId();\n        this.updateInkBar();\n        this.scrollable && this.updateButtonState();\n    },\n    updated() {\n        this.updateInkBar();\n        this.scrollable && this.updateButtonState();\n    },\n    methods: {\n        isTabPanel(child) {\n            return child.type.name === 'TabPanel';\n        },\n        isTabActive(index) {\n            return this.d_activeIndex === index;\n        },\n        getTabProp(tab, name) {\n            return tab.props ? tab.props[name] : undefined;\n        },\n        getKey(tab, index) {\n            return this.getTabProp(tab, 'header') || index;\n        },\n        getTabHeaderActionId(index) {\n            return `${this.id}_${index}_header_action`;\n        },\n        getTabContentId(index) {\n            return `${this.id}_${index}_content`;\n        },\n        getTabPT(tab, key, index) {\n            const count = this.tabs.length;\n            const tabMetaData = {\n                props: tab.props,\n                parent: {\n                    instance: this,\n                    props: this.$props,\n                    state: this.$data\n                },\n                context: {\n                    index,\n                    count,\n                    first: index === 0,\n                    last: index === count - 1,\n                    active: this.isTabActive(index)\n                }\n            };\n\n            return mergeProps(this.ptm(`tabpanel.${key}`, { tabpanel: tabMetaData }), this.ptm(`tabpanel.${key}`, tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n        },\n        onScroll(event) {\n            this.scrollable && this.updateButtonState();\n\n            event.preventDefault();\n        },\n        onPrevButtonClick() {\n            const content = this.$refs.content;\n            const width = DomHandler.getWidth(content);\n            const pos = content.scrollLeft - width;\n\n            content.scrollLeft = pos <= 0 ? 0 : pos;\n        },\n        onNextButtonClick() {\n            const content = this.$refs.content;\n            const width = DomHandler.getWidth(content) - this.getVisibleButtonWidths();\n            const pos = content.scrollLeft + width;\n            const lastPos = content.scrollWidth - width;\n\n            content.scrollLeft = pos >= lastPos ? lastPos : pos;\n        },\n        onTabClick(event, tab, index) {\n            this.changeActiveIndex(event, tab, index);\n            this.$emit('tab-click', { originalEvent: event, index });\n        },\n        onTabKeyDown(event, tab, index) {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.onTabArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onTabArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onTabHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onTabEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onTabEnterKey(event, tab, index);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onTabArrowRightKey(event) {\n            const nextHeaderAction = this.findNextHeaderAction(event.target.parentElement);\n\n            nextHeaderAction ? this.changeFocusedTab(event, nextHeaderAction) : this.onTabHomeKey(event);\n            event.preventDefault();\n        },\n        onTabArrowLeftKey(event) {\n            const prevHeaderAction = this.findPrevHeaderAction(event.target.parentElement);\n\n            prevHeaderAction ? this.changeFocusedTab(event, prevHeaderAction) : this.onTabEndKey(event);\n            event.preventDefault();\n        },\n        onTabHomeKey(event) {\n            const firstHeaderAction = this.findFirstHeaderAction();\n\n            this.changeFocusedTab(event, firstHeaderAction);\n            event.preventDefault();\n        },\n        onTabEndKey(event) {\n            const lastHeaderAction = this.findLastHeaderAction();\n\n            this.changeFocusedTab(event, lastHeaderAction);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView({ index: this.$refs.nav.children.length - 2 });\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView({ index: 0 });\n            event.preventDefault();\n        },\n        onTabEnterKey(event, tab, index) {\n            this.changeActiveIndex(event, tab, index);\n\n            event.preventDefault();\n        },\n        findNextHeaderAction(tabElement, selfCheck = false) {\n            const headerElement = selfCheck ? tabElement : tabElement.nextElementSibling;\n\n            return headerElement\n                ? DomHandler.getAttribute(headerElement, 'data-p-disabled') || DomHandler.getAttribute(headerElement, 'data-pc-section') === 'inkbar'\n                    ? this.findNextHeaderAction(headerElement)\n                    : DomHandler.findSingle(headerElement, '[data-pc-section=\"headeraction\"]')\n                : null;\n        },\n        findPrevHeaderAction(tabElement, selfCheck = false) {\n            const headerElement = selfCheck ? tabElement : tabElement.previousElementSibling;\n\n            return headerElement\n                ? DomHandler.getAttribute(headerElement, 'data-p-disabled') || DomHandler.getAttribute(headerElement, 'data-pc-section') === 'inkbar'\n                    ? this.findPrevHeaderAction(headerElement)\n                    : DomHandler.findSingle(headerElement, '[data-pc-section=\"headeraction\"]')\n                : null;\n        },\n        findFirstHeaderAction() {\n            return this.findNextHeaderAction(this.$refs.nav.firstElementChild, true);\n        },\n        findLastHeaderAction() {\n            return this.findPrevHeaderAction(this.$refs.nav.lastElementChild, true);\n        },\n        changeActiveIndex(event, tab, index) {\n            if (!this.getTabProp(tab, 'disabled') && this.d_activeIndex !== index) {\n                this.d_activeIndex = index;\n\n                this.$emit('update:activeIndex', index);\n                this.$emit('tab-change', { originalEvent: event, index });\n\n                this.scrollInView({ index });\n            }\n        },\n        changeFocusedTab(event, element) {\n            if (element) {\n                DomHandler.focus(element);\n                this.scrollInView({ element });\n\n                if (this.selectOnFocus) {\n                    const index = parseInt(element.parentElement.dataset.pcIndex, 10);\n                    const tab = this.tabs[index];\n\n                    this.changeActiveIndex(event, tab, index);\n                }\n            }\n        },\n        scrollInView({ element, index = -1 }) {\n            const currentElement = element || this.$refs.nav.children[index];\n\n            if (currentElement) {\n                currentElement.scrollIntoView && currentElement.scrollIntoView({ block: 'nearest' });\n            }\n        },\n        updateInkBar() {\n            let tabHeader = this.$refs.nav.children[this.d_activeIndex];\n\n            this.$refs.inkbar.style.width = DomHandler.getWidth(tabHeader) + 'px';\n            this.$refs.inkbar.style.left = DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.$refs.nav).left + 'px';\n        },\n        updateButtonState() {\n            const content = this.$refs.content;\n            const { scrollLeft, scrollWidth } = content;\n            const width = DomHandler.getWidth(content);\n\n            this.isPrevButtonDisabled = scrollLeft === 0;\n            this.isNextButtonDisabled = parseInt(scrollLeft) === scrollWidth - width;\n        },\n        getVisibleButtonWidths() {\n            const { prevBtn, nextBtn } = this.$refs;\n\n            return [prevBtn, nextBtn].reduce((acc, el) => (el ? acc + DomHandler.getWidth(el) : acc), 0);\n        }\n    },\n    computed: {\n        tabs() {\n            return this.$slots.default().reduce((tabs, child) => {\n                if (this.isTabPanel(child)) {\n                    tabs.push(child);\n                } else if (child.children && child.children instanceof Array) {\n                    child.children.forEach((nestedChild) => {\n                        if (this.isTabPanel(nestedChild)) {\n                            tabs.push(nestedChild);\n                        }\n                    });\n                }\n\n                return tabs;\n            }, []);\n        },\n        prevButtonAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.previous : undefined;\n        },\n        nextButtonAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.next : undefined;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        ChevronLeftIcon,\n        ChevronRightIcon\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","activeIndex","type","Number","lazy","Boolean","scrollable","tabindex","selectOnFocus","prevButtonProps","nextButtonProps","prevIcon","String","undefined","nextIcon","style","TabViewStyle","provide","$pcTabs","$pcTabView","$parentInstance","BaseTabView","inheritAttrs","emits","data","id","$attrs","d_activeIndex","isPrevButtonDisabled","isNextButtonDisabled","watch","$attrsId","newValue","UniqueComponentId","scrollInView","index","mounted","console","warn","updateInkBar","updateButtonState","updated","methods","isTabPanel","child","isTabActive","getTabProp","tab","getKey","getTabHeaderActionId","concat","getTabContentId","getTabPT","key","count","tabs","length","tabMetaData","parent","instance","$props","state","$data","context","first","last","active","mergeProps","ptm","tabpanel","ptmo","onScroll","event","preventDefault","onPrevButtonClick","content","$refs","width","DomHandler","getWidth","pos","scrollLeft","onNextButtonClick","getVisibleButtonWidths","lastPos","scrollWidth","onTabClick","changeActiveIndex","$emit","originalEvent","onTabKeyDown","code","onTabArrowLeftKey","onTabArrowRightKey","onTabHomeKey","onTabEndKey","onPageDownKey","onPageUpKey","onTabEnterKey","nextHeaderAction","findNextHeaderAction","target","parentElement","changeFocusedTab","prevHeaderAction","findPrevHeaderAction","firstHeaderAction","findFirstHeaderAction","lastHeaderAction","findLastHeaderAction","nav","children","tabElement","selfCheck","arguments","headerElement","nextElementSibling","getAttribute","findSingle","previousElementSibling","firstElementChild","lastElementChild","element","focus","parseInt","dataset","pcIndex","_ref","_ref$index","currentElement","scrollIntoView","block","tabHeader","inkbar","left","getOffset","_this$$refs","prevBtn","nextBtn","reduce","acc","el","computed","_this","$slots","push","Array","forEach","nestedChild","prevButtonAriaLabel","$primevue","config","locale","aria","previous","nextButtonAriaLabel","next","directives","ripple","Ripple","components","ChevronLeftIcon","ChevronRightIcon","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","role","ptmi","_createElementVNode","_withDirectives","ref","$options","onClick","apply","_objectSpread","_renderSlot","_createBlock","_resolveDynamicComponent","_Fragment","_renderList","$event","onKeydown","header"],"mappings":"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"}