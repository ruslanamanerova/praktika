{"version":3,"file":"index.mjs","sources":["../../src/listbox/BaseListbox.vue","../../src/listbox/Listbox.vue","../../src/listbox/Listbox.vue?vue&type=template&id=de340274&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ListboxStyle from 'primevue/listbox/style';\n\nexport default {\n    name: 'BaseListbox',\n    extends: BaseComponent,\n    props: {\n        modelValue: null,\n        options: Array,\n        optionLabel: null,\n        optionValue: null,\n        optionDisabled: null,\n        optionGroupLabel: null,\n        optionGroupChildren: null,\n        listStyle: null,\n        scrollHeight: {\n            type: String,\n            default: '14rem'\n        },\n        invalid: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        dataKey: null,\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        metaKeySelection: {\n            type: Boolean,\n            default: false\n        },\n        filter: Boolean,\n        filterPlaceholder: String,\n        filterLocale: String,\n        filterMatchMode: {\n            type: String,\n            default: 'contains'\n        },\n        filterFields: {\n            type: Array,\n            default: null\n        },\n        virtualScrollerOptions: {\n            type: Object,\n            default: null\n        },\n        autoOptionFocus: {\n            type: Boolean,\n            default: true\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        focusOnHover: {\n            type: Boolean,\n            default: true\n        },\n        highlightOnSelect: {\n            type: Boolean,\n            default: true\n        },\n        checkmark: {\n            type: Boolean,\n            default: false\n        },\n        filterMessage: {\n            type: String,\n            default: null\n        },\n        selectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySelectionMessage: {\n            type: String,\n            default: null\n        },\n        emptyFilterMessage: {\n            type: String,\n            default: null\n        },\n        emptyMessage: {\n            type: String,\n            default: null\n        },\n        filterIcon: {\n            type: String,\n            default: undefined\n        },\n        striped: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    style: ListboxStyle,\n    provide() {\n        return {\n            $pcListbox: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :id=\"id\" :class=\"cx('root')\" @focusout=\"onFocusout\" v-bind=\"ptmi('root')\">\n        <span\n            ref=\"firstHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onFirstHiddenFocus\"\n            v-bind=\"ptm('hiddenFirstFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n        <div v-if=\"$slots.header\" :class=\"cx('header')\">\n            <slot name=\"header\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n        </div>\n        <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n            <IconField :unstyled=\"unstyled\" v-bind=\"ptm('pcFilterContainer')\">\n                <InputText\n                    v-model=\"filterValue\"\n                    type=\"text\"\n                    :class=\"cx('pcFilter')\"\n                    :placeholder=\"filterPlaceholder\"\n                    role=\"searchbox\"\n                    autocomplete=\"off\"\n                    :disabled=\"disabled\"\n                    :unstyled=\"unstyled\"\n                    :aria-owns=\"id + '_list'\"\n                    :aria-activedescendant=\"focusedOptionId\"\n                    :tabindex=\"!disabled && !focused ? tabindex : -1\"\n                    @input=\"onFilterChange\"\n                    @blur=\"onFilterBlur\"\n                    @keydown=\"onFilterKeyDown\"\n                    :pt=\"ptm('pcFilter')\"\n                />\n                <InputIcon :unstyled=\"unstyled\" v-bind=\"ptm('pcFilterIconContainer')\">\n                    <slot name=\"filtericon\">\n                        <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                        <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                    </slot>\n                </InputIcon>\n            </IconField>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                {{ filterResultMessageText }}\n            </span>\n        </div>\n        <div :class=\"cx('listContainer')\" :style=\"[{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }, listStyle]\" v-bind=\"ptm('listContainer')\">\n            <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"[{ height: scrollHeight }, listStyle]\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                    <ul\n                        :ref=\"(el) => listRef(el, contentRef)\"\n                        :id=\"id + '_list'\"\n                        :class=\"[cx('list'), styleClass]\"\n                        :style=\"contentStyle\"\n                        :tabindex=\"-1\"\n                        role=\"listbox\"\n                        :aria-multiselectable=\"multiple\"\n                        :aria-label=\"ariaLabel\"\n                        :aria-labelledby=\"ariaLabelledby\"\n                        :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                        :aria-disabled=\"disabled\"\n                        @focus=\"onListFocus\"\n                        @blur=\"onListBlur\"\n                        @keydown=\"onListKeyDown\"\n                        v-bind=\"ptm('list')\"\n                    >\n                        <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                            <li v-if=\"isOptionGroup(option)\" :id=\"id + '_' + getOptionIndex(i, getItemOptions)\" :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\" :class=\"cx('optionGroup')\" role=\"option\" v-bind=\"ptm('optionGroup')\">\n                                <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionGroupLabel(option.optionGroup) }}</slot>\n                            </li>\n                            <li\n                                v-else\n                                :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                v-ripple\n                                :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                :class=\"cx('option', { option, index: i, getItemOptions })\"\n                                role=\"option\"\n                                :aria-label=\"getOptionLabel(option)\"\n                                :aria-selected=\"isSelected(option)\"\n                                :aria-disabled=\"isOptionDisabled(option)\"\n                                :aria-setsize=\"ariaSetSize\"\n                                :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                @click=\"onOptionSelect($event, option, getOptionIndex(i, getItemOptions))\"\n                                @mousedown=\"onOptionMouseDown($event, getOptionIndex(i, getItemOptions))\"\n                                @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                @touchend=\"onOptionTouchEnd()\"\n                                @dblclick=\"onOptionDblClick($event, option)\"\n                                v-bind=\"getPTOptions(option, getItemOptions, i, 'option')\"\n                                :data-p-selected=\"isSelected(option)\"\n                                :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                :data-p-disabled=\"isOptionDisabled(option)\"\n                            >\n                                <template v-if=\"checkmark\">\n                                    <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                    <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                </template>\n                                <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionLabel(option) }}</slot>\n                            </li>\n                        </template>\n                        <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                        </li>\n                        <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                        </li>\n                    </ul>\n                </template>\n                <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                    <slot name=\"loader\" :options=\"options\"></slot>\n                </template>\n            </VirtualScroller>\n        </div>\n        <slot name=\"footer\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n        <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ emptyMessageText }}\n        </span>\n        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ selectedMessageText }}\n        </span>\n        <span\n            ref=\"lastHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onLastHiddenFocus\"\n            v-bind=\"ptm('hiddenLastFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n    </div>\n</template>\n\n<script>\nimport { FilterService } from '@primevue/core/api';\nimport { DomHandler, ObjectUtils, UniqueComponentId } from '@primevue/core/utils';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport SearchIcon from '@primevue/icons/search';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseListbox from './BaseListbox.vue';\n\nexport default {\n    name: 'Listbox',\n    extends: BaseListbox,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change', 'focus', 'blur', 'filter', 'item-dblclick', 'option-dblclick'],\n    list: null,\n    virtualScroller: null,\n    optionTouched: false,\n    startRangeIndex: -1,\n    searchTimeout: null,\n    searchValue: '',\n    data() {\n        return {\n            id: this.$attrs.id,\n            filterValue: null,\n            focused: false,\n            focusedOptionIndex: -1\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : typeof option === 'string' ? option : null;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        onFirstHiddenFocus() {\n            DomHandler.focus(this.list);\n\n            const firstFocusableEl = DomHandler.getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = DomHandler.isElement(firstFocusableEl) ? undefined : -1;\n            this.$refs.firstHiddenFocusableElement.tabIndex = -1;\n        },\n        onLastHiddenFocus(event) {\n            const relatedTarget = event.relatedTarget;\n\n            if (relatedTarget === this.list) {\n                const firstFocusableEl = DomHandler.getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n                DomHandler.focus(firstFocusableEl);\n                this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            } else {\n                DomHandler.focus(this.$refs.firstHiddenFocusableElement);\n            }\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = -1;\n        },\n        onFocusout(event) {\n            if (!this.$el.contains(event.relatedTarget) && this.$refs.lastHiddenFocusableElement && this.$refs.firstHiddenFocusableElement) {\n                this.$refs.lastHiddenFocusableElement.tabIndex = this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.findSelectedOptionIndex();\n            this.autoUpdateModel();\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Tab':\n                    //NOOP\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    if (this.multiple && event.code === 'KeyA' && metaKey) {\n                        const value = this.visibleOptions.filter((option) => this.isValidOption(option)).map((option) => this.getOptionValue(option));\n\n                        this.updateModel(event, value);\n\n                        event.preventDefault();\n                        break;\n                    }\n\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        this.searchOptions(event, event.key);\n                        event.preventDefault();\n                    }\n\n                    break;\n            }\n        },\n        onOptionSelect(event, option, index = -1) {\n            if (this.disabled || this.isOptionDisabled(option)) {\n                return;\n            }\n\n            this.multiple ? this.onOptionSelectMultiple(event, option) : this.onOptionSelectSingle(event, option);\n            this.optionTouched = false;\n            index !== -1 && (this.focusedOptionIndex = index);\n        },\n        onOptionMouseDown(event, index) {\n            this.changeFocusedOptionIndex(event, index);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover && this.focused) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onOptionTouchEnd() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.optionTouched = true;\n        },\n        onOptionDblClick(event, item) {\n            this.$emit('item-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n            this.$emit('option-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n        },\n        onOptionSelectSingle(event, option) {\n            let selected = this.isSelected(option);\n            let valueChanged = false;\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = event && (event.metaKey || event.ctrlKey);\n\n                if (selected) {\n                    if (metaKey) {\n                        value = null;\n                        valueChanged = true;\n                    }\n                } else {\n                    value = this.getOptionValue(option);\n                    valueChanged = true;\n                }\n            } else {\n                value = selected ? null : this.getOptionValue(option);\n                valueChanged = true;\n            }\n\n            if (valueChanged) {\n                this.updateModel(event, value);\n            }\n        },\n        onOptionSelectMultiple(event, option) {\n            let selected = this.isSelected(option);\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = event.metaKey || event.ctrlKey;\n\n                if (selected) {\n                    value = metaKey ? this.removeOption(option) : [this.getOptionValue(option)];\n                } else {\n                    value = metaKey ? this.modelValue || [] : [];\n                    value = [...value, this.getOptionValue(option)];\n                }\n            } else {\n                value = selected ? this.removeOption(option) : [...(this.modelValue || []), this.getOptionValue(option)];\n            }\n\n            this.updateModel(event, value);\n        },\n        onOptionSelectRange(event, start = -1, end = -1) {\n            start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n            end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n\n            if (start !== -1 && end !== -1) {\n                const rangeStart = Math.min(start, end);\n                const rangeEnd = Math.max(start, end);\n                const value = this.visibleOptions\n                    .slice(rangeStart, rangeEnd + 1)\n                    .filter((option) => this.isValidOption(option))\n                    .map((option) => this.getOptionValue(option));\n\n                this.updateModel(event, value);\n            }\n        },\n        onFilterChange(event) {\n            this.$emit('filter', { originalEvent: event, value: event.target.value });\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.findFirstFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.findLastFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findFirstOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findLastOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedOptionIndex !== -1) {\n                if (this.multiple && event.shiftKey) this.onOptionSelectRange(event, this.focusedOptionIndex);\n                else this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        onSpaceKey(event) {\n            event.preventDefault();\n            this.onEnterKey(event);\n        },\n        onShiftKey() {\n            this.startRangeIndex = this.focusedOptionIndex;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return ObjectUtils.isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isEquals(value1, value2) {\n            return ObjectUtils.equals(value1, value2, this.equalityKey);\n        },\n        isSelected(option) {\n            const optionValue = this.getOptionValue(option);\n\n            if (this.multiple) return (this.modelValue || []).some((value) => this.isEquals(value, optionValue));\n            else return this.isEquals(this.modelValue, optionValue);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            if (this.hasSelectedOption) {\n                if (this.multiple) {\n                    for (let index = this.modelValue.length - 1; index >= 0; index--) {\n                        const value = this.modelValue[index];\n                        const matchedOptionIndex = this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option) && this.isEquals(value, this.getOptionValue(option)));\n\n                        if (matchedOptionIndex > -1) return matchedOptionIndex;\n                    }\n                } else {\n                    return this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option));\n                }\n            }\n\n            return -1;\n        },\n        findFirstSelectedOptionIndex() {\n            return this.hasSelectedOption ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findLastSelectedOptionIndex() {\n            return this.hasSelectedOption ? ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findNextSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.hasSelectedOption && index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n        },\n        findPrevSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.hasSelectedOption && index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n        },\n        findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n            let matchedOptionIndex = -1;\n\n            if (this.hasSelectedOption) {\n                if (firstCheckUp) {\n                    matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n                } else {\n                    matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n                }\n            }\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findFirstSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findLastSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n\n            if (ObjectUtils.isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n        },\n        removeOption(option) {\n            return this.modelValue.filter((val) => !ObjectUtils.equals(val, this.getOptionValue(option), this.equalityKey));\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus && !this.multiple) {\n                    this.onOptionSelect(event, this.visibleOptions[index]);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption && !this.multiple && this.focused) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        updateModel(event, value) {\n            this.$emit('update:modelValue', value);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        flatOptions(options) {\n            return (options || []).reduce((result, option, index) => {\n                result.push({ optionGroup: option, group: true, index });\n\n                const optionGroupChildren = this.getOptionGroupChildren(option);\n\n                optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n\n                return result;\n            }, []);\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        visibleOptions() {\n            const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n\n            return this.filterValue ? FilterService.filter(options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : options;\n        },\n        hasSelectedOption() {\n            return ObjectUtils.isNotEmpty(this.modelValue);\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return ObjectUtils.isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.hasSelectedOption ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.modelValue.length : '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        InputIcon,\n        IconField,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n","<template>\n    <div :id=\"id\" :class=\"cx('root')\" @focusout=\"onFocusout\" v-bind=\"ptmi('root')\">\n        <span\n            ref=\"firstHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onFirstHiddenFocus\"\n            v-bind=\"ptm('hiddenFirstFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n        <div v-if=\"$slots.header\" :class=\"cx('header')\">\n            <slot name=\"header\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n        </div>\n        <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n            <IconField :unstyled=\"unstyled\" v-bind=\"ptm('pcFilterContainer')\">\n                <InputText\n                    v-model=\"filterValue\"\n                    type=\"text\"\n                    :class=\"cx('pcFilter')\"\n                    :placeholder=\"filterPlaceholder\"\n                    role=\"searchbox\"\n                    autocomplete=\"off\"\n                    :disabled=\"disabled\"\n                    :unstyled=\"unstyled\"\n                    :aria-owns=\"id + '_list'\"\n                    :aria-activedescendant=\"focusedOptionId\"\n                    :tabindex=\"!disabled && !focused ? tabindex : -1\"\n                    @input=\"onFilterChange\"\n                    @blur=\"onFilterBlur\"\n                    @keydown=\"onFilterKeyDown\"\n                    :pt=\"ptm('pcFilter')\"\n                />\n                <InputIcon :unstyled=\"unstyled\" v-bind=\"ptm('pcFilterIconContainer')\">\n                    <slot name=\"filtericon\">\n                        <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                        <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                    </slot>\n                </InputIcon>\n            </IconField>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                {{ filterResultMessageText }}\n            </span>\n        </div>\n        <div :class=\"cx('listContainer')\" :style=\"[{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }, listStyle]\" v-bind=\"ptm('listContainer')\">\n            <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"[{ height: scrollHeight }, listStyle]\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                    <ul\n                        :ref=\"(el) => listRef(el, contentRef)\"\n                        :id=\"id + '_list'\"\n                        :class=\"[cx('list'), styleClass]\"\n                        :style=\"contentStyle\"\n                        :tabindex=\"-1\"\n                        role=\"listbox\"\n                        :aria-multiselectable=\"multiple\"\n                        :aria-label=\"ariaLabel\"\n                        :aria-labelledby=\"ariaLabelledby\"\n                        :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                        :aria-disabled=\"disabled\"\n                        @focus=\"onListFocus\"\n                        @blur=\"onListBlur\"\n                        @keydown=\"onListKeyDown\"\n                        v-bind=\"ptm('list')\"\n                    >\n                        <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                            <li v-if=\"isOptionGroup(option)\" :id=\"id + '_' + getOptionIndex(i, getItemOptions)\" :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\" :class=\"cx('optionGroup')\" role=\"option\" v-bind=\"ptm('optionGroup')\">\n                                <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionGroupLabel(option.optionGroup) }}</slot>\n                            </li>\n                            <li\n                                v-else\n                                :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                v-ripple\n                                :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                :class=\"cx('option', { option, index: i, getItemOptions })\"\n                                role=\"option\"\n                                :aria-label=\"getOptionLabel(option)\"\n                                :aria-selected=\"isSelected(option)\"\n                                :aria-disabled=\"isOptionDisabled(option)\"\n                                :aria-setsize=\"ariaSetSize\"\n                                :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                @click=\"onOptionSelect($event, option, getOptionIndex(i, getItemOptions))\"\n                                @mousedown=\"onOptionMouseDown($event, getOptionIndex(i, getItemOptions))\"\n                                @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                @touchend=\"onOptionTouchEnd()\"\n                                @dblclick=\"onOptionDblClick($event, option)\"\n                                v-bind=\"getPTOptions(option, getItemOptions, i, 'option')\"\n                                :data-p-selected=\"isSelected(option)\"\n                                :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                :data-p-disabled=\"isOptionDisabled(option)\"\n                            >\n                                <template v-if=\"checkmark\">\n                                    <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                    <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                </template>\n                                <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionLabel(option) }}</slot>\n                            </li>\n                        </template>\n                        <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                        </li>\n                        <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                        </li>\n                    </ul>\n                </template>\n                <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                    <slot name=\"loader\" :options=\"options\"></slot>\n                </template>\n            </VirtualScroller>\n        </div>\n        <slot name=\"footer\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n        <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ emptyMessageText }}\n        </span>\n        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ selectedMessageText }}\n        </span>\n        <span\n            ref=\"lastHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onLastHiddenFocus\"\n            v-bind=\"ptm('hiddenLastFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n    </div>\n</template>\n\n<script>\nimport { FilterService } from '@primevue/core/api';\nimport { DomHandler, ObjectUtils, UniqueComponentId } from '@primevue/core/utils';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport SearchIcon from '@primevue/icons/search';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseListbox from './BaseListbox.vue';\n\nexport default {\n    name: 'Listbox',\n    extends: BaseListbox,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change', 'focus', 'blur', 'filter', 'item-dblclick', 'option-dblclick'],\n    list: null,\n    virtualScroller: null,\n    optionTouched: false,\n    startRangeIndex: -1,\n    searchTimeout: null,\n    searchValue: '',\n    data() {\n        return {\n            id: this.$attrs.id,\n            filterValue: null,\n            focused: false,\n            focusedOptionIndex: -1\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : typeof option === 'string' ? option : null;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        onFirstHiddenFocus() {\n            DomHandler.focus(this.list);\n\n            const firstFocusableEl = DomHandler.getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = DomHandler.isElement(firstFocusableEl) ? undefined : -1;\n            this.$refs.firstHiddenFocusableElement.tabIndex = -1;\n        },\n        onLastHiddenFocus(event) {\n            const relatedTarget = event.relatedTarget;\n\n            if (relatedTarget === this.list) {\n                const firstFocusableEl = DomHandler.getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n                DomHandler.focus(firstFocusableEl);\n                this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            } else {\n                DomHandler.focus(this.$refs.firstHiddenFocusableElement);\n            }\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = -1;\n        },\n        onFocusout(event) {\n            if (!this.$el.contains(event.relatedTarget) && this.$refs.lastHiddenFocusableElement && this.$refs.firstHiddenFocusableElement) {\n                this.$refs.lastHiddenFocusableElement.tabIndex = this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.findSelectedOptionIndex();\n            this.autoUpdateModel();\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Tab':\n                    //NOOP\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    if (this.multiple && event.code === 'KeyA' && metaKey) {\n                        const value = this.visibleOptions.filter((option) => this.isValidOption(option)).map((option) => this.getOptionValue(option));\n\n                        this.updateModel(event, value);\n\n                        event.preventDefault();\n                        break;\n                    }\n\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        this.searchOptions(event, event.key);\n                        event.preventDefault();\n                    }\n\n                    break;\n            }\n        },\n        onOptionSelect(event, option, index = -1) {\n            if (this.disabled || this.isOptionDisabled(option)) {\n                return;\n            }\n\n            this.multiple ? this.onOptionSelectMultiple(event, option) : this.onOptionSelectSingle(event, option);\n            this.optionTouched = false;\n            index !== -1 && (this.focusedOptionIndex = index);\n        },\n        onOptionMouseDown(event, index) {\n            this.changeFocusedOptionIndex(event, index);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover && this.focused) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onOptionTouchEnd() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.optionTouched = true;\n        },\n        onOptionDblClick(event, item) {\n            this.$emit('item-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n            this.$emit('option-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n        },\n        onOptionSelectSingle(event, option) {\n            let selected = this.isSelected(option);\n            let valueChanged = false;\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = event && (event.metaKey || event.ctrlKey);\n\n                if (selected) {\n                    if (metaKey) {\n                        value = null;\n                        valueChanged = true;\n                    }\n                } else {\n                    value = this.getOptionValue(option);\n                    valueChanged = true;\n                }\n            } else {\n                value = selected ? null : this.getOptionValue(option);\n                valueChanged = true;\n            }\n\n            if (valueChanged) {\n                this.updateModel(event, value);\n            }\n        },\n        onOptionSelectMultiple(event, option) {\n            let selected = this.isSelected(option);\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = event.metaKey || event.ctrlKey;\n\n                if (selected) {\n                    value = metaKey ? this.removeOption(option) : [this.getOptionValue(option)];\n                } else {\n                    value = metaKey ? this.modelValue || [] : [];\n                    value = [...value, this.getOptionValue(option)];\n                }\n            } else {\n                value = selected ? this.removeOption(option) : [...(this.modelValue || []), this.getOptionValue(option)];\n            }\n\n            this.updateModel(event, value);\n        },\n        onOptionSelectRange(event, start = -1, end = -1) {\n            start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n            end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n\n            if (start !== -1 && end !== -1) {\n                const rangeStart = Math.min(start, end);\n                const rangeEnd = Math.max(start, end);\n                const value = this.visibleOptions\n                    .slice(rangeStart, rangeEnd + 1)\n                    .filter((option) => this.isValidOption(option))\n                    .map((option) => this.getOptionValue(option));\n\n                this.updateModel(event, value);\n            }\n        },\n        onFilterChange(event) {\n            this.$emit('filter', { originalEvent: event, value: event.target.value });\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.findFirstFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.findLastFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findFirstOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findLastOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedOptionIndex !== -1) {\n                if (this.multiple && event.shiftKey) this.onOptionSelectRange(event, this.focusedOptionIndex);\n                else this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        onSpaceKey(event) {\n            event.preventDefault();\n            this.onEnterKey(event);\n        },\n        onShiftKey() {\n            this.startRangeIndex = this.focusedOptionIndex;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return ObjectUtils.isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isEquals(value1, value2) {\n            return ObjectUtils.equals(value1, value2, this.equalityKey);\n        },\n        isSelected(option) {\n            const optionValue = this.getOptionValue(option);\n\n            if (this.multiple) return (this.modelValue || []).some((value) => this.isEquals(value, optionValue));\n            else return this.isEquals(this.modelValue, optionValue);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            if (this.hasSelectedOption) {\n                if (this.multiple) {\n                    for (let index = this.modelValue.length - 1; index >= 0; index--) {\n                        const value = this.modelValue[index];\n                        const matchedOptionIndex = this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option) && this.isEquals(value, this.getOptionValue(option)));\n\n                        if (matchedOptionIndex > -1) return matchedOptionIndex;\n                    }\n                } else {\n                    return this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option));\n                }\n            }\n\n            return -1;\n        },\n        findFirstSelectedOptionIndex() {\n            return this.hasSelectedOption ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findLastSelectedOptionIndex() {\n            return this.hasSelectedOption ? ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findNextSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.hasSelectedOption && index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n        },\n        findPrevSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.hasSelectedOption && index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n        },\n        findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n            let matchedOptionIndex = -1;\n\n            if (this.hasSelectedOption) {\n                if (firstCheckUp) {\n                    matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n                } else {\n                    matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n                }\n            }\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findFirstSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findLastSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n\n            if (ObjectUtils.isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n        },\n        removeOption(option) {\n            return this.modelValue.filter((val) => !ObjectUtils.equals(val, this.getOptionValue(option), this.equalityKey));\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus && !this.multiple) {\n                    this.onOptionSelect(event, this.visibleOptions[index]);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption && !this.multiple && this.focused) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        updateModel(event, value) {\n            this.$emit('update:modelValue', value);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        flatOptions(options) {\n            return (options || []).reduce((result, option, index) => {\n                result.push({ optionGroup: option, group: true, index });\n\n                const optionGroupChildren = this.getOptionGroupChildren(option);\n\n                optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n\n                return result;\n            }, []);\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        visibleOptions() {\n            const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n\n            return this.filterValue ? FilterService.filter(options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : options;\n        },\n        hasSelectedOption() {\n            return ObjectUtils.isNotEmpty(this.modelValue);\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return ObjectUtils.isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.hasSelectedOption ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.modelValue.length : '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        InputIcon,\n        IconField,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","modelValue","options","Array","optionLabel","optionValue","optionDisabled","optionGroupLabel","optionGroupChildren","listStyle","scrollHeight","type","String","invalid","Boolean","disabled","dataKey","multiple","metaKeySelection","filter","filterPlaceholder","filterLocale","filterMatchMode","filterFields","virtualScrollerOptions","Object","autoOptionFocus","selectOnFocus","focusOnHover","highlightOnSelect","checkmark","filterMessage","selectionMessage","emptySelectionMessage","emptyFilterMessage","emptyMessage","filterIcon","undefined","striped","tabindex","Number","ariaLabel","ariaLabelledby","style","ListboxStyle","provide","$pcListbox","$parentInstance","BaseListbox","inheritAttrs","emits","list","virtualScroller","optionTouched","startRangeIndex","searchTimeout","searchValue","data","id","$attrs","filterValue","focused","focusedOptionIndex","watch","$attrsId","newValue","UniqueComponentId","autoUpdateModel","mounted","methods","getOptionIndex","index","fn","virtualScrollerDisabled","getOptionLabel","option","ObjectUtils","resolveFieldData","getOptionValue","getOptionRenderKey","getPTOptions","itemOptions","key","ptm","context","selected","isSelected","isOptionDisabled","isOptionGroup","optionGroup","group","getOptionGroupLabel","getOptionGroupChildren","getAriaPosInset","_this","visibleOptions","slice","length","onFirstHiddenFocus","DomHandler","focus","firstFocusableEl","getFirstFocusableElement","$el","$refs","lastHiddenFocusableElement","tabIndex","isElement","firstHiddenFocusableElement","onLastHiddenFocus","event","relatedTarget","onFocusout","contains","onListFocus","findFirstFocusedOptionIndex","findSelectedOptionIndex","$emit","onListBlur","onListKeyDown","_this2","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onSpaceKey","onShiftKey","value","isValidOption","map","updateModel","preventDefault","isPrintableCharacter","searchOptions","onOptionSelect","arguments","onOptionSelectMultiple","onOptionSelectSingle","onOptionMouseDown","changeFocusedOptionIndex","onOptionMouseMove","onOptionTouchEnd","onOptionDblClick","item","originalEvent","valueChanged","metaSelection","removeOption","concat","_toConsumableArray","onOptionSelectRange","_this3","start","end","findNearestSelectedOptionIndex","rangeStart","Math","min","rangeEnd","max","onFilterChange","target","onFilterBlur","onFilterKeyDown","onArrowLeftKey","onEnterKey","optionIndex","findNextOptionIndex","shiftKey","findPrevOptionIndex","findLastFocusedOptionIndex","pressedInInputText","currentTarget","setSelectionRange","selectionStart","findFirstOptionIndex","len","findLastOptionIndex","scrollInView","isOptionMatched","_this$getOptionLabel","toLocaleLowerCase","startsWith","isNotEmpty","isValidSelectedOption","isEquals","value1","value2","equals","equalityKey","_this4","some","_this5","findIndex","_this6","findLastIndex","_this7","matchedOptionIndex","_this8","_this9","hasSelectedOption","_loop","v","_ret","findFirstSelectedOptionIndex","_this10","findLastSelectedOptionIndex","_this11","findNextSelectedOptionIndex","_this12","findPrevSelectedOptionIndex","_this13","firstCheckUp","selectedIndex","char","_this14","clearTimeout","setTimeout","_this15","val","_this16","$nextTick","focusedOptionId","element","findSingle","scrollIntoView","block","inline","behavior","scrollToIndex","flatOptions","_this17","reduce","result","push","forEach","o","listRef","el","contentRef","virtualScrollerRef","computed","FilterService","searchFields","filterResultMessageText","filterMessageText","replaceAll","emptyFilterMessageText","$primevue","config","locale","searchMessage","emptySearchMessage","emptyMessageText","selectionMessageText","emptySelectionMessageText","selectedMessageText","ariaSetSize","_this18","directives","ripple","Ripple","components","InputText","VirtualScroller","InputIcon","IconField","SearchIcon","CheckIcon","BlankIcon","_openBlock","_createElementBlock","_mergeProps","$data","_ctx","cx","$options","apply","ptmi","_createElementVNode","ref","role","onFocus","$slots","header","_renderSlot","_createVNode","_component_IconField","unstyled","_component_InputText","$event","placeholder","autocomplete","onInput","onBlur","onKeydown","pt","_component_InputIcon","_createBlock","_component_SearchIcon","_component_VirtualScroller","items","height","content","_withCtx","_ref","styleClass","getItemOptions","contentStyle","itemSize","_Fragment","_renderList","i","_withDirectives","onClick","onMousedown","onMousemove","onTouchend","onDblclick","_component_CheckIcon","_component_BlankIcon","_createTextVNode","_toDisplayString","loader","_ref2"],"mappings":"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"}